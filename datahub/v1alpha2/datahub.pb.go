/// This file has messages related to Kubernetes metadata

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v4.0.0
// source: datahub/v1alpha2/datahub.proto

package v1alpha2

import (
	context "context"
	v1alpha2 "github.com/containers-ai/api/datahub/metric/v1alpha2"
	v1alpha23 "github.com/containers-ai/api/datahub/prediction/v1alpha2"
	v1alpha24 "github.com/containers-ai/api/datahub/recommendation/v1alpha2"
	v1alpha21 "github.com/containers-ai/api/datahub/resource/metadata/v1alpha2"
	v1alpha22 "github.com/containers-ai/api/datahub/resource/v1alpha2"
	v1alpha25 "github.com/containers-ai/api/datahub/score/v1alpha2"
	proto "github.com/golang/protobuf/proto"
	status "google.golang.org/genproto/googleapis/rpc/status"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status1 "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type QueryCondition_Order int32

const (
	QueryCondition_ASC  QueryCondition_Order = 0
	QueryCondition_DESC QueryCondition_Order = 1
)

// Enum value maps for QueryCondition_Order.
var (
	QueryCondition_Order_name = map[int32]string{
		0: "ASC",
		1: "DESC",
	}
	QueryCondition_Order_value = map[string]int32{
		"ASC":  0,
		"DESC": 1,
	}
)

func (x QueryCondition_Order) Enum() *QueryCondition_Order {
	p := new(QueryCondition_Order)
	*p = x
	return p
}

func (x QueryCondition_Order) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryCondition_Order) Descriptor() protoreflect.EnumDescriptor {
	return file_datahub_v1alpha2_datahub_proto_enumTypes[0].Descriptor()
}

func (QueryCondition_Order) Type() protoreflect.EnumType {
	return &file_datahub_v1alpha2_datahub_proto_enumTypes[0]
}

func (x QueryCondition_Order) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryCondition_Order.Descriptor instead.
func (QueryCondition_Order) EnumDescriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{0, 0}
}

type QueryCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeRange *v1alpha2.TimeRange  `protobuf:"bytes,1,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	Order     QueryCondition_Order `protobuf:"varint,2,opt,name=order,proto3,enum=containersai.datahub.v1alpha2.QueryCondition_Order" json:"order,omitempty"`
	Limit     uint64               `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *QueryCondition) Reset() {
	*x = QueryCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCondition) ProtoMessage() {}

func (x *QueryCondition) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCondition.ProtoReflect.Descriptor instead.
func (*QueryCondition) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{0}
}

func (x *QueryCondition) GetTimeRange() *v1alpha2.TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *QueryCondition) GetOrder() QueryCondition_Order {
	if x != nil {
		return x.Order
	}
	return QueryCondition_ASC
}

func (x *QueryCondition) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

//*
// Represents a request for listing metric data of pods
//
type ListPodMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespacedName *v1alpha21.NamespacedName `protobuf:"bytes,1,opt,name=namespaced_name,json=namespacedName,proto3" json:"namespaced_name,omitempty"`
	QueryCondition *QueryCondition           `protobuf:"bytes,2,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
}

func (x *ListPodMetricsRequest) Reset() {
	*x = ListPodMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPodMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPodMetricsRequest) ProtoMessage() {}

func (x *ListPodMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPodMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListPodMetricsRequest) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{1}
}

func (x *ListPodMetricsRequest) GetNamespacedName() *v1alpha21.NamespacedName {
	if x != nil {
		return x.NamespacedName
	}
	return nil
}

func (x *ListPodMetricsRequest) GetQueryCondition() *QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

//*
// Represents a response for a listing metrics of pods request
//
type ListPodMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     *status.Status        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	PodMetrics []*v1alpha2.PodMetric `protobuf:"bytes,2,rep,name=pod_metrics,json=podMetrics,proto3" json:"pod_metrics,omitempty"`
}

func (x *ListPodMetricsResponse) Reset() {
	*x = ListPodMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPodMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPodMetricsResponse) ProtoMessage() {}

func (x *ListPodMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPodMetricsResponse.ProtoReflect.Descriptor instead.
func (*ListPodMetricsResponse) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{2}
}

func (x *ListPodMetricsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListPodMetricsResponse) GetPodMetrics() []*v1alpha2.PodMetric {
	if x != nil {
		return x.PodMetrics
	}
	return nil
}

//*
// Represents a request for listing metrics of nodes
//
type ListNodeMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeNames      []string        `protobuf:"bytes,1,rep,name=node_names,json=nodeNames,proto3" json:"node_names,omitempty"`
	QueryCondition *QueryCondition `protobuf:"bytes,2,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
}

func (x *ListNodeMetricsRequest) Reset() {
	*x = ListNodeMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodeMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeMetricsRequest) ProtoMessage() {}

func (x *ListNodeMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListNodeMetricsRequest) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{3}
}

func (x *ListNodeMetricsRequest) GetNodeNames() []string {
	if x != nil {
		return x.NodeNames
	}
	return nil
}

func (x *ListNodeMetricsRequest) GetQueryCondition() *QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

//*
// Represents a response for a listing metrics of nodes request
//
type ListNodeMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      *status.Status         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	NodeMetrics []*v1alpha2.NodeMetric `protobuf:"bytes,2,rep,name=node_metrics,json=nodeMetrics,proto3" json:"node_metrics,omitempty"`
}

func (x *ListNodeMetricsResponse) Reset() {
	*x = ListNodeMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodeMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeMetricsResponse) ProtoMessage() {}

func (x *ListNodeMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeMetricsResponse.ProtoReflect.Descriptor instead.
func (*ListNodeMetricsResponse) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{4}
}

func (x *ListNodeMetricsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListNodeMetricsResponse) GetNodeMetrics() []*v1alpha2.NodeMetric {
	if x != nil {
		return x.NodeMetrics
	}
	return nil
}

//*
// Represents a response for a listing pods request
//
type ListPodsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *status.Status   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Pods   []*v1alpha22.Pod `protobuf:"bytes,2,rep,name=pods,proto3" json:"pods,omitempty"`
}

func (x *ListPodsResponse) Reset() {
	*x = ListPodsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPodsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPodsResponse) ProtoMessage() {}

func (x *ListPodsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPodsResponse.ProtoReflect.Descriptor instead.
func (*ListPodsResponse) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{5}
}

func (x *ListPodsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListPodsResponse) GetPods() []*v1alpha22.Pod {
	if x != nil {
		return x.Pods
	}
	return nil
}

//*
// Represents a request for listing pods
//
type ListPodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scaler      *v1alpha21.NamespacedName `protobuf:"bytes,1,opt,name=scaler,proto3" json:"scaler,omitempty"`
	IsPredicted bool                      `protobuf:"varint,2,opt,name=is_predicted,json=isPredicted,proto3" json:"is_predicted,omitempty"`
}

func (x *ListPodsRequest) Reset() {
	*x = ListPodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPodsRequest) ProtoMessage() {}

func (x *ListPodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPodsRequest.ProtoReflect.Descriptor instead.
func (*ListPodsRequest) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{6}
}

func (x *ListPodsRequest) GetScaler() *v1alpha21.NamespacedName {
	if x != nil {
		return x.Scaler
	}
	return nil
}

func (x *ListPodsRequest) GetIsPredicted() bool {
	if x != nil {
		return x.IsPredicted
	}
	return false
}

//*
// Represents a request for listing nodes
//
type ListNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPredicted bool `protobuf:"varint,1,opt,name=is_predicted,json=isPredicted,proto3" json:"is_predicted,omitempty"`
}

func (x *ListNodesRequest) Reset() {
	*x = ListNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesRequest) ProtoMessage() {}

func (x *ListNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesRequest.ProtoReflect.Descriptor instead.
func (*ListNodesRequest) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{7}
}

func (x *ListNodesRequest) GetIsPredicted() bool {
	if x != nil {
		return x.IsPredicted
	}
	return false
}

//*
// Represents a response for a listing nodes request
//
type ListNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *status.Status    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Nodes  []*v1alpha22.Node `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ListNodesResponse) Reset() {
	*x = ListNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesResponse) ProtoMessage() {}

func (x *ListNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesResponse.ProtoReflect.Descriptor instead.
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{8}
}

func (x *ListNodesResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListNodesResponse) GetNodes() []*v1alpha22.Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

//*
// Represents a request for listing predictions of pods
//
type ListPodPredictionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespacedName *v1alpha21.NamespacedName `protobuf:"bytes,1,opt,name=namespaced_name,json=namespacedName,proto3" json:"namespaced_name,omitempty"`
	QueryCondition *QueryCondition           `protobuf:"bytes,2,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
}

func (x *ListPodPredictionsRequest) Reset() {
	*x = ListPodPredictionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPodPredictionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPodPredictionsRequest) ProtoMessage() {}

func (x *ListPodPredictionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPodPredictionsRequest.ProtoReflect.Descriptor instead.
func (*ListPodPredictionsRequest) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{9}
}

func (x *ListPodPredictionsRequest) GetNamespacedName() *v1alpha21.NamespacedName {
	if x != nil {
		return x.NamespacedName
	}
	return nil
}

func (x *ListPodPredictionsRequest) GetQueryCondition() *QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

//*
// Represents a response for a listing predictions of pods request
//
type ListPodPredictionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status         *status.Status             `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	PodPredictions []*v1alpha23.PodPrediction `protobuf:"bytes,2,rep,name=pod_predictions,json=podPredictions,proto3" json:"pod_predictions,omitempty"`
}

func (x *ListPodPredictionsResponse) Reset() {
	*x = ListPodPredictionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPodPredictionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPodPredictionsResponse) ProtoMessage() {}

func (x *ListPodPredictionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPodPredictionsResponse.ProtoReflect.Descriptor instead.
func (*ListPodPredictionsResponse) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{10}
}

func (x *ListPodPredictionsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListPodPredictionsResponse) GetPodPredictions() []*v1alpha23.PodPrediction {
	if x != nil {
		return x.PodPredictions
	}
	return nil
}

//*
// Represents a request for listing predictions of nodes
//
type ListNodePredictionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeNames      []string        `protobuf:"bytes,1,rep,name=node_names,json=nodeNames,proto3" json:"node_names,omitempty"`
	QueryCondition *QueryCondition `protobuf:"bytes,2,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
}

func (x *ListNodePredictionsRequest) Reset() {
	*x = ListNodePredictionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodePredictionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodePredictionsRequest) ProtoMessage() {}

func (x *ListNodePredictionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodePredictionsRequest.ProtoReflect.Descriptor instead.
func (*ListNodePredictionsRequest) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{11}
}

func (x *ListNodePredictionsRequest) GetNodeNames() []string {
	if x != nil {
		return x.NodeNames
	}
	return nil
}

func (x *ListNodePredictionsRequest) GetQueryCondition() *QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

//*
// Represents a response for a listing predictions of nodes request
//
type ListNodePredictionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          *status.Status              `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	NodePredictions []*v1alpha23.NodePrediction `protobuf:"bytes,2,rep,name=node_predictions,json=nodePredictions,proto3" json:"node_predictions,omitempty"`
}

func (x *ListNodePredictionsResponse) Reset() {
	*x = ListNodePredictionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodePredictionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodePredictionsResponse) ProtoMessage() {}

func (x *ListNodePredictionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodePredictionsResponse.ProtoReflect.Descriptor instead.
func (*ListNodePredictionsResponse) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{12}
}

func (x *ListNodePredictionsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListNodePredictionsResponse) GetNodePredictions() []*v1alpha23.NodePrediction {
	if x != nil {
		return x.NodePredictions
	}
	return nil
}

//*
// Represents a request for listing recommendations of pods
//
type ListPodRecommendationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespacedName *v1alpha21.NamespacedName `protobuf:"bytes,1,opt,name=namespaced_name,json=namespacedName,proto3" json:"namespaced_name,omitempty"`
	QueryCondition *QueryCondition           `protobuf:"bytes,2,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
}

func (x *ListPodRecommendationsRequest) Reset() {
	*x = ListPodRecommendationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPodRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPodRecommendationsRequest) ProtoMessage() {}

func (x *ListPodRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPodRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*ListPodRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{13}
}

func (x *ListPodRecommendationsRequest) GetNamespacedName() *v1alpha21.NamespacedName {
	if x != nil {
		return x.NamespacedName
	}
	return nil
}

func (x *ListPodRecommendationsRequest) GetQueryCondition() *QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

//*
// Represents a response for listing pod recommendations request
//
type ListPodRecommendationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status             *status.Status                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	PodRecommendations []*v1alpha24.PodRecommendation `protobuf:"bytes,2,rep,name=pod_recommendations,json=podRecommendations,proto3" json:"pod_recommendations,omitempty"`
}

func (x *ListPodRecommendationsResponse) Reset() {
	*x = ListPodRecommendationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPodRecommendationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPodRecommendationsResponse) ProtoMessage() {}

func (x *ListPodRecommendationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPodRecommendationsResponse.ProtoReflect.Descriptor instead.
func (*ListPodRecommendationsResponse) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{14}
}

func (x *ListPodRecommendationsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListPodRecommendationsResponse) GetPodRecommendations() []*v1alpha24.PodRecommendation {
	if x != nil {
		return x.PodRecommendations
	}
	return nil
}

//*
// Represents a request for listing system scores of pod scheduled on node
//
type ListSimulatedSchedulingScoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryCondition *QueryCondition `protobuf:"bytes,1,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
}

func (x *ListSimulatedSchedulingScoresRequest) Reset() {
	*x = ListSimulatedSchedulingScoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSimulatedSchedulingScoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSimulatedSchedulingScoresRequest) ProtoMessage() {}

func (x *ListSimulatedSchedulingScoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSimulatedSchedulingScoresRequest.ProtoReflect.Descriptor instead.
func (*ListSimulatedSchedulingScoresRequest) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{15}
}

func (x *ListSimulatedSchedulingScoresRequest) GetQueryCondition() *QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

//*
// Represents a response for listing system scores request
//
type ListSimulatedSchedulingScoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *status.Status                        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Scores []*v1alpha25.SimulatedSchedulingScore `protobuf:"bytes,2,rep,name=scores,proto3" json:"scores,omitempty"`
}

func (x *ListSimulatedSchedulingScoresResponse) Reset() {
	*x = ListSimulatedSchedulingScoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSimulatedSchedulingScoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSimulatedSchedulingScoresResponse) ProtoMessage() {}

func (x *ListSimulatedSchedulingScoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSimulatedSchedulingScoresResponse.ProtoReflect.Descriptor instead.
func (*ListSimulatedSchedulingScoresResponse) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{16}
}

func (x *ListSimulatedSchedulingScoresResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListSimulatedSchedulingScoresResponse) GetScores() []*v1alpha25.SimulatedSchedulingScore {
	if x != nil {
		return x.Scores
	}
	return nil
}

//*
// Represents a request for creating predictions of containers' metric data belonging to a pod
type CreatePodPredictionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodPredictions []*v1alpha23.PodPrediction `protobuf:"bytes,1,rep,name=pod_predictions,json=podPredictions,proto3" json:"pod_predictions,omitempty"`
}

func (x *CreatePodPredictionsRequest) Reset() {
	*x = CreatePodPredictionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePodPredictionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePodPredictionsRequest) ProtoMessage() {}

func (x *CreatePodPredictionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePodPredictionsRequest.ProtoReflect.Descriptor instead.
func (*CreatePodPredictionsRequest) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{17}
}

func (x *CreatePodPredictionsRequest) GetPodPredictions() []*v1alpha23.PodPrediction {
	if x != nil {
		return x.PodPredictions
	}
	return nil
}

//*
// Represents a request for creating predictions of a node metric data
//
type CreateNodePredictionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodePredictions []*v1alpha23.NodePrediction `protobuf:"bytes,1,rep,name=node_predictions,json=nodePredictions,proto3" json:"node_predictions,omitempty"`
}

func (x *CreateNodePredictionsRequest) Reset() {
	*x = CreateNodePredictionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNodePredictionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodePredictionsRequest) ProtoMessage() {}

func (x *CreateNodePredictionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodePredictionsRequest.ProtoReflect.Descriptor instead.
func (*CreateNodePredictionsRequest) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{18}
}

func (x *CreateNodePredictionsRequest) GetNodePredictions() []*v1alpha23.NodePrediction {
	if x != nil {
		return x.NodePredictions
	}
	return nil
}

//*
// Represents a request for creating a pod's recommendation
//
type CreatePodRecommendationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodRecommendations []*v1alpha24.PodRecommendation `protobuf:"bytes,1,rep,name=pod_recommendations,json=podRecommendations,proto3" json:"pod_recommendations,omitempty"`
}

func (x *CreatePodRecommendationsRequest) Reset() {
	*x = CreatePodRecommendationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePodRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePodRecommendationsRequest) ProtoMessage() {}

func (x *CreatePodRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePodRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*CreatePodRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{19}
}

func (x *CreatePodRecommendationsRequest) GetPodRecommendations() []*v1alpha24.PodRecommendation {
	if x != nil {
		return x.PodRecommendations
	}
	return nil
}

//*
// Represents a request for creating pods
//
type CreatePodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pods []*v1alpha22.Pod `protobuf:"bytes,1,rep,name=pods,proto3" json:"pods,omitempty"`
}

func (x *CreatePodsRequest) Reset() {
	*x = CreatePodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePodsRequest) ProtoMessage() {}

func (x *CreatePodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePodsRequest.ProtoReflect.Descriptor instead.
func (*CreatePodsRequest) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{20}
}

func (x *CreatePodsRequest) GetPods() []*v1alpha22.Pod {
	if x != nil {
		return x.Pods
	}
	return nil
}

//*
// Represents a request for adding nodes
//
type CreateNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*v1alpha22.Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *CreateNodesRequest) Reset() {
	*x = CreateNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodesRequest) ProtoMessage() {}

func (x *CreateNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodesRequest.ProtoReflect.Descriptor instead.
func (*CreateNodesRequest) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{21}
}

func (x *CreateNodesRequest) GetNodes() []*v1alpha22.Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

//*
// Represents a request for adding scheduling scores produced by ai engine
//
type CreateSimulatedSchedulingScoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scores []*v1alpha25.SimulatedSchedulingScore `protobuf:"bytes,1,rep,name=scores,proto3" json:"scores,omitempty"`
}

func (x *CreateSimulatedSchedulingScoresRequest) Reset() {
	*x = CreateSimulatedSchedulingScoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSimulatedSchedulingScoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSimulatedSchedulingScoresRequest) ProtoMessage() {}

func (x *CreateSimulatedSchedulingScoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSimulatedSchedulingScoresRequest.ProtoReflect.Descriptor instead.
func (*CreateSimulatedSchedulingScoresRequest) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{22}
}

func (x *CreateSimulatedSchedulingScoresRequest) GetScores() []*v1alpha25.SimulatedSchedulingScore {
	if x != nil {
		return x.Scores
	}
	return nil
}

//*
// Represents a request for updating pods data
//
type UpdatePodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedPods []*UpdatePodsRequest_UpdatedPod `protobuf:"bytes,1,rep,name=updated_pods,json=updatedPods,proto3" json:"updated_pods,omitempty"`
}

func (x *UpdatePodsRequest) Reset() {
	*x = UpdatePodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePodsRequest) ProtoMessage() {}

func (x *UpdatePodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePodsRequest.ProtoReflect.Descriptor instead.
func (*UpdatePodsRequest) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{23}
}

func (x *UpdatePodsRequest) GetUpdatedPods() []*UpdatePodsRequest_UpdatedPod {
	if x != nil {
		return x.UpdatedPods
	}
	return nil
}

//*
// Represents a request for upating nodes
//
type UpdateNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedNodes []*UpdateNodesRequest_UpdatedNode `protobuf:"bytes,1,rep,name=updated_nodes,json=updatedNodes,proto3" json:"updated_nodes,omitempty"`
}

func (x *UpdateNodesRequest) Reset() {
	*x = UpdateNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodesRequest) ProtoMessage() {}

func (x *UpdateNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodesRequest.ProtoReflect.Descriptor instead.
func (*UpdateNodesRequest) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateNodesRequest) GetUpdatedNodes() []*UpdateNodesRequest_UpdatedNode {
	if x != nil {
		return x.UpdatedNodes
	}
	return nil
}

//*
// Represents a request for deleting pods data
//
type DeletePodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pods []*v1alpha22.Pod `protobuf:"bytes,1,rep,name=pods,proto3" json:"pods,omitempty"`
}

func (x *DeletePodsRequest) Reset() {
	*x = DeletePodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePodsRequest) ProtoMessage() {}

func (x *DeletePodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePodsRequest.ProtoReflect.Descriptor instead.
func (*DeletePodsRequest) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{25}
}

func (x *DeletePodsRequest) GetPods() []*v1alpha22.Pod {
	if x != nil {
		return x.Pods
	}
	return nil
}

//*
// Represents a request for stoping nodes
//
type DeleteNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*v1alpha22.Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *DeleteNodesRequest) Reset() {
	*x = DeleteNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNodesRequest) ProtoMessage() {}

func (x *DeleteNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNodesRequest.ProtoReflect.Descriptor instead.
func (*DeleteNodesRequest) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteNodesRequest) GetNodes() []*v1alpha22.Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type UpdatePodsRequest_UpdatedPod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// namespace and name in containersai.datahub.resource.metadata.v1alpha2.NamespacedName are required
	NamespacedName *v1alpha21.NamespacedName                     `protobuf:"bytes,1,opt,name=namespaced_name,json=namespacedName,proto3" json:"namespaced_name,omitempty"`
	IsPredicted    *UpdatePodsRequest_UpdatedPod_IsPredictedWrap `protobuf:"bytes,2,opt,name=is_predicted,json=isPredicted,proto3" json:"is_predicted,omitempty"`
}

func (x *UpdatePodsRequest_UpdatedPod) Reset() {
	*x = UpdatePodsRequest_UpdatedPod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePodsRequest_UpdatedPod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePodsRequest_UpdatedPod) ProtoMessage() {}

func (x *UpdatePodsRequest_UpdatedPod) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePodsRequest_UpdatedPod.ProtoReflect.Descriptor instead.
func (*UpdatePodsRequest_UpdatedPod) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{23, 0}
}

func (x *UpdatePodsRequest_UpdatedPod) GetNamespacedName() *v1alpha21.NamespacedName {
	if x != nil {
		return x.NamespacedName
	}
	return nil
}

func (x *UpdatePodsRequest_UpdatedPod) GetIsPredicted() *UpdatePodsRequest_UpdatedPod_IsPredictedWrap {
	if x != nil {
		return x.IsPredicted
	}
	return nil
}

type UpdatePodsRequest_UpdatedPod_IsPredictedWrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPredicted bool `protobuf:"varint,1,opt,name=is_predicted,json=isPredicted,proto3" json:"is_predicted,omitempty"`
}

func (x *UpdatePodsRequest_UpdatedPod_IsPredictedWrap) Reset() {
	*x = UpdatePodsRequest_UpdatedPod_IsPredictedWrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePodsRequest_UpdatedPod_IsPredictedWrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePodsRequest_UpdatedPod_IsPredictedWrap) ProtoMessage() {}

func (x *UpdatePodsRequest_UpdatedPod_IsPredictedWrap) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePodsRequest_UpdatedPod_IsPredictedWrap.ProtoReflect.Descriptor instead.
func (*UpdatePodsRequest_UpdatedPod_IsPredictedWrap) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{23, 0, 0}
}

func (x *UpdatePodsRequest_UpdatedPod_IsPredictedWrap) GetIsPredicted() bool {
	if x != nil {
		return x.IsPredicted
	}
	return false
}

type UpdateNodesRequest_UpdatedNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is required
	Name        string                                          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsPredicted *UpdateNodesRequest_UpdatedNode_IsPredictedWrap `protobuf:"bytes,2,opt,name=is_predicted,json=isPredicted,proto3" json:"is_predicted,omitempty"`
}

func (x *UpdateNodesRequest_UpdatedNode) Reset() {
	*x = UpdateNodesRequest_UpdatedNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodesRequest_UpdatedNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodesRequest_UpdatedNode) ProtoMessage() {}

func (x *UpdateNodesRequest_UpdatedNode) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodesRequest_UpdatedNode.ProtoReflect.Descriptor instead.
func (*UpdateNodesRequest_UpdatedNode) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{24, 0}
}

func (x *UpdateNodesRequest_UpdatedNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateNodesRequest_UpdatedNode) GetIsPredicted() *UpdateNodesRequest_UpdatedNode_IsPredictedWrap {
	if x != nil {
		return x.IsPredicted
	}
	return nil
}

type UpdateNodesRequest_UpdatedNode_IsPredictedWrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPredicted bool `protobuf:"varint,1,opt,name=is_predicted,json=isPredicted,proto3" json:"is_predicted,omitempty"`
}

func (x *UpdateNodesRequest_UpdatedNode_IsPredictedWrap) Reset() {
	*x = UpdateNodesRequest_UpdatedNode_IsPredictedWrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodesRequest_UpdatedNode_IsPredictedWrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodesRequest_UpdatedNode_IsPredictedWrap) ProtoMessage() {}

func (x *UpdateNodesRequest_UpdatedNode_IsPredictedWrap) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_v1alpha2_datahub_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodesRequest_UpdatedNode_IsPredictedWrap.ProtoReflect.Descriptor instead.
func (*UpdateNodesRequest_UpdatedNode_IsPredictedWrap) Descriptor() ([]byte, []int) {
	return file_datahub_v1alpha2_datahub_proto_rawDescGZIP(), []int{24, 0, 0}
}

func (x *UpdateNodesRequest_UpdatedNode_IsPredictedWrap) GetIsPredicted() bool {
	if x != nil {
		return x.IsPredicted
	}
	return false
}

var File_datahub_v1alpha2_datahub_proto protoreflect.FileDescriptor

var file_datahub_v1alpha2_datahub_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x1a,
	0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x64, 0x61, 0x74,
	0x61, 0x68, 0x75, 0x62, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x70,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x2f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x22, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xdd, 0x01, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x32, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x1a, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53,
	0x43, 0x10, 0x01, 0x22, 0xd9, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x68, 0x0a,
	0x0f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x96, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x50, 0x0a, 0x0b, 0x70, 0x6f, 0x64, 0x5f, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x2e, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x0a, 0x70, 0x6f,
	0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x56, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x53, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x7f, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x50,
	0x6f, 0x64, 0x52, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x06,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x50,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x22, 0x35, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x22,
	0x83, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x42, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xdd, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f,
	0x64, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x68, 0x0a, 0x0f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0e, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x56, 0x0a,
	0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xaa, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f,
	0x64, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x60, 0x0a, 0x0f, 0x70, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62,
	0x2e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x32, 0x2e, 0x50, 0x6f, 0x64, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0e, 0x70, 0x6f, 0x64, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x50,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x56, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xae, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x63, 0x0a, 0x10, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xe1, 0x01, 0x0a, 0x1d, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x68, 0x0a, 0x0f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xbe, 0x01,
	0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x70, 0x0a, 0x13,
	0x70, 0x6f, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x70, 0x6f, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x7e,
	0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xaa,
	0x01, 0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x55, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x7f, 0x0a, 0x1b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x64, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x0f, 0x70, 0x6f,
	0x64, 0x5f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x50,
	0x6f, 0x64, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x70, 0x6f,
	0x64, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x83, 0x01, 0x0a,
	0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x63, 0x0a,
	0x10, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x70,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0f, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x64,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x70, 0x0a, 0x13, 0x70, 0x6f, 0x64, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x2e, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x70, 0x6f, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x54, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a,
	0x04, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x32, 0x2e, 0x50, 0x6f, 0x64, 0x52, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x22, 0x58,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x7f, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x55, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x92, 0x03, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x5e, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x50,
	0x6f, 0x64, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x64, 0x73, 0x1a,
	0x9c, 0x02, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x64, 0x12, 0x68,
	0x0a, 0x0f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x6e, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x70,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x64, 0x2e, 0x49, 0x73, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x57, 0x72, 0x61, 0x70, 0x52, 0x0b, 0x69, 0x73, 0x50,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x1a, 0x34, 0x0a, 0x0f, 0x49, 0x73, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x57, 0x72, 0x61, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x73, 0x5f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x22, 0xc4,
	0x02, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x62, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0xc9, 0x01, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x70, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x6f,
	0x64, 0x65, 0x2e, 0x49, 0x73, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x57, 0x72,
	0x61, 0x70, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x1a,
	0x34, 0x0a, 0x0f, 0x49, 0x73, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x57, 0x72,
	0x61, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x65, 0x64, 0x22, 0x54, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x04, 0x70, 0x6f,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x32, 0x2e, 0x50, 0x6f, 0x64, 0x52, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x22, 0x58, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x42, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x32, 0xb1, 0x10, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7f, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x34, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x0f, 0x4c, 0x69,
	0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x35, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d,
	0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x73, 0x12, 0x2e, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a,
	0x09, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2f, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x8b, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x50, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x39, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8e, 0x01,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x97,
	0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f,
	0x64, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xac, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x43, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69,
	0x6e, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x44, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x64, 0x73, 0x12, 0x30, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x56, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x31, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x64, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x64, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12,
	0x6a, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f,
	0x64, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x7e, 0x0a,
	0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x12, 0x45, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x54, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x64, 0x73, 0x12, 0x30, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x64, 0x73, 0x12, 0x30, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x00, 0x12, 0x56, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x2d, 0x61, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_datahub_v1alpha2_datahub_proto_rawDescOnce sync.Once
	file_datahub_v1alpha2_datahub_proto_rawDescData = file_datahub_v1alpha2_datahub_proto_rawDesc
)

func file_datahub_v1alpha2_datahub_proto_rawDescGZIP() []byte {
	file_datahub_v1alpha2_datahub_proto_rawDescOnce.Do(func() {
		file_datahub_v1alpha2_datahub_proto_rawDescData = protoimpl.X.CompressGZIP(file_datahub_v1alpha2_datahub_proto_rawDescData)
	})
	return file_datahub_v1alpha2_datahub_proto_rawDescData
}

var file_datahub_v1alpha2_datahub_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_datahub_v1alpha2_datahub_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_datahub_v1alpha2_datahub_proto_goTypes = []interface{}{
	(QueryCondition_Order)(0),                              // 0: containersai.datahub.v1alpha2.QueryCondition.Order
	(*QueryCondition)(nil),                                 // 1: containersai.datahub.v1alpha2.QueryCondition
	(*ListPodMetricsRequest)(nil),                          // 2: containersai.datahub.v1alpha2.ListPodMetricsRequest
	(*ListPodMetricsResponse)(nil),                         // 3: containersai.datahub.v1alpha2.ListPodMetricsResponse
	(*ListNodeMetricsRequest)(nil),                         // 4: containersai.datahub.v1alpha2.ListNodeMetricsRequest
	(*ListNodeMetricsResponse)(nil),                        // 5: containersai.datahub.v1alpha2.ListNodeMetricsResponse
	(*ListPodsResponse)(nil),                               // 6: containersai.datahub.v1alpha2.ListPodsResponse
	(*ListPodsRequest)(nil),                                // 7: containersai.datahub.v1alpha2.ListPodsRequest
	(*ListNodesRequest)(nil),                               // 8: containersai.datahub.v1alpha2.ListNodesRequest
	(*ListNodesResponse)(nil),                              // 9: containersai.datahub.v1alpha2.ListNodesResponse
	(*ListPodPredictionsRequest)(nil),                      // 10: containersai.datahub.v1alpha2.ListPodPredictionsRequest
	(*ListPodPredictionsResponse)(nil),                     // 11: containersai.datahub.v1alpha2.ListPodPredictionsResponse
	(*ListNodePredictionsRequest)(nil),                     // 12: containersai.datahub.v1alpha2.ListNodePredictionsRequest
	(*ListNodePredictionsResponse)(nil),                    // 13: containersai.datahub.v1alpha2.ListNodePredictionsResponse
	(*ListPodRecommendationsRequest)(nil),                  // 14: containersai.datahub.v1alpha2.ListPodRecommendationsRequest
	(*ListPodRecommendationsResponse)(nil),                 // 15: containersai.datahub.v1alpha2.ListPodRecommendationsResponse
	(*ListSimulatedSchedulingScoresRequest)(nil),           // 16: containersai.datahub.v1alpha2.ListSimulatedSchedulingScoresRequest
	(*ListSimulatedSchedulingScoresResponse)(nil),          // 17: containersai.datahub.v1alpha2.ListSimulatedSchedulingScoresResponse
	(*CreatePodPredictionsRequest)(nil),                    // 18: containersai.datahub.v1alpha2.CreatePodPredictionsRequest
	(*CreateNodePredictionsRequest)(nil),                   // 19: containersai.datahub.v1alpha2.CreateNodePredictionsRequest
	(*CreatePodRecommendationsRequest)(nil),                // 20: containersai.datahub.v1alpha2.CreatePodRecommendationsRequest
	(*CreatePodsRequest)(nil),                              // 21: containersai.datahub.v1alpha2.CreatePodsRequest
	(*CreateNodesRequest)(nil),                             // 22: containersai.datahub.v1alpha2.CreateNodesRequest
	(*CreateSimulatedSchedulingScoresRequest)(nil),         // 23: containersai.datahub.v1alpha2.CreateSimulatedSchedulingScoresRequest
	(*UpdatePodsRequest)(nil),                              // 24: containersai.datahub.v1alpha2.UpdatePodsRequest
	(*UpdateNodesRequest)(nil),                             // 25: containersai.datahub.v1alpha2.UpdateNodesRequest
	(*DeletePodsRequest)(nil),                              // 26: containersai.datahub.v1alpha2.DeletePodsRequest
	(*DeleteNodesRequest)(nil),                             // 27: containersai.datahub.v1alpha2.DeleteNodesRequest
	(*UpdatePodsRequest_UpdatedPod)(nil),                   // 28: containersai.datahub.v1alpha2.UpdatePodsRequest.UpdatedPod
	(*UpdatePodsRequest_UpdatedPod_IsPredictedWrap)(nil),   // 29: containersai.datahub.v1alpha2.UpdatePodsRequest.UpdatedPod.IsPredictedWrap
	(*UpdateNodesRequest_UpdatedNode)(nil),                 // 30: containersai.datahub.v1alpha2.UpdateNodesRequest.UpdatedNode
	(*UpdateNodesRequest_UpdatedNode_IsPredictedWrap)(nil), // 31: containersai.datahub.v1alpha2.UpdateNodesRequest.UpdatedNode.IsPredictedWrap
	(*v1alpha2.TimeRange)(nil),                             // 32: containersai.datahub.metric.v1alpha2.TimeRange
	(*v1alpha21.NamespacedName)(nil),                       // 33: containersai.datahub.resource.metadata.v1alpha2.NamespacedName
	(*status.Status)(nil),                                  // 34: google.rpc.Status
	(*v1alpha2.PodMetric)(nil),                             // 35: containersai.datahub.metric.v1alpha2.PodMetric
	(*v1alpha2.NodeMetric)(nil),                            // 36: containersai.datahub.metric.v1alpha2.NodeMetric
	(*v1alpha22.Pod)(nil),                                  // 37: containersai.datahub.resource.v1alpha2.Pod
	(*v1alpha22.Node)(nil),                                 // 38: containersai.datahub.resource.v1alpha2.Node
	(*v1alpha23.PodPrediction)(nil),                        // 39: containersai.datahub.prediction.v1alpha2.PodPrediction
	(*v1alpha23.NodePrediction)(nil),                       // 40: containersai.datahub.prediction.v1alpha2.NodePrediction
	(*v1alpha24.PodRecommendation)(nil),                    // 41: containersai.datahub.recommendation.v1alpha2.PodRecommendation
	(*v1alpha25.SimulatedSchedulingScore)(nil),             // 42: containersai.datahub.score.v1alpha2.SimulatedSchedulingScore
}
var file_datahub_v1alpha2_datahub_proto_depIdxs = []int32{
	32, // 0: containersai.datahub.v1alpha2.QueryCondition.time_range:type_name -> containersai.datahub.metric.v1alpha2.TimeRange
	0,  // 1: containersai.datahub.v1alpha2.QueryCondition.order:type_name -> containersai.datahub.v1alpha2.QueryCondition.Order
	33, // 2: containersai.datahub.v1alpha2.ListPodMetricsRequest.namespaced_name:type_name -> containersai.datahub.resource.metadata.v1alpha2.NamespacedName
	1,  // 3: containersai.datahub.v1alpha2.ListPodMetricsRequest.query_condition:type_name -> containersai.datahub.v1alpha2.QueryCondition
	34, // 4: containersai.datahub.v1alpha2.ListPodMetricsResponse.status:type_name -> google.rpc.Status
	35, // 5: containersai.datahub.v1alpha2.ListPodMetricsResponse.pod_metrics:type_name -> containersai.datahub.metric.v1alpha2.PodMetric
	1,  // 6: containersai.datahub.v1alpha2.ListNodeMetricsRequest.query_condition:type_name -> containersai.datahub.v1alpha2.QueryCondition
	34, // 7: containersai.datahub.v1alpha2.ListNodeMetricsResponse.status:type_name -> google.rpc.Status
	36, // 8: containersai.datahub.v1alpha2.ListNodeMetricsResponse.node_metrics:type_name -> containersai.datahub.metric.v1alpha2.NodeMetric
	34, // 9: containersai.datahub.v1alpha2.ListPodsResponse.status:type_name -> google.rpc.Status
	37, // 10: containersai.datahub.v1alpha2.ListPodsResponse.pods:type_name -> containersai.datahub.resource.v1alpha2.Pod
	33, // 11: containersai.datahub.v1alpha2.ListPodsRequest.scaler:type_name -> containersai.datahub.resource.metadata.v1alpha2.NamespacedName
	34, // 12: containersai.datahub.v1alpha2.ListNodesResponse.status:type_name -> google.rpc.Status
	38, // 13: containersai.datahub.v1alpha2.ListNodesResponse.nodes:type_name -> containersai.datahub.resource.v1alpha2.Node
	33, // 14: containersai.datahub.v1alpha2.ListPodPredictionsRequest.namespaced_name:type_name -> containersai.datahub.resource.metadata.v1alpha2.NamespacedName
	1,  // 15: containersai.datahub.v1alpha2.ListPodPredictionsRequest.query_condition:type_name -> containersai.datahub.v1alpha2.QueryCondition
	34, // 16: containersai.datahub.v1alpha2.ListPodPredictionsResponse.status:type_name -> google.rpc.Status
	39, // 17: containersai.datahub.v1alpha2.ListPodPredictionsResponse.pod_predictions:type_name -> containersai.datahub.prediction.v1alpha2.PodPrediction
	1,  // 18: containersai.datahub.v1alpha2.ListNodePredictionsRequest.query_condition:type_name -> containersai.datahub.v1alpha2.QueryCondition
	34, // 19: containersai.datahub.v1alpha2.ListNodePredictionsResponse.status:type_name -> google.rpc.Status
	40, // 20: containersai.datahub.v1alpha2.ListNodePredictionsResponse.node_predictions:type_name -> containersai.datahub.prediction.v1alpha2.NodePrediction
	33, // 21: containersai.datahub.v1alpha2.ListPodRecommendationsRequest.namespaced_name:type_name -> containersai.datahub.resource.metadata.v1alpha2.NamespacedName
	1,  // 22: containersai.datahub.v1alpha2.ListPodRecommendationsRequest.query_condition:type_name -> containersai.datahub.v1alpha2.QueryCondition
	34, // 23: containersai.datahub.v1alpha2.ListPodRecommendationsResponse.status:type_name -> google.rpc.Status
	41, // 24: containersai.datahub.v1alpha2.ListPodRecommendationsResponse.pod_recommendations:type_name -> containersai.datahub.recommendation.v1alpha2.PodRecommendation
	1,  // 25: containersai.datahub.v1alpha2.ListSimulatedSchedulingScoresRequest.query_condition:type_name -> containersai.datahub.v1alpha2.QueryCondition
	34, // 26: containersai.datahub.v1alpha2.ListSimulatedSchedulingScoresResponse.status:type_name -> google.rpc.Status
	42, // 27: containersai.datahub.v1alpha2.ListSimulatedSchedulingScoresResponse.scores:type_name -> containersai.datahub.score.v1alpha2.SimulatedSchedulingScore
	39, // 28: containersai.datahub.v1alpha2.CreatePodPredictionsRequest.pod_predictions:type_name -> containersai.datahub.prediction.v1alpha2.PodPrediction
	40, // 29: containersai.datahub.v1alpha2.CreateNodePredictionsRequest.node_predictions:type_name -> containersai.datahub.prediction.v1alpha2.NodePrediction
	41, // 30: containersai.datahub.v1alpha2.CreatePodRecommendationsRequest.pod_recommendations:type_name -> containersai.datahub.recommendation.v1alpha2.PodRecommendation
	37, // 31: containersai.datahub.v1alpha2.CreatePodsRequest.pods:type_name -> containersai.datahub.resource.v1alpha2.Pod
	38, // 32: containersai.datahub.v1alpha2.CreateNodesRequest.nodes:type_name -> containersai.datahub.resource.v1alpha2.Node
	42, // 33: containersai.datahub.v1alpha2.CreateSimulatedSchedulingScoresRequest.scores:type_name -> containersai.datahub.score.v1alpha2.SimulatedSchedulingScore
	28, // 34: containersai.datahub.v1alpha2.UpdatePodsRequest.updated_pods:type_name -> containersai.datahub.v1alpha2.UpdatePodsRequest.UpdatedPod
	30, // 35: containersai.datahub.v1alpha2.UpdateNodesRequest.updated_nodes:type_name -> containersai.datahub.v1alpha2.UpdateNodesRequest.UpdatedNode
	37, // 36: containersai.datahub.v1alpha2.DeletePodsRequest.pods:type_name -> containersai.datahub.resource.v1alpha2.Pod
	38, // 37: containersai.datahub.v1alpha2.DeleteNodesRequest.nodes:type_name -> containersai.datahub.resource.v1alpha2.Node
	33, // 38: containersai.datahub.v1alpha2.UpdatePodsRequest.UpdatedPod.namespaced_name:type_name -> containersai.datahub.resource.metadata.v1alpha2.NamespacedName
	29, // 39: containersai.datahub.v1alpha2.UpdatePodsRequest.UpdatedPod.is_predicted:type_name -> containersai.datahub.v1alpha2.UpdatePodsRequest.UpdatedPod.IsPredictedWrap
	31, // 40: containersai.datahub.v1alpha2.UpdateNodesRequest.UpdatedNode.is_predicted:type_name -> containersai.datahub.v1alpha2.UpdateNodesRequest.UpdatedNode.IsPredictedWrap
	2,  // 41: containersai.datahub.v1alpha2.DatahubService.ListPodMetrics:input_type -> containersai.datahub.v1alpha2.ListPodMetricsRequest
	4,  // 42: containersai.datahub.v1alpha2.DatahubService.ListNodeMetrics:input_type -> containersai.datahub.v1alpha2.ListNodeMetricsRequest
	7,  // 43: containersai.datahub.v1alpha2.DatahubService.ListPods:input_type -> containersai.datahub.v1alpha2.ListPodsRequest
	8,  // 44: containersai.datahub.v1alpha2.DatahubService.ListNodes:input_type -> containersai.datahub.v1alpha2.ListNodesRequest
	10, // 45: containersai.datahub.v1alpha2.DatahubService.ListPodPredictions:input_type -> containersai.datahub.v1alpha2.ListPodPredictionsRequest
	12, // 46: containersai.datahub.v1alpha2.DatahubService.ListNodePredictions:input_type -> containersai.datahub.v1alpha2.ListNodePredictionsRequest
	14, // 47: containersai.datahub.v1alpha2.DatahubService.ListPodRecommendations:input_type -> containersai.datahub.v1alpha2.ListPodRecommendationsRequest
	16, // 48: containersai.datahub.v1alpha2.DatahubService.ListSimulatedSchedulingScores:input_type -> containersai.datahub.v1alpha2.ListSimulatedSchedulingScoresRequest
	21, // 49: containersai.datahub.v1alpha2.DatahubService.CreatePods:input_type -> containersai.datahub.v1alpha2.CreatePodsRequest
	22, // 50: containersai.datahub.v1alpha2.DatahubService.CreateNodes:input_type -> containersai.datahub.v1alpha2.CreateNodesRequest
	18, // 51: containersai.datahub.v1alpha2.DatahubService.CreatePodPredictions:input_type -> containersai.datahub.v1alpha2.CreatePodPredictionsRequest
	19, // 52: containersai.datahub.v1alpha2.DatahubService.CreateNodePredictions:input_type -> containersai.datahub.v1alpha2.CreateNodePredictionsRequest
	20, // 53: containersai.datahub.v1alpha2.DatahubService.CreatePodRecommendations:input_type -> containersai.datahub.v1alpha2.CreatePodRecommendationsRequest
	23, // 54: containersai.datahub.v1alpha2.DatahubService.CreateSimulatedSchedulingScores:input_type -> containersai.datahub.v1alpha2.CreateSimulatedSchedulingScoresRequest
	24, // 55: containersai.datahub.v1alpha2.DatahubService.UpdatePods:input_type -> containersai.datahub.v1alpha2.UpdatePodsRequest
	25, // 56: containersai.datahub.v1alpha2.DatahubService.UpdateNodes:input_type -> containersai.datahub.v1alpha2.UpdateNodesRequest
	26, // 57: containersai.datahub.v1alpha2.DatahubService.DeletePods:input_type -> containersai.datahub.v1alpha2.DeletePodsRequest
	27, // 58: containersai.datahub.v1alpha2.DatahubService.DeleteNodes:input_type -> containersai.datahub.v1alpha2.DeleteNodesRequest
	3,  // 59: containersai.datahub.v1alpha2.DatahubService.ListPodMetrics:output_type -> containersai.datahub.v1alpha2.ListPodMetricsResponse
	5,  // 60: containersai.datahub.v1alpha2.DatahubService.ListNodeMetrics:output_type -> containersai.datahub.v1alpha2.ListNodeMetricsResponse
	6,  // 61: containersai.datahub.v1alpha2.DatahubService.ListPods:output_type -> containersai.datahub.v1alpha2.ListPodsResponse
	9,  // 62: containersai.datahub.v1alpha2.DatahubService.ListNodes:output_type -> containersai.datahub.v1alpha2.ListNodesResponse
	11, // 63: containersai.datahub.v1alpha2.DatahubService.ListPodPredictions:output_type -> containersai.datahub.v1alpha2.ListPodPredictionsResponse
	13, // 64: containersai.datahub.v1alpha2.DatahubService.ListNodePredictions:output_type -> containersai.datahub.v1alpha2.ListNodePredictionsResponse
	15, // 65: containersai.datahub.v1alpha2.DatahubService.ListPodRecommendations:output_type -> containersai.datahub.v1alpha2.ListPodRecommendationsResponse
	17, // 66: containersai.datahub.v1alpha2.DatahubService.ListSimulatedSchedulingScores:output_type -> containersai.datahub.v1alpha2.ListSimulatedSchedulingScoresResponse
	34, // 67: containersai.datahub.v1alpha2.DatahubService.CreatePods:output_type -> google.rpc.Status
	34, // 68: containersai.datahub.v1alpha2.DatahubService.CreateNodes:output_type -> google.rpc.Status
	34, // 69: containersai.datahub.v1alpha2.DatahubService.CreatePodPredictions:output_type -> google.rpc.Status
	34, // 70: containersai.datahub.v1alpha2.DatahubService.CreateNodePredictions:output_type -> google.rpc.Status
	34, // 71: containersai.datahub.v1alpha2.DatahubService.CreatePodRecommendations:output_type -> google.rpc.Status
	34, // 72: containersai.datahub.v1alpha2.DatahubService.CreateSimulatedSchedulingScores:output_type -> google.rpc.Status
	34, // 73: containersai.datahub.v1alpha2.DatahubService.UpdatePods:output_type -> google.rpc.Status
	34, // 74: containersai.datahub.v1alpha2.DatahubService.UpdateNodes:output_type -> google.rpc.Status
	34, // 75: containersai.datahub.v1alpha2.DatahubService.DeletePods:output_type -> google.rpc.Status
	34, // 76: containersai.datahub.v1alpha2.DatahubService.DeleteNodes:output_type -> google.rpc.Status
	59, // [59:77] is the sub-list for method output_type
	41, // [41:59] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_datahub_v1alpha2_datahub_proto_init() }
func file_datahub_v1alpha2_datahub_proto_init() {
	if File_datahub_v1alpha2_datahub_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_datahub_v1alpha2_datahub_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPodMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPodMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodeMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodeMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPodsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPodPredictionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPodPredictionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodePredictionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodePredictionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPodRecommendationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPodRecommendationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSimulatedSchedulingScoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSimulatedSchedulingScoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePodPredictionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNodePredictionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePodRecommendationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSimulatedSchedulingScoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePodsRequest_UpdatedPod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePodsRequest_UpdatedPod_IsPredictedWrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodesRequest_UpdatedNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_v1alpha2_datahub_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodesRequest_UpdatedNode_IsPredictedWrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_datahub_v1alpha2_datahub_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_datahub_v1alpha2_datahub_proto_goTypes,
		DependencyIndexes: file_datahub_v1alpha2_datahub_proto_depIdxs,
		EnumInfos:         file_datahub_v1alpha2_datahub_proto_enumTypes,
		MessageInfos:      file_datahub_v1alpha2_datahub_proto_msgTypes,
	}.Build()
	File_datahub_v1alpha2_datahub_proto = out.File
	file_datahub_v1alpha2_datahub_proto_rawDesc = nil
	file_datahub_v1alpha2_datahub_proto_goTypes = nil
	file_datahub_v1alpha2_datahub_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DatahubServiceClient is the client API for DatahubService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DatahubServiceClient interface {
	/// Used to list pod metric data
	ListPodMetrics(ctx context.Context, in *ListPodMetricsRequest, opts ...grpc.CallOption) (*ListPodMetricsResponse, error)
	/// Used to list node metric data
	ListNodeMetrics(ctx context.Context, in *ListNodeMetricsRequest, opts ...grpc.CallOption) (*ListNodeMetricsResponse, error)
	// Used to list pods
	ListPods(ctx context.Context, in *ListPodsRequest, opts ...grpc.CallOption) (*ListPodsResponse, error)
	// Used to list nodes
	ListNodes(ctx context.Context, in *ListNodesRequest, opts ...grpc.CallOption) (*ListNodesResponse, error)
	/// Used to list pod predictions
	ListPodPredictions(ctx context.Context, in *ListPodPredictionsRequest, opts ...grpc.CallOption) (*ListPodPredictionsResponse, error)
	/// Used to list node predictions
	ListNodePredictions(ctx context.Context, in *ListNodePredictionsRequest, opts ...grpc.CallOption) (*ListNodePredictionsResponse, error)
	/// Used to list pod recommenations
	ListPodRecommendations(ctx context.Context, in *ListPodRecommendationsRequest, opts ...grpc.CallOption) (*ListPodRecommendationsResponse, error)
	/// Used to list system scores
	ListSimulatedSchedulingScores(ctx context.Context, in *ListSimulatedSchedulingScoresRequest, opts ...grpc.CallOption) (*ListSimulatedSchedulingScoresResponse, error)
	/// Used to add pods that need to be predicted
	CreatePods(ctx context.Context, in *CreatePodsRequest, opts ...grpc.CallOption) (*status.Status, error)
	/// Used to add nodes
	CreateNodes(ctx context.Context, in *CreateNodesRequest, opts ...grpc.CallOption) (*status.Status, error)
	/// Used to create predictions of pods
	CreatePodPredictions(ctx context.Context, in *CreatePodPredictionsRequest, opts ...grpc.CallOption) (*status.Status, error)
	/// Used to create predictions of nodes
	CreateNodePredictions(ctx context.Context, in *CreateNodePredictionsRequest, opts ...grpc.CallOption) (*status.Status, error)
	/// Used to create recommendations of pods
	CreatePodRecommendations(ctx context.Context, in *CreatePodRecommendationsRequest, opts ...grpc.CallOption) (*status.Status, error)
	/// Used to create scores of system
	CreateSimulatedSchedulingScores(ctx context.Context, in *CreateSimulatedSchedulingScoresRequest, opts ...grpc.CallOption) (*status.Status, error)
	/// Used to update info of pods
	UpdatePods(ctx context.Context, in *UpdatePodsRequest, opts ...grpc.CallOption) (*status.Status, error)
	/// Used to update info of nodes
	UpdateNodes(ctx context.Context, in *UpdateNodesRequest, opts ...grpc.CallOption) (*status.Status, error)
	/// Used to delete info of pods
	DeletePods(ctx context.Context, in *DeletePodsRequest, opts ...grpc.CallOption) (*status.Status, error)
	/// Used to delete info of nodes
	DeleteNodes(ctx context.Context, in *DeleteNodesRequest, opts ...grpc.CallOption) (*status.Status, error)
}

type datahubServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDatahubServiceClient(cc grpc.ClientConnInterface) DatahubServiceClient {
	return &datahubServiceClient{cc}
}

func (c *datahubServiceClient) ListPodMetrics(ctx context.Context, in *ListPodMetricsRequest, opts ...grpc.CallOption) (*ListPodMetricsResponse, error) {
	out := new(ListPodMetricsResponse)
	err := c.cc.Invoke(ctx, "/containersai.datahub.v1alpha2.DatahubService/ListPodMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datahubServiceClient) ListNodeMetrics(ctx context.Context, in *ListNodeMetricsRequest, opts ...grpc.CallOption) (*ListNodeMetricsResponse, error) {
	out := new(ListNodeMetricsResponse)
	err := c.cc.Invoke(ctx, "/containersai.datahub.v1alpha2.DatahubService/ListNodeMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datahubServiceClient) ListPods(ctx context.Context, in *ListPodsRequest, opts ...grpc.CallOption) (*ListPodsResponse, error) {
	out := new(ListPodsResponse)
	err := c.cc.Invoke(ctx, "/containersai.datahub.v1alpha2.DatahubService/ListPods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datahubServiceClient) ListNodes(ctx context.Context, in *ListNodesRequest, opts ...grpc.CallOption) (*ListNodesResponse, error) {
	out := new(ListNodesResponse)
	err := c.cc.Invoke(ctx, "/containersai.datahub.v1alpha2.DatahubService/ListNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datahubServiceClient) ListPodPredictions(ctx context.Context, in *ListPodPredictionsRequest, opts ...grpc.CallOption) (*ListPodPredictionsResponse, error) {
	out := new(ListPodPredictionsResponse)
	err := c.cc.Invoke(ctx, "/containersai.datahub.v1alpha2.DatahubService/ListPodPredictions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datahubServiceClient) ListNodePredictions(ctx context.Context, in *ListNodePredictionsRequest, opts ...grpc.CallOption) (*ListNodePredictionsResponse, error) {
	out := new(ListNodePredictionsResponse)
	err := c.cc.Invoke(ctx, "/containersai.datahub.v1alpha2.DatahubService/ListNodePredictions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datahubServiceClient) ListPodRecommendations(ctx context.Context, in *ListPodRecommendationsRequest, opts ...grpc.CallOption) (*ListPodRecommendationsResponse, error) {
	out := new(ListPodRecommendationsResponse)
	err := c.cc.Invoke(ctx, "/containersai.datahub.v1alpha2.DatahubService/ListPodRecommendations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datahubServiceClient) ListSimulatedSchedulingScores(ctx context.Context, in *ListSimulatedSchedulingScoresRequest, opts ...grpc.CallOption) (*ListSimulatedSchedulingScoresResponse, error) {
	out := new(ListSimulatedSchedulingScoresResponse)
	err := c.cc.Invoke(ctx, "/containersai.datahub.v1alpha2.DatahubService/ListSimulatedSchedulingScores", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datahubServiceClient) CreatePods(ctx context.Context, in *CreatePodsRequest, opts ...grpc.CallOption) (*status.Status, error) {
	out := new(status.Status)
	err := c.cc.Invoke(ctx, "/containersai.datahub.v1alpha2.DatahubService/CreatePods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datahubServiceClient) CreateNodes(ctx context.Context, in *CreateNodesRequest, opts ...grpc.CallOption) (*status.Status, error) {
	out := new(status.Status)
	err := c.cc.Invoke(ctx, "/containersai.datahub.v1alpha2.DatahubService/CreateNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datahubServiceClient) CreatePodPredictions(ctx context.Context, in *CreatePodPredictionsRequest, opts ...grpc.CallOption) (*status.Status, error) {
	out := new(status.Status)
	err := c.cc.Invoke(ctx, "/containersai.datahub.v1alpha2.DatahubService/CreatePodPredictions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datahubServiceClient) CreateNodePredictions(ctx context.Context, in *CreateNodePredictionsRequest, opts ...grpc.CallOption) (*status.Status, error) {
	out := new(status.Status)
	err := c.cc.Invoke(ctx, "/containersai.datahub.v1alpha2.DatahubService/CreateNodePredictions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datahubServiceClient) CreatePodRecommendations(ctx context.Context, in *CreatePodRecommendationsRequest, opts ...grpc.CallOption) (*status.Status, error) {
	out := new(status.Status)
	err := c.cc.Invoke(ctx, "/containersai.datahub.v1alpha2.DatahubService/CreatePodRecommendations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datahubServiceClient) CreateSimulatedSchedulingScores(ctx context.Context, in *CreateSimulatedSchedulingScoresRequest, opts ...grpc.CallOption) (*status.Status, error) {
	out := new(status.Status)
	err := c.cc.Invoke(ctx, "/containersai.datahub.v1alpha2.DatahubService/CreateSimulatedSchedulingScores", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datahubServiceClient) UpdatePods(ctx context.Context, in *UpdatePodsRequest, opts ...grpc.CallOption) (*status.Status, error) {
	out := new(status.Status)
	err := c.cc.Invoke(ctx, "/containersai.datahub.v1alpha2.DatahubService/UpdatePods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datahubServiceClient) UpdateNodes(ctx context.Context, in *UpdateNodesRequest, opts ...grpc.CallOption) (*status.Status, error) {
	out := new(status.Status)
	err := c.cc.Invoke(ctx, "/containersai.datahub.v1alpha2.DatahubService/UpdateNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datahubServiceClient) DeletePods(ctx context.Context, in *DeletePodsRequest, opts ...grpc.CallOption) (*status.Status, error) {
	out := new(status.Status)
	err := c.cc.Invoke(ctx, "/containersai.datahub.v1alpha2.DatahubService/DeletePods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datahubServiceClient) DeleteNodes(ctx context.Context, in *DeleteNodesRequest, opts ...grpc.CallOption) (*status.Status, error) {
	out := new(status.Status)
	err := c.cc.Invoke(ctx, "/containersai.datahub.v1alpha2.DatahubService/DeleteNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DatahubServiceServer is the server API for DatahubService service.
type DatahubServiceServer interface {
	/// Used to list pod metric data
	ListPodMetrics(context.Context, *ListPodMetricsRequest) (*ListPodMetricsResponse, error)
	/// Used to list node metric data
	ListNodeMetrics(context.Context, *ListNodeMetricsRequest) (*ListNodeMetricsResponse, error)
	// Used to list pods
	ListPods(context.Context, *ListPodsRequest) (*ListPodsResponse, error)
	// Used to list nodes
	ListNodes(context.Context, *ListNodesRequest) (*ListNodesResponse, error)
	/// Used to list pod predictions
	ListPodPredictions(context.Context, *ListPodPredictionsRequest) (*ListPodPredictionsResponse, error)
	/// Used to list node predictions
	ListNodePredictions(context.Context, *ListNodePredictionsRequest) (*ListNodePredictionsResponse, error)
	/// Used to list pod recommenations
	ListPodRecommendations(context.Context, *ListPodRecommendationsRequest) (*ListPodRecommendationsResponse, error)
	/// Used to list system scores
	ListSimulatedSchedulingScores(context.Context, *ListSimulatedSchedulingScoresRequest) (*ListSimulatedSchedulingScoresResponse, error)
	/// Used to add pods that need to be predicted
	CreatePods(context.Context, *CreatePodsRequest) (*status.Status, error)
	/// Used to add nodes
	CreateNodes(context.Context, *CreateNodesRequest) (*status.Status, error)
	/// Used to create predictions of pods
	CreatePodPredictions(context.Context, *CreatePodPredictionsRequest) (*status.Status, error)
	/// Used to create predictions of nodes
	CreateNodePredictions(context.Context, *CreateNodePredictionsRequest) (*status.Status, error)
	/// Used to create recommendations of pods
	CreatePodRecommendations(context.Context, *CreatePodRecommendationsRequest) (*status.Status, error)
	/// Used to create scores of system
	CreateSimulatedSchedulingScores(context.Context, *CreateSimulatedSchedulingScoresRequest) (*status.Status, error)
	/// Used to update info of pods
	UpdatePods(context.Context, *UpdatePodsRequest) (*status.Status, error)
	/// Used to update info of nodes
	UpdateNodes(context.Context, *UpdateNodesRequest) (*status.Status, error)
	/// Used to delete info of pods
	DeletePods(context.Context, *DeletePodsRequest) (*status.Status, error)
	/// Used to delete info of nodes
	DeleteNodes(context.Context, *DeleteNodesRequest) (*status.Status, error)
}

// UnimplementedDatahubServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDatahubServiceServer struct {
}

func (*UnimplementedDatahubServiceServer) ListPodMetrics(context.Context, *ListPodMetricsRequest) (*ListPodMetricsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListPodMetrics not implemented")
}
func (*UnimplementedDatahubServiceServer) ListNodeMetrics(context.Context, *ListNodeMetricsRequest) (*ListNodeMetricsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListNodeMetrics not implemented")
}
func (*UnimplementedDatahubServiceServer) ListPods(context.Context, *ListPodsRequest) (*ListPodsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListPods not implemented")
}
func (*UnimplementedDatahubServiceServer) ListNodes(context.Context, *ListNodesRequest) (*ListNodesResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListNodes not implemented")
}
func (*UnimplementedDatahubServiceServer) ListPodPredictions(context.Context, *ListPodPredictionsRequest) (*ListPodPredictionsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListPodPredictions not implemented")
}
func (*UnimplementedDatahubServiceServer) ListNodePredictions(context.Context, *ListNodePredictionsRequest) (*ListNodePredictionsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListNodePredictions not implemented")
}
func (*UnimplementedDatahubServiceServer) ListPodRecommendations(context.Context, *ListPodRecommendationsRequest) (*ListPodRecommendationsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListPodRecommendations not implemented")
}
func (*UnimplementedDatahubServiceServer) ListSimulatedSchedulingScores(context.Context, *ListSimulatedSchedulingScoresRequest) (*ListSimulatedSchedulingScoresResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListSimulatedSchedulingScores not implemented")
}
func (*UnimplementedDatahubServiceServer) CreatePods(context.Context, *CreatePodsRequest) (*status.Status, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method CreatePods not implemented")
}
func (*UnimplementedDatahubServiceServer) CreateNodes(context.Context, *CreateNodesRequest) (*status.Status, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method CreateNodes not implemented")
}
func (*UnimplementedDatahubServiceServer) CreatePodPredictions(context.Context, *CreatePodPredictionsRequest) (*status.Status, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method CreatePodPredictions not implemented")
}
func (*UnimplementedDatahubServiceServer) CreateNodePredictions(context.Context, *CreateNodePredictionsRequest) (*status.Status, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method CreateNodePredictions not implemented")
}
func (*UnimplementedDatahubServiceServer) CreatePodRecommendations(context.Context, *CreatePodRecommendationsRequest) (*status.Status, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method CreatePodRecommendations not implemented")
}
func (*UnimplementedDatahubServiceServer) CreateSimulatedSchedulingScores(context.Context, *CreateSimulatedSchedulingScoresRequest) (*status.Status, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method CreateSimulatedSchedulingScores not implemented")
}
func (*UnimplementedDatahubServiceServer) UpdatePods(context.Context, *UpdatePodsRequest) (*status.Status, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method UpdatePods not implemented")
}
func (*UnimplementedDatahubServiceServer) UpdateNodes(context.Context, *UpdateNodesRequest) (*status.Status, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method UpdateNodes not implemented")
}
func (*UnimplementedDatahubServiceServer) DeletePods(context.Context, *DeletePodsRequest) (*status.Status, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method DeletePods not implemented")
}
func (*UnimplementedDatahubServiceServer) DeleteNodes(context.Context, *DeleteNodesRequest) (*status.Status, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method DeleteNodes not implemented")
}

func RegisterDatahubServiceServer(s *grpc.Server, srv DatahubServiceServer) {
	s.RegisterService(&_DatahubService_serviceDesc, srv)
}

func _DatahubService_ListPodMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPodMetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatahubServiceServer).ListPodMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.datahub.v1alpha2.DatahubService/ListPodMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatahubServiceServer).ListPodMetrics(ctx, req.(*ListPodMetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatahubService_ListNodeMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNodeMetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatahubServiceServer).ListNodeMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.datahub.v1alpha2.DatahubService/ListNodeMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatahubServiceServer).ListNodeMetrics(ctx, req.(*ListNodeMetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatahubService_ListPods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPodsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatahubServiceServer).ListPods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.datahub.v1alpha2.DatahubService/ListPods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatahubServiceServer).ListPods(ctx, req.(*ListPodsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatahubService_ListNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatahubServiceServer).ListNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.datahub.v1alpha2.DatahubService/ListNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatahubServiceServer).ListNodes(ctx, req.(*ListNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatahubService_ListPodPredictions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPodPredictionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatahubServiceServer).ListPodPredictions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.datahub.v1alpha2.DatahubService/ListPodPredictions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatahubServiceServer).ListPodPredictions(ctx, req.(*ListPodPredictionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatahubService_ListNodePredictions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNodePredictionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatahubServiceServer).ListNodePredictions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.datahub.v1alpha2.DatahubService/ListNodePredictions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatahubServiceServer).ListNodePredictions(ctx, req.(*ListNodePredictionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatahubService_ListPodRecommendations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPodRecommendationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatahubServiceServer).ListPodRecommendations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.datahub.v1alpha2.DatahubService/ListPodRecommendations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatahubServiceServer).ListPodRecommendations(ctx, req.(*ListPodRecommendationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatahubService_ListSimulatedSchedulingScores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSimulatedSchedulingScoresRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatahubServiceServer).ListSimulatedSchedulingScores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.datahub.v1alpha2.DatahubService/ListSimulatedSchedulingScores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatahubServiceServer).ListSimulatedSchedulingScores(ctx, req.(*ListSimulatedSchedulingScoresRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatahubService_CreatePods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePodsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatahubServiceServer).CreatePods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.datahub.v1alpha2.DatahubService/CreatePods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatahubServiceServer).CreatePods(ctx, req.(*CreatePodsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatahubService_CreateNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatahubServiceServer).CreateNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.datahub.v1alpha2.DatahubService/CreateNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatahubServiceServer).CreateNodes(ctx, req.(*CreateNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatahubService_CreatePodPredictions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePodPredictionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatahubServiceServer).CreatePodPredictions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.datahub.v1alpha2.DatahubService/CreatePodPredictions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatahubServiceServer).CreatePodPredictions(ctx, req.(*CreatePodPredictionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatahubService_CreateNodePredictions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNodePredictionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatahubServiceServer).CreateNodePredictions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.datahub.v1alpha2.DatahubService/CreateNodePredictions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatahubServiceServer).CreateNodePredictions(ctx, req.(*CreateNodePredictionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatahubService_CreatePodRecommendations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePodRecommendationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatahubServiceServer).CreatePodRecommendations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.datahub.v1alpha2.DatahubService/CreatePodRecommendations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatahubServiceServer).CreatePodRecommendations(ctx, req.(*CreatePodRecommendationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatahubService_CreateSimulatedSchedulingScores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSimulatedSchedulingScoresRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatahubServiceServer).CreateSimulatedSchedulingScores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.datahub.v1alpha2.DatahubService/CreateSimulatedSchedulingScores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatahubServiceServer).CreateSimulatedSchedulingScores(ctx, req.(*CreateSimulatedSchedulingScoresRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatahubService_UpdatePods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePodsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatahubServiceServer).UpdatePods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.datahub.v1alpha2.DatahubService/UpdatePods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatahubServiceServer).UpdatePods(ctx, req.(*UpdatePodsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatahubService_UpdateNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatahubServiceServer).UpdateNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.datahub.v1alpha2.DatahubService/UpdateNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatahubServiceServer).UpdateNodes(ctx, req.(*UpdateNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatahubService_DeletePods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePodsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatahubServiceServer).DeletePods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.datahub.v1alpha2.DatahubService/DeletePods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatahubServiceServer).DeletePods(ctx, req.(*DeletePodsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatahubService_DeleteNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatahubServiceServer).DeleteNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.datahub.v1alpha2.DatahubService/DeleteNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatahubServiceServer).DeleteNodes(ctx, req.(*DeleteNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DatahubService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "containersai.datahub.v1alpha2.DatahubService",
	HandlerType: (*DatahubServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListPodMetrics",
			Handler:    _DatahubService_ListPodMetrics_Handler,
		},
		{
			MethodName: "ListNodeMetrics",
			Handler:    _DatahubService_ListNodeMetrics_Handler,
		},
		{
			MethodName: "ListPods",
			Handler:    _DatahubService_ListPods_Handler,
		},
		{
			MethodName: "ListNodes",
			Handler:    _DatahubService_ListNodes_Handler,
		},
		{
			MethodName: "ListPodPredictions",
			Handler:    _DatahubService_ListPodPredictions_Handler,
		},
		{
			MethodName: "ListNodePredictions",
			Handler:    _DatahubService_ListNodePredictions_Handler,
		},
		{
			MethodName: "ListPodRecommendations",
			Handler:    _DatahubService_ListPodRecommendations_Handler,
		},
		{
			MethodName: "ListSimulatedSchedulingScores",
			Handler:    _DatahubService_ListSimulatedSchedulingScores_Handler,
		},
		{
			MethodName: "CreatePods",
			Handler:    _DatahubService_CreatePods_Handler,
		},
		{
			MethodName: "CreateNodes",
			Handler:    _DatahubService_CreateNodes_Handler,
		},
		{
			MethodName: "CreatePodPredictions",
			Handler:    _DatahubService_CreatePodPredictions_Handler,
		},
		{
			MethodName: "CreateNodePredictions",
			Handler:    _DatahubService_CreateNodePredictions_Handler,
		},
		{
			MethodName: "CreatePodRecommendations",
			Handler:    _DatahubService_CreatePodRecommendations_Handler,
		},
		{
			MethodName: "CreateSimulatedSchedulingScores",
			Handler:    _DatahubService_CreateSimulatedSchedulingScores_Handler,
		},
		{
			MethodName: "UpdatePods",
			Handler:    _DatahubService_UpdatePods_Handler,
		},
		{
			MethodName: "UpdateNodes",
			Handler:    _DatahubService_UpdateNodes_Handler,
		},
		{
			MethodName: "DeletePods",
			Handler:    _DatahubService_DeletePods_Handler,
		},
		{
			MethodName: "DeleteNodes",
			Handler:    _DatahubService_DeleteNodes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "datahub/v1alpha2/datahub.proto",
}
