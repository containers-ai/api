/// This file has messages related to predictions of containers, pods, and nodes

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: datahub/prediction/v1alpha2/prediction.proto

package v1alpha2

import (
	v1alpha2 "github.com/containers-ai/api/datahub/metric/v1alpha2"
	v1alpha21 "github.com/containers-ai/api/datahub/resource/metadata/v1alpha2"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//*
// Represents a list of predicted metric data of a container
type ContainerPrediction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// use containersai.datahub.metric.v1alpha2.MetricType as key
	PredictedRawData map[int32]*v1alpha2.MetricData `protobuf:"bytes,2,rep,name=predicted_raw_data,json=predictedRawData,proto3" json:"predicted_raw_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ContainerPrediction) Reset() {
	*x = ContainerPrediction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_prediction_v1alpha2_prediction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerPrediction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerPrediction) ProtoMessage() {}

func (x *ContainerPrediction) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_prediction_v1alpha2_prediction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerPrediction.ProtoReflect.Descriptor instead.
func (*ContainerPrediction) Descriptor() ([]byte, []int) {
	return file_datahub_prediction_v1alpha2_prediction_proto_rawDescGZIP(), []int{0}
}

func (x *ContainerPrediction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerPrediction) GetPredictedRawData() map[int32]*v1alpha2.MetricData {
	if x != nil {
		return x.PredictedRawData
	}
	return nil
}

//*
// Represents a list of predicted metrics data of a pod
type PodPrediction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespacedName       *v1alpha21.NamespacedName `protobuf:"bytes,1,opt,name=namespaced_name,json=namespacedName,proto3" json:"namespaced_name,omitempty"`
	ContainerPredictions []*ContainerPrediction    `protobuf:"bytes,2,rep,name=container_predictions,json=containerPredictions,proto3" json:"container_predictions,omitempty"`
}

func (x *PodPrediction) Reset() {
	*x = PodPrediction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_prediction_v1alpha2_prediction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodPrediction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodPrediction) ProtoMessage() {}

func (x *PodPrediction) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_prediction_v1alpha2_prediction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodPrediction.ProtoReflect.Descriptor instead.
func (*PodPrediction) Descriptor() ([]byte, []int) {
	return file_datahub_prediction_v1alpha2_prediction_proto_rawDescGZIP(), []int{1}
}

func (x *PodPrediction) GetNamespacedName() *v1alpha21.NamespacedName {
	if x != nil {
		return x.NamespacedName
	}
	return nil
}

func (x *PodPrediction) GetContainerPredictions() []*ContainerPrediction {
	if x != nil {
		return x.ContainerPredictions
	}
	return nil
}

//*
// Represents a list of predicted metric data of a node
type NodePrediction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// use containersai.datahub.metric.v1alpha2.MetricType as key
	PredictedRawData map[int32]*v1alpha2.MetricData `protobuf:"bytes,2,rep,name=predicted_raw_data,json=predictedRawData,proto3" json:"predicted_raw_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IsScheduled      bool                           `protobuf:"varint,3,opt,name=is_scheduled,json=isScheduled,proto3" json:"is_scheduled,omitempty"`
}

func (x *NodePrediction) Reset() {
	*x = NodePrediction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datahub_prediction_v1alpha2_prediction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodePrediction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodePrediction) ProtoMessage() {}

func (x *NodePrediction) ProtoReflect() protoreflect.Message {
	mi := &file_datahub_prediction_v1alpha2_prediction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodePrediction.ProtoReflect.Descriptor instead.
func (*NodePrediction) Descriptor() ([]byte, []int) {
	return file_datahub_prediction_v1alpha2_prediction_proto_rawDescGZIP(), []int{2}
}

func (x *NodePrediction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodePrediction) GetPredictedRawData() map[int32]*v1alpha2.MetricData {
	if x != nil {
		return x.PredictedRawData
	}
	return nil
}

func (x *NodePrediction) GetIsScheduled() bool {
	if x != nil {
		return x.IsScheduled
	}
	return false
}

var File_datahub_prediction_v1alpha2_prediction_proto protoreflect.FileDescriptor

var file_datahub_prediction_v1alpha2_prediction_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x70, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x1a, 0x31, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x64, 0x61, 0x74,
	0x61, 0x68, 0x75, 0x62, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x32, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa4, 0x02, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x81, 0x01,
	0x0a, 0x12, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x61, 0x77, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x65, 0x64, 0x52, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x10, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x52, 0x61, 0x77, 0x44, 0x61, 0x74,
	0x61, 0x1a, 0x75, 0x0a, 0x15, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x52, 0x61,
	0x77, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x46, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xed, 0x01, 0x0a, 0x0d, 0x50, 0x6f, 0x64,
	0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x68, 0x0a, 0x0f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x72, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xbc, 0x02, 0x0a, 0x0e, 0x4e, 0x6f, 0x64,
	0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x7c, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x61, 0x77,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x52,
	0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x70, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x52, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x1a, 0x75, 0x0a, 0x15, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x52, 0x61, 0x77,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x46, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x61, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x32, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x2d, 0x61, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f,
	0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_datahub_prediction_v1alpha2_prediction_proto_rawDescOnce sync.Once
	file_datahub_prediction_v1alpha2_prediction_proto_rawDescData = file_datahub_prediction_v1alpha2_prediction_proto_rawDesc
)

func file_datahub_prediction_v1alpha2_prediction_proto_rawDescGZIP() []byte {
	file_datahub_prediction_v1alpha2_prediction_proto_rawDescOnce.Do(func() {
		file_datahub_prediction_v1alpha2_prediction_proto_rawDescData = protoimpl.X.CompressGZIP(file_datahub_prediction_v1alpha2_prediction_proto_rawDescData)
	})
	return file_datahub_prediction_v1alpha2_prediction_proto_rawDescData
}

var file_datahub_prediction_v1alpha2_prediction_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_datahub_prediction_v1alpha2_prediction_proto_goTypes = []interface{}{
	(*ContainerPrediction)(nil),      // 0: containersai.datahub.prediction.v1alpha2.ContainerPrediction
	(*PodPrediction)(nil),            // 1: containersai.datahub.prediction.v1alpha2.PodPrediction
	(*NodePrediction)(nil),           // 2: containersai.datahub.prediction.v1alpha2.NodePrediction
	nil,                              // 3: containersai.datahub.prediction.v1alpha2.ContainerPrediction.PredictedRawDataEntry
	nil,                              // 4: containersai.datahub.prediction.v1alpha2.NodePrediction.PredictedRawDataEntry
	(*v1alpha21.NamespacedName)(nil), // 5: containersai.datahub.resource.metadata.v1alpha2.NamespacedName
	(*v1alpha2.MetricData)(nil),      // 6: containersai.datahub.metric.v1alpha2.MetricData
}
var file_datahub_prediction_v1alpha2_prediction_proto_depIdxs = []int32{
	3, // 0: containersai.datahub.prediction.v1alpha2.ContainerPrediction.predicted_raw_data:type_name -> containersai.datahub.prediction.v1alpha2.ContainerPrediction.PredictedRawDataEntry
	5, // 1: containersai.datahub.prediction.v1alpha2.PodPrediction.namespaced_name:type_name -> containersai.datahub.resource.metadata.v1alpha2.NamespacedName
	0, // 2: containersai.datahub.prediction.v1alpha2.PodPrediction.container_predictions:type_name -> containersai.datahub.prediction.v1alpha2.ContainerPrediction
	4, // 3: containersai.datahub.prediction.v1alpha2.NodePrediction.predicted_raw_data:type_name -> containersai.datahub.prediction.v1alpha2.NodePrediction.PredictedRawDataEntry
	6, // 4: containersai.datahub.prediction.v1alpha2.ContainerPrediction.PredictedRawDataEntry.value:type_name -> containersai.datahub.metric.v1alpha2.MetricData
	6, // 5: containersai.datahub.prediction.v1alpha2.NodePrediction.PredictedRawDataEntry.value:type_name -> containersai.datahub.metric.v1alpha2.MetricData
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_datahub_prediction_v1alpha2_prediction_proto_init() }
func file_datahub_prediction_v1alpha2_prediction_proto_init() {
	if File_datahub_prediction_v1alpha2_prediction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_datahub_prediction_v1alpha2_prediction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerPrediction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_prediction_v1alpha2_prediction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodPrediction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datahub_prediction_v1alpha2_prediction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodePrediction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_datahub_prediction_v1alpha2_prediction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_datahub_prediction_v1alpha2_prediction_proto_goTypes,
		DependencyIndexes: file_datahub_prediction_v1alpha2_prediction_proto_depIdxs,
		MessageInfos:      file_datahub_prediction_v1alpha2_prediction_proto_msgTypes,
	}.Build()
	File_datahub_prediction_v1alpha2_prediction_proto = out.File
	file_datahub_prediction_v1alpha2_prediction_proto_rawDesc = nil
	file_datahub_prediction_v1alpha2_prediction_proto_goTypes = nil
	file_datahub_prediction_v1alpha2_prediction_proto_depIdxs = nil
}
