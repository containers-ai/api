// source: common/common.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_types_pb = require('../common/types_pb.js');
goog.object.extend(proto, common_types_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.containersai.common.DatabaseType', null, global);
goog.exportSymbol('proto.containersai.common.Group', null, global);
goog.exportSymbol('proto.containersai.common.Query', null, global);
goog.exportSymbol('proto.containersai.common.QueryCondition', null, global);
goog.exportSymbol('proto.containersai.common.QueryCondition.Order', null, global);
goog.exportSymbol('proto.containersai.common.ReadRawdata', null, global);
goog.exportSymbol('proto.containersai.common.Row', null, global);
goog.exportSymbol('proto.containersai.common.TimeRange', null, global);
goog.exportSymbol('proto.containersai.common.TimeRange.AggregateFunction', null, global);
goog.exportSymbol('proto.containersai.common.WriteRawdata', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containersai.common.TimeRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.containersai.common.TimeRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containersai.common.TimeRange.displayName = 'proto.containersai.common.TimeRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containersai.common.QueryCondition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.containersai.common.QueryCondition.repeatedFields_, null);
};
goog.inherits(proto.containersai.common.QueryCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containersai.common.QueryCondition.displayName = 'proto.containersai.common.QueryCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containersai.common.Query = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.containersai.common.Query, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containersai.common.Query.displayName = 'proto.containersai.common.Query';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containersai.common.Row = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.containersai.common.Row.repeatedFields_, null);
};
goog.inherits(proto.containersai.common.Row, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containersai.common.Row.displayName = 'proto.containersai.common.Row';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containersai.common.Group = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.containersai.common.Group.repeatedFields_, null);
};
goog.inherits(proto.containersai.common.Group, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containersai.common.Group.displayName = 'proto.containersai.common.Group';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containersai.common.ReadRawdata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.containersai.common.ReadRawdata.repeatedFields_, null);
};
goog.inherits(proto.containersai.common.ReadRawdata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containersai.common.ReadRawdata.displayName = 'proto.containersai.common.ReadRawdata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containersai.common.WriteRawdata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.containersai.common.WriteRawdata.repeatedFields_, null);
};
goog.inherits(proto.containersai.common.WriteRawdata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containersai.common.WriteRawdata.displayName = 'proto.containersai.common.WriteRawdata';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containersai.common.TimeRange.prototype.toObject = function(opt_includeInstance) {
  return proto.containersai.common.TimeRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containersai.common.TimeRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containersai.common.TimeRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    timeout: (f = msg.getTimeout()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    step: (f = msg.getStep()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    aggregateFunction: jspb.Message.getFieldWithDefault(msg, 5, 0),
    applyTime: (f = msg.getApplyTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containersai.common.TimeRange}
 */
proto.containersai.common.TimeRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containersai.common.TimeRange;
  return proto.containersai.common.TimeRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containersai.common.TimeRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containersai.common.TimeRange}
 */
proto.containersai.common.TimeRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimeout(value);
      break;
    case 4:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setStep(value);
      break;
    case 5:
      var value = /** @type {!proto.containersai.common.TimeRange.AggregateFunction} */ (reader.readEnum());
      msg.setAggregateFunction(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setApplyTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containersai.common.TimeRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containersai.common.TimeRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containersai.common.TimeRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containersai.common.TimeRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTimeout();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStep();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getAggregateFunction();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getApplyTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.containersai.common.TimeRange.AggregateFunction = {
  NONE: 0,
  MAX: 1,
  AVG: 2
};

/**
 * optional google.protobuf.Timestamp start_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.containersai.common.TimeRange.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.containersai.common.TimeRange} returns this
*/
proto.containersai.common.TimeRange.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containersai.common.TimeRange} returns this
 */
proto.containersai.common.TimeRange.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containersai.common.TimeRange.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.containersai.common.TimeRange.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.containersai.common.TimeRange} returns this
*/
proto.containersai.common.TimeRange.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containersai.common.TimeRange} returns this
 */
proto.containersai.common.TimeRange.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containersai.common.TimeRange.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp timeout = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.containersai.common.TimeRange.prototype.getTimeout = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.containersai.common.TimeRange} returns this
*/
proto.containersai.common.TimeRange.prototype.setTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containersai.common.TimeRange} returns this
 */
proto.containersai.common.TimeRange.prototype.clearTimeout = function() {
  return this.setTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containersai.common.TimeRange.prototype.hasTimeout = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Duration step = 4;
 * @return {?proto.google.protobuf.Duration}
 */
proto.containersai.common.TimeRange.prototype.getStep = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 4));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.containersai.common.TimeRange} returns this
*/
proto.containersai.common.TimeRange.prototype.setStep = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containersai.common.TimeRange} returns this
 */
proto.containersai.common.TimeRange.prototype.clearStep = function() {
  return this.setStep(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containersai.common.TimeRange.prototype.hasStep = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional AggregateFunction aggregate_function = 5;
 * @return {!proto.containersai.common.TimeRange.AggregateFunction}
 */
proto.containersai.common.TimeRange.prototype.getAggregateFunction = function() {
  return /** @type {!proto.containersai.common.TimeRange.AggregateFunction} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.containersai.common.TimeRange.AggregateFunction} value
 * @return {!proto.containersai.common.TimeRange} returns this
 */
proto.containersai.common.TimeRange.prototype.setAggregateFunction = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp apply_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.containersai.common.TimeRange.prototype.getApplyTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.containersai.common.TimeRange} returns this
*/
proto.containersai.common.TimeRange.prototype.setApplyTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containersai.common.TimeRange} returns this
 */
proto.containersai.common.TimeRange.prototype.clearApplyTime = function() {
  return this.setApplyTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containersai.common.TimeRange.prototype.hasApplyTime = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.containersai.common.QueryCondition.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containersai.common.QueryCondition.prototype.toObject = function(opt_includeInstance) {
  return proto.containersai.common.QueryCondition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containersai.common.QueryCondition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containersai.common.QueryCondition.toObject = function(includeInstance, msg) {
  var f, obj = {
    timeRange: (f = msg.getTimeRange()) && proto.containersai.common.TimeRange.toObject(includeInstance, f),
    order: jspb.Message.getFieldWithDefault(msg, 2, 0),
    whereClause: jspb.Message.getFieldWithDefault(msg, 3, ""),
    selectsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    groupsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    limit: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containersai.common.QueryCondition}
 */
proto.containersai.common.QueryCondition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containersai.common.QueryCondition;
  return proto.containersai.common.QueryCondition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containersai.common.QueryCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containersai.common.QueryCondition}
 */
proto.containersai.common.QueryCondition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.containersai.common.TimeRange;
      reader.readMessage(value,proto.containersai.common.TimeRange.deserializeBinaryFromReader);
      msg.setTimeRange(value);
      break;
    case 2:
      var value = /** @type {!proto.containersai.common.QueryCondition.Order} */ (reader.readEnum());
      msg.setOrder(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWhereClause(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addSelects(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addGroups(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containersai.common.QueryCondition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containersai.common.QueryCondition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containersai.common.QueryCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containersai.common.QueryCondition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimeRange();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.containersai.common.TimeRange.serializeBinaryToWriter
    );
  }
  f = message.getOrder();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getWhereClause();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSelectsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.containersai.common.QueryCondition.Order = {
  NONE: 0,
  ASC: 1,
  DESC: 2
};

/**
 * optional TimeRange time_range = 1;
 * @return {?proto.containersai.common.TimeRange}
 */
proto.containersai.common.QueryCondition.prototype.getTimeRange = function() {
  return /** @type{?proto.containersai.common.TimeRange} */ (
    jspb.Message.getWrapperField(this, proto.containersai.common.TimeRange, 1));
};


/**
 * @param {?proto.containersai.common.TimeRange|undefined} value
 * @return {!proto.containersai.common.QueryCondition} returns this
*/
proto.containersai.common.QueryCondition.prototype.setTimeRange = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containersai.common.QueryCondition} returns this
 */
proto.containersai.common.QueryCondition.prototype.clearTimeRange = function() {
  return this.setTimeRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containersai.common.QueryCondition.prototype.hasTimeRange = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Order order = 2;
 * @return {!proto.containersai.common.QueryCondition.Order}
 */
proto.containersai.common.QueryCondition.prototype.getOrder = function() {
  return /** @type {!proto.containersai.common.QueryCondition.Order} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.containersai.common.QueryCondition.Order} value
 * @return {!proto.containersai.common.QueryCondition} returns this
 */
proto.containersai.common.QueryCondition.prototype.setOrder = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string where_clause = 3;
 * @return {string}
 */
proto.containersai.common.QueryCondition.prototype.getWhereClause = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.containersai.common.QueryCondition} returns this
 */
proto.containersai.common.QueryCondition.prototype.setWhereClause = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string selects = 4;
 * @return {!Array<string>}
 */
proto.containersai.common.QueryCondition.prototype.getSelectsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.containersai.common.QueryCondition} returns this
 */
proto.containersai.common.QueryCondition.prototype.setSelectsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.containersai.common.QueryCondition} returns this
 */
proto.containersai.common.QueryCondition.prototype.addSelects = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.containersai.common.QueryCondition} returns this
 */
proto.containersai.common.QueryCondition.prototype.clearSelectsList = function() {
  return this.setSelectsList([]);
};


/**
 * repeated string groups = 5;
 * @return {!Array<string>}
 */
proto.containersai.common.QueryCondition.prototype.getGroupsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.containersai.common.QueryCondition} returns this
 */
proto.containersai.common.QueryCondition.prototype.setGroupsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.containersai.common.QueryCondition} returns this
 */
proto.containersai.common.QueryCondition.prototype.addGroups = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.containersai.common.QueryCondition} returns this
 */
proto.containersai.common.QueryCondition.prototype.clearGroupsList = function() {
  return this.setGroupsList([]);
};


/**
 * optional uint64 limit = 6;
 * @return {number}
 */
proto.containersai.common.QueryCondition.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.containersai.common.QueryCondition} returns this
 */
proto.containersai.common.QueryCondition.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containersai.common.Query.prototype.toObject = function(opt_includeInstance) {
  return proto.containersai.common.Query.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containersai.common.Query} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containersai.common.Query.toObject = function(includeInstance, msg) {
  var f, obj = {
    database: jspb.Message.getFieldWithDefault(msg, 1, ""),
    table: jspb.Message.getFieldWithDefault(msg, 2, ""),
    expression: jspb.Message.getFieldWithDefault(msg, 3, ""),
    condition: (f = msg.getCondition()) && proto.containersai.common.QueryCondition.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containersai.common.Query}
 */
proto.containersai.common.Query.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containersai.common.Query;
  return proto.containersai.common.Query.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containersai.common.Query} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containersai.common.Query}
 */
proto.containersai.common.Query.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTable(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpression(value);
      break;
    case 4:
      var value = new proto.containersai.common.QueryCondition;
      reader.readMessage(value,proto.containersai.common.QueryCondition.deserializeBinaryFromReader);
      msg.setCondition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containersai.common.Query.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containersai.common.Query.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containersai.common.Query} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containersai.common.Query.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatabase();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTable();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExpression();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCondition();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.containersai.common.QueryCondition.serializeBinaryToWriter
    );
  }
};


/**
 * optional string database = 1;
 * @return {string}
 */
proto.containersai.common.Query.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.containersai.common.Query} returns this
 */
proto.containersai.common.Query.prototype.setDatabase = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string table = 2;
 * @return {string}
 */
proto.containersai.common.Query.prototype.getTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.containersai.common.Query} returns this
 */
proto.containersai.common.Query.prototype.setTable = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string expression = 3;
 * @return {string}
 */
proto.containersai.common.Query.prototype.getExpression = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.containersai.common.Query} returns this
 */
proto.containersai.common.Query.prototype.setExpression = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional QueryCondition condition = 4;
 * @return {?proto.containersai.common.QueryCondition}
 */
proto.containersai.common.Query.prototype.getCondition = function() {
  return /** @type{?proto.containersai.common.QueryCondition} */ (
    jspb.Message.getWrapperField(this, proto.containersai.common.QueryCondition, 4));
};


/**
 * @param {?proto.containersai.common.QueryCondition|undefined} value
 * @return {!proto.containersai.common.Query} returns this
*/
proto.containersai.common.Query.prototype.setCondition = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containersai.common.Query} returns this
 */
proto.containersai.common.Query.prototype.clearCondition = function() {
  return this.setCondition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containersai.common.Query.prototype.hasCondition = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.containersai.common.Row.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containersai.common.Row.prototype.toObject = function(opt_includeInstance) {
  return proto.containersai.common.Row.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containersai.common.Row} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containersai.common.Row.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    valuesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containersai.common.Row}
 */
proto.containersai.common.Row.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containersai.common.Row;
  return proto.containersai.common.Row.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containersai.common.Row} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containersai.common.Row}
 */
proto.containersai.common.Row.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containersai.common.Row.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containersai.common.Row.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containersai.common.Row} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containersai.common.Row.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.containersai.common.Row.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.containersai.common.Row} returns this
*/
proto.containersai.common.Row.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containersai.common.Row} returns this
 */
proto.containersai.common.Row.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containersai.common.Row.prototype.hasTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string values = 2;
 * @return {!Array<string>}
 */
proto.containersai.common.Row.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.containersai.common.Row} returns this
 */
proto.containersai.common.Row.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.containersai.common.Row} returns this
 */
proto.containersai.common.Row.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.containersai.common.Row} returns this
 */
proto.containersai.common.Row.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.containersai.common.Group.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containersai.common.Group.prototype.toObject = function(opt_includeInstance) {
  return proto.containersai.common.Group.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containersai.common.Group} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containersai.common.Group.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.containersai.common.Row.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containersai.common.Group}
 */
proto.containersai.common.Group.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containersai.common.Group;
  return proto.containersai.common.Group.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containersai.common.Group} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containersai.common.Group}
 */
proto.containersai.common.Group.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.containersai.common.Row;
      reader.readMessage(value,proto.containersai.common.Row.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containersai.common.Group.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containersai.common.Group.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containersai.common.Group} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containersai.common.Group.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.containersai.common.Row.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Row rows = 1;
 * @return {!Array<!proto.containersai.common.Row>}
 */
proto.containersai.common.Group.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.containersai.common.Row>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.containersai.common.Row, 1));
};


/**
 * @param {!Array<!proto.containersai.common.Row>} value
 * @return {!proto.containersai.common.Group} returns this
*/
proto.containersai.common.Group.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.containersai.common.Row=} opt_value
 * @param {number=} opt_index
 * @return {!proto.containersai.common.Row}
 */
proto.containersai.common.Group.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.containersai.common.Row, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.containersai.common.Group} returns this
 */
proto.containersai.common.Group.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.containersai.common.ReadRawdata.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containersai.common.ReadRawdata.prototype.toObject = function(opt_includeInstance) {
  return proto.containersai.common.ReadRawdata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containersai.common.ReadRawdata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containersai.common.ReadRawdata.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: (f = msg.getQuery()) && proto.containersai.common.Query.toObject(includeInstance, f),
    columnsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.containersai.common.Group.toObject, includeInstance),
    rawdata: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containersai.common.ReadRawdata}
 */
proto.containersai.common.ReadRawdata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containersai.common.ReadRawdata;
  return proto.containersai.common.ReadRawdata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containersai.common.ReadRawdata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containersai.common.ReadRawdata}
 */
proto.containersai.common.ReadRawdata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.containersai.common.Query;
      reader.readMessage(value,proto.containersai.common.Query.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addColumns(value);
      break;
    case 3:
      var value = new proto.containersai.common.Group;
      reader.readMessage(value,proto.containersai.common.Group.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRawdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containersai.common.ReadRawdata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containersai.common.ReadRawdata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containersai.common.ReadRawdata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containersai.common.ReadRawdata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.containersai.common.Query.serializeBinaryToWriter
    );
  }
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.containersai.common.Group.serializeBinaryToWriter
    );
  }
  f = message.getRawdata();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Query query = 1;
 * @return {?proto.containersai.common.Query}
 */
proto.containersai.common.ReadRawdata.prototype.getQuery = function() {
  return /** @type{?proto.containersai.common.Query} */ (
    jspb.Message.getWrapperField(this, proto.containersai.common.Query, 1));
};


/**
 * @param {?proto.containersai.common.Query|undefined} value
 * @return {!proto.containersai.common.ReadRawdata} returns this
*/
proto.containersai.common.ReadRawdata.prototype.setQuery = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containersai.common.ReadRawdata} returns this
 */
proto.containersai.common.ReadRawdata.prototype.clearQuery = function() {
  return this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containersai.common.ReadRawdata.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string columns = 2;
 * @return {!Array<string>}
 */
proto.containersai.common.ReadRawdata.prototype.getColumnsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.containersai.common.ReadRawdata} returns this
 */
proto.containersai.common.ReadRawdata.prototype.setColumnsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.containersai.common.ReadRawdata} returns this
 */
proto.containersai.common.ReadRawdata.prototype.addColumns = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.containersai.common.ReadRawdata} returns this
 */
proto.containersai.common.ReadRawdata.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};


/**
 * repeated Group groups = 3;
 * @return {!Array<!proto.containersai.common.Group>}
 */
proto.containersai.common.ReadRawdata.prototype.getGroupsList = function() {
  return /** @type{!Array<!proto.containersai.common.Group>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.containersai.common.Group, 3));
};


/**
 * @param {!Array<!proto.containersai.common.Group>} value
 * @return {!proto.containersai.common.ReadRawdata} returns this
*/
proto.containersai.common.ReadRawdata.prototype.setGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.containersai.common.Group=} opt_value
 * @param {number=} opt_index
 * @return {!proto.containersai.common.Group}
 */
proto.containersai.common.ReadRawdata.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.containersai.common.Group, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.containersai.common.ReadRawdata} returns this
 */
proto.containersai.common.ReadRawdata.prototype.clearGroupsList = function() {
  return this.setGroupsList([]);
};


/**
 * optional string rawdata = 4;
 * @return {string}
 */
proto.containersai.common.ReadRawdata.prototype.getRawdata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.containersai.common.ReadRawdata} returns this
 */
proto.containersai.common.ReadRawdata.prototype.setRawdata = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.containersai.common.WriteRawdata.repeatedFields_ = [3,4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containersai.common.WriteRawdata.prototype.toObject = function(opt_includeInstance) {
  return proto.containersai.common.WriteRawdata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containersai.common.WriteRawdata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containersai.common.WriteRawdata.toObject = function(includeInstance, msg) {
  var f, obj = {
    database: jspb.Message.getFieldWithDefault(msg, 1, ""),
    table: jspb.Message.getFieldWithDefault(msg, 2, ""),
    columnsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.containersai.common.Row.toObject, includeInstance),
    columnTypesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    dataTypesList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containersai.common.WriteRawdata}
 */
proto.containersai.common.WriteRawdata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containersai.common.WriteRawdata;
  return proto.containersai.common.WriteRawdata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containersai.common.WriteRawdata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containersai.common.WriteRawdata}
 */
proto.containersai.common.WriteRawdata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTable(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addColumns(value);
      break;
    case 4:
      var value = new proto.containersai.common.Row;
      reader.readMessage(value,proto.containersai.common.Row.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    case 5:
      var value = /** @type {!Array<!proto.containersai.common.ColumnType>} */ (reader.readPackedEnum());
      msg.setColumnTypesList(value);
      break;
    case 6:
      var value = /** @type {!Array<!proto.containersai.common.DataType>} */ (reader.readPackedEnum());
      msg.setDataTypesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containersai.common.WriteRawdata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containersai.common.WriteRawdata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containersai.common.WriteRawdata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containersai.common.WriteRawdata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatabase();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTable();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.containersai.common.Row.serializeBinaryToWriter
    );
  }
  f = message.getColumnTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
  f = message.getDataTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      6,
      f
    );
  }
};


/**
 * optional string database = 1;
 * @return {string}
 */
proto.containersai.common.WriteRawdata.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.containersai.common.WriteRawdata} returns this
 */
proto.containersai.common.WriteRawdata.prototype.setDatabase = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string table = 2;
 * @return {string}
 */
proto.containersai.common.WriteRawdata.prototype.getTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.containersai.common.WriteRawdata} returns this
 */
proto.containersai.common.WriteRawdata.prototype.setTable = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string columns = 3;
 * @return {!Array<string>}
 */
proto.containersai.common.WriteRawdata.prototype.getColumnsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.containersai.common.WriteRawdata} returns this
 */
proto.containersai.common.WriteRawdata.prototype.setColumnsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.containersai.common.WriteRawdata} returns this
 */
proto.containersai.common.WriteRawdata.prototype.addColumns = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.containersai.common.WriteRawdata} returns this
 */
proto.containersai.common.WriteRawdata.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};


/**
 * repeated Row rows = 4;
 * @return {!Array<!proto.containersai.common.Row>}
 */
proto.containersai.common.WriteRawdata.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.containersai.common.Row>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.containersai.common.Row, 4));
};


/**
 * @param {!Array<!proto.containersai.common.Row>} value
 * @return {!proto.containersai.common.WriteRawdata} returns this
*/
proto.containersai.common.WriteRawdata.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.containersai.common.Row=} opt_value
 * @param {number=} opt_index
 * @return {!proto.containersai.common.Row}
 */
proto.containersai.common.WriteRawdata.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.containersai.common.Row, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.containersai.common.WriteRawdata} returns this
 */
proto.containersai.common.WriteRawdata.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};


/**
 * repeated ColumnType column_types = 5;
 * @return {!Array<!proto.containersai.common.ColumnType>}
 */
proto.containersai.common.WriteRawdata.prototype.getColumnTypesList = function() {
  return /** @type {!Array<!proto.containersai.common.ColumnType>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<!proto.containersai.common.ColumnType>} value
 * @return {!proto.containersai.common.WriteRawdata} returns this
 */
proto.containersai.common.WriteRawdata.prototype.setColumnTypesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.containersai.common.ColumnType} value
 * @param {number=} opt_index
 * @return {!proto.containersai.common.WriteRawdata} returns this
 */
proto.containersai.common.WriteRawdata.prototype.addColumnTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.containersai.common.WriteRawdata} returns this
 */
proto.containersai.common.WriteRawdata.prototype.clearColumnTypesList = function() {
  return this.setColumnTypesList([]);
};


/**
 * repeated DataType data_types = 6;
 * @return {!Array<!proto.containersai.common.DataType>}
 */
proto.containersai.common.WriteRawdata.prototype.getDataTypesList = function() {
  return /** @type {!Array<!proto.containersai.common.DataType>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<!proto.containersai.common.DataType>} value
 * @return {!proto.containersai.common.WriteRawdata} returns this
 */
proto.containersai.common.WriteRawdata.prototype.setDataTypesList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!proto.containersai.common.DataType} value
 * @param {number=} opt_index
 * @return {!proto.containersai.common.WriteRawdata} returns this
 */
proto.containersai.common.WriteRawdata.prototype.addDataTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.containersai.common.WriteRawdata} returns this
 */
proto.containersai.common.WriteRawdata.prototype.clearDataTypesList = function() {
  return this.setDataTypesList([]);
};


/**
 * @enum {number}
 */
proto.containersai.common.DatabaseType = {
  UNDEFINED: 0,
  INFLUXDB: 1,
  PROMETHEUS: 2
};

goog.object.extend(exports, proto.containersai.common);
