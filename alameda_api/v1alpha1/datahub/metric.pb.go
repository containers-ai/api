// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alameda_api/v1alpha1/datahub/metric.proto

package containers_ai_alameda_v1alpha1_datahub

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import duration "github.com/golang/protobuf/ptypes/duration"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ContainerMetricType int32

const (
	ContainerMetricType_CONTAINER_METRICTYPE_UNDEFINED         ContainerMetricType = 0
	ContainerMetricType_CONTAINER_CPU_USAGE_SECONDS_PERCENTAGE ContainerMetricType = 1
	ContainerMetricType_CONTAINER_MEMORY_USAGE_BYTES           ContainerMetricType = 2
)

var ContainerMetricType_name = map[int32]string{
	0: "CONTAINER_METRICTYPE_UNDEFINED",
	1: "CONTAINER_CPU_USAGE_SECONDS_PERCENTAGE",
	2: "CONTAINER_MEMORY_USAGE_BYTES",
}
var ContainerMetricType_value = map[string]int32{
	"CONTAINER_METRICTYPE_UNDEFINED":         0,
	"CONTAINER_CPU_USAGE_SECONDS_PERCENTAGE": 1,
	"CONTAINER_MEMORY_USAGE_BYTES":           2,
}

func (x ContainerMetricType) String() string {
	return proto.EnumName(ContainerMetricType_name, int32(x))
}
func (ContainerMetricType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_metric_0b3e3a8d9b49b384, []int{0}
}

type NodeMetricType int32

const (
	NodeMetricType_NODE_METRICTYPE_UNDEFINED         NodeMetricType = 0
	NodeMetricType_NODE_CPU_USAGE_SECONDS_PERCENTAGE NodeMetricType = 1
	NodeMetricType_NODE_MEMORY_USAGE_BYTES           NodeMetricType = 2
)

var NodeMetricType_name = map[int32]string{
	0: "NODE_METRICTYPE_UNDEFINED",
	1: "NODE_CPU_USAGE_SECONDS_PERCENTAGE",
	2: "NODE_MEMORY_USAGE_BYTES",
}
var NodeMetricType_value = map[string]int32{
	"NODE_METRICTYPE_UNDEFINED":         0,
	"NODE_CPU_USAGE_SECONDS_PERCENTAGE": 1,
	"NODE_MEMORY_USAGE_BYTES":           2,
}

func (x NodeMetricType) String() string {
	return proto.EnumName(NodeMetricType_name, int32(x))
}
func (NodeMetricType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_metric_0b3e3a8d9b49b384, []int{1}
}

type StrOp int32

const (
	StrOp_Equal    StrOp = 0
	StrOp_NotEqual StrOp = 1
)

var StrOp_name = map[int32]string{
	0: "Equal",
	1: "NotEqual",
}
var StrOp_value = map[string]int32{
	"Equal":    0,
	"NotEqual": 1,
}

func (x StrOp) String() string {
	return proto.EnumName(StrOp_name, int32(x))
}
func (StrOp) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_metric_0b3e3a8d9b49b384, []int{2}
}

type Sample struct {
	Time                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	NumValue             string               `protobuf:"bytes,2,opt,name=num_value,json=numValue,proto3" json:"num_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Sample) Reset()         { *m = Sample{} }
func (m *Sample) String() string { return proto.CompactTextString(m) }
func (*Sample) ProtoMessage()    {}
func (*Sample) Descriptor() ([]byte, []int) {
	return fileDescriptor_metric_0b3e3a8d9b49b384, []int{0}
}
func (m *Sample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sample.Unmarshal(m, b)
}
func (m *Sample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sample.Marshal(b, m, deterministic)
}
func (dst *Sample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sample.Merge(dst, src)
}
func (m *Sample) XXX_Size() int {
	return xxx_messageInfo_Sample.Size(m)
}
func (m *Sample) XXX_DiscardUnknown() {
	xxx_messageInfo_Sample.DiscardUnknown(m)
}

var xxx_messageInfo_Sample proto.InternalMessageInfo

func (m *Sample) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Sample) GetNumValue() string {
	if m != nil {
		return m.NumValue
	}
	return ""
}

type MetricResult struct {
	Labels               map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Samples              []*Sample         `protobuf:"bytes,2,rep,name=samples,proto3" json:"samples,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MetricResult) Reset()         { *m = MetricResult{} }
func (m *MetricResult) String() string { return proto.CompactTextString(m) }
func (*MetricResult) ProtoMessage()    {}
func (*MetricResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_metric_0b3e3a8d9b49b384, []int{1}
}
func (m *MetricResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricResult.Unmarshal(m, b)
}
func (m *MetricResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricResult.Marshal(b, m, deterministic)
}
func (dst *MetricResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricResult.Merge(dst, src)
}
func (m *MetricResult) XXX_Size() int {
	return xxx_messageInfo_MetricResult.Size(m)
}
func (m *MetricResult) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricResult.DiscardUnknown(m)
}

var xxx_messageInfo_MetricResult proto.InternalMessageInfo

func (m *MetricResult) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *MetricResult) GetSamples() []*Sample {
	if m != nil {
		return m.Samples
	}
	return nil
}

type TimeRange struct {
	StartTime            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Step                 *duration.Duration   `protobuf:"bytes,3,opt,name=step,proto3" json:"step,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TimeRange) Reset()         { *m = TimeRange{} }
func (m *TimeRange) String() string { return proto.CompactTextString(m) }
func (*TimeRange) ProtoMessage()    {}
func (*TimeRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_metric_0b3e3a8d9b49b384, []int{2}
}
func (m *TimeRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeRange.Unmarshal(m, b)
}
func (m *TimeRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeRange.Marshal(b, m, deterministic)
}
func (dst *TimeRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeRange.Merge(dst, src)
}
func (m *TimeRange) XXX_Size() int {
	return xxx_messageInfo_TimeRange.Size(m)
}
func (m *TimeRange) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeRange.DiscardUnknown(m)
}

var xxx_messageInfo_TimeRange proto.InternalMessageInfo

func (m *TimeRange) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *TimeRange) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *TimeRange) GetStep() *duration.Duration {
	if m != nil {
		return m.Step
	}
	return nil
}

type LabelSelector struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Op                   StrOp    `protobuf:"varint,2,opt,name=op,proto3,enum=containers_ai.alameda.v1alpha1.datahub.StrOp" json:"op,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LabelSelector) Reset()         { *m = LabelSelector{} }
func (m *LabelSelector) String() string { return proto.CompactTextString(m) }
func (*LabelSelector) ProtoMessage()    {}
func (*LabelSelector) Descriptor() ([]byte, []int) {
	return fileDescriptor_metric_0b3e3a8d9b49b384, []int{3}
}
func (m *LabelSelector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabelSelector.Unmarshal(m, b)
}
func (m *LabelSelector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabelSelector.Marshal(b, m, deterministic)
}
func (dst *LabelSelector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabelSelector.Merge(dst, src)
}
func (m *LabelSelector) XXX_Size() int {
	return xxx_messageInfo_LabelSelector.Size(m)
}
func (m *LabelSelector) XXX_DiscardUnknown() {
	xxx_messageInfo_LabelSelector.DiscardUnknown(m)
}

var xxx_messageInfo_LabelSelector proto.InternalMessageInfo

func (m *LabelSelector) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *LabelSelector) GetOp() StrOp {
	if m != nil {
		return m.Op
	}
	return StrOp_Equal
}

func (m *LabelSelector) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type MetricData struct {
	MetricType string `protobuf:"bytes,1,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"`
	// data can be time series or non-time series
	Data                 []*Sample `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MetricData) Reset()         { *m = MetricData{} }
func (m *MetricData) String() string { return proto.CompactTextString(m) }
func (*MetricData) ProtoMessage()    {}
func (*MetricData) Descriptor() ([]byte, []int) {
	return fileDescriptor_metric_0b3e3a8d9b49b384, []int{4}
}
func (m *MetricData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricData.Unmarshal(m, b)
}
func (m *MetricData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricData.Marshal(b, m, deterministic)
}
func (dst *MetricData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricData.Merge(dst, src)
}
func (m *MetricData) XXX_Size() int {
	return xxx_messageInfo_MetricData.Size(m)
}
func (m *MetricData) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricData.DiscardUnknown(m)
}

var xxx_messageInfo_MetricData proto.InternalMessageInfo

func (m *MetricData) GetMetricType() string {
	if m != nil {
		return m.MetricType
	}
	return ""
}

func (m *MetricData) GetData() []*Sample {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Sample)(nil), "containers_ai.alameda.v1alpha1.datahub.Sample")
	proto.RegisterType((*MetricResult)(nil), "containers_ai.alameda.v1alpha1.datahub.MetricResult")
	proto.RegisterMapType((map[string]string)(nil), "containers_ai.alameda.v1alpha1.datahub.MetricResult.LabelsEntry")
	proto.RegisterType((*TimeRange)(nil), "containers_ai.alameda.v1alpha1.datahub.TimeRange")
	proto.RegisterType((*LabelSelector)(nil), "containers_ai.alameda.v1alpha1.datahub.LabelSelector")
	proto.RegisterType((*MetricData)(nil), "containers_ai.alameda.v1alpha1.datahub.MetricData")
	proto.RegisterEnum("containers_ai.alameda.v1alpha1.datahub.ContainerMetricType", ContainerMetricType_name, ContainerMetricType_value)
	proto.RegisterEnum("containers_ai.alameda.v1alpha1.datahub.NodeMetricType", NodeMetricType_name, NodeMetricType_value)
	proto.RegisterEnum("containers_ai.alameda.v1alpha1.datahub.StrOp", StrOp_name, StrOp_value)
}

func init() {
	proto.RegisterFile("alameda_api/v1alpha1/datahub/metric.proto", fileDescriptor_metric_0b3e3a8d9b49b384)
}

var fileDescriptor_metric_0b3e3a8d9b49b384 = []byte{
	// 570 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x7f, 0x6b, 0xd3, 0x40,
	0x18, 0xc7, 0x97, 0x74, 0xbf, 0xf2, 0x74, 0x8e, 0x72, 0x0a, 0x76, 0x9d, 0x6e, 0x35, 0xe0, 0x98,
	0x83, 0x5d, 0xd9, 0x44, 0x70, 0x82, 0xe0, 0x96, 0x9c, 0x73, 0x60, 0xd3, 0x71, 0x49, 0xc5, 0xfd,
	0x15, 0xae, 0xcd, 0xd9, 0x05, 0xf3, 0x6b, 0xc9, 0xa5, 0xd0, 0x57, 0xe0, 0x9b, 0xf1, 0xad, 0xf9,
	0x1e, 0x24, 0x97, 0x94, 0x06, 0x9d, 0xac, 0xf8, 0x5f, 0x9e, 0xdc, 0xf3, 0xf9, 0x3e, 0xf7, 0xfd,
	0x3e, 0x07, 0xaf, 0x58, 0xc0, 0x42, 0xee, 0x31, 0x97, 0x25, 0x7e, 0x6f, 0x7a, 0xc2, 0x82, 0xe4,
	0x96, 0x9d, 0xf4, 0x3c, 0x26, 0xd8, 0x6d, 0x3e, 0xea, 0x85, 0x5c, 0xa4, 0xfe, 0x18, 0x27, 0x69,
	0x2c, 0x62, 0x74, 0x30, 0x8e, 0x23, 0xc1, 0xfc, 0x88, 0xa7, 0x99, 0xcb, 0x7c, 0x5c, 0x81, 0x78,
	0x0e, 0xe1, 0x0a, 0xea, 0xec, 0x4f, 0xe2, 0x78, 0x12, 0xf0, 0x9e, 0xa4, 0x46, 0xf9, 0xb7, 0x9e,
	0xf0, 0x43, 0x9e, 0x09, 0x16, 0x26, 0xa5, 0x50, 0x67, 0xef, 0xcf, 0x06, 0x2f, 0x4f, 0x99, 0xf0,
	0xe3, 0xa8, 0x3c, 0xd7, 0x87, 0xb0, 0x6e, 0xb3, 0x30, 0x09, 0x38, 0xc2, 0xb0, 0x5a, 0xc0, 0x6d,
	0xa5, 0xab, 0x1c, 0x36, 0x4f, 0x3b, 0xb8, 0x04, 0xf1, 0x1c, 0xc4, 0xce, 0x5c, 0x99, 0xca, 0x3e,
	0xb4, 0x0b, 0x5a, 0x94, 0x87, 0xee, 0x94, 0x05, 0x39, 0x6f, 0xab, 0x5d, 0xe5, 0x50, 0xa3, 0x9b,
	0x51, 0x1e, 0x7e, 0x29, 0x6a, 0xfd, 0x97, 0x02, 0x5b, 0x7d, 0x69, 0x88, 0xf2, 0x2c, 0x0f, 0x04,
	0xfa, 0x0a, 0xeb, 0x01, 0x1b, 0xf1, 0x20, 0x6b, 0x2b, 0xdd, 0xc6, 0x61, 0xf3, 0xf4, 0x03, 0x5e,
	0xce, 0x21, 0xae, 0xab, 0xe0, 0xcf, 0x52, 0x82, 0x44, 0x22, 0x9d, 0xd1, 0x4a, 0x0f, 0x7d, 0x82,
	0x8d, 0x4c, 0x3a, 0xc8, 0xda, 0xaa, 0x94, 0xc6, 0xcb, 0x4a, 0x97, 0xc6, 0xe9, 0x1c, 0xef, 0x9c,
	0x41, 0xb3, 0x36, 0x00, 0xb5, 0xa0, 0xf1, 0x9d, 0xcf, 0x64, 0x1e, 0x1a, 0x2d, 0x3e, 0xd1, 0x13,
	0x58, 0xab, 0xdb, 0x2d, 0x8b, 0x77, 0xea, 0x5b, 0x45, 0xff, 0xa9, 0x80, 0x56, 0x04, 0x44, 0x59,
	0x34, 0xe1, 0xe8, 0x0c, 0x20, 0x13, 0x2c, 0x15, 0xee, 0x92, 0x81, 0x6a, 0xb2, 0xbb, 0xa8, 0xd1,
	0x1b, 0xd8, 0xe4, 0x91, 0x57, 0x82, 0xea, 0x83, 0xe0, 0x06, 0x8f, 0x3c, 0x89, 0x1d, 0xc3, 0x6a,
	0x26, 0x78, 0xd2, 0x6e, 0x48, 0x64, 0xe7, 0x2f, 0xc4, 0xac, 0xb6, 0x4e, 0x65, 0x9b, 0x3e, 0x85,
	0x47, 0xd2, 0xa9, 0xcd, 0x03, 0x3e, 0x16, 0x71, 0x7a, 0x8f, 0xd7, 0xf7, 0xa0, 0xc6, 0x89, 0xbc,
	0xc2, 0xf6, 0xe9, 0xf1, 0xd2, 0x89, 0x8a, 0x74, 0x90, 0x50, 0x35, 0x4e, 0x16, 0x51, 0x35, 0x6a,
	0x51, 0xe9, 0x77, 0x00, 0xe5, 0x3e, 0x4d, 0x26, 0x18, 0xda, 0x87, 0x66, 0xf9, 0xe8, 0x5d, 0x31,
	0x4b, 0x78, 0x35, 0x1c, 0xca, 0x5f, 0xce, 0x2c, 0xe1, 0xe8, 0x02, 0x56, 0x0b, 0xe5, 0xff, 0xdc,
	0xab, 0x64, 0x8f, 0x7e, 0x28, 0xf0, 0xd8, 0x98, 0x73, 0xfd, 0x85, 0xb6, 0x0e, 0x7b, 0xc6, 0xc0,
	0x72, 0xce, 0xaf, 0x2c, 0x42, 0xdd, 0x3e, 0x71, 0xe8, 0x95, 0xe1, 0xdc, 0x5c, 0x13, 0x77, 0x68,
	0x99, 0xe4, 0xe3, 0x95, 0x45, 0xcc, 0xd6, 0x0a, 0x3a, 0x82, 0x83, 0x45, 0x8f, 0x71, 0x3d, 0x74,
	0x87, 0xf6, 0xf9, 0x25, 0x71, 0x6d, 0x62, 0x0c, 0x2c, 0xd3, 0x76, 0xaf, 0x09, 0x35, 0x88, 0xe5,
	0x9c, 0x5f, 0x92, 0x96, 0x82, 0xba, 0xf0, 0xac, 0xae, 0xd7, 0x1f, 0xd0, 0x9b, 0xaa, 0xfd, 0xe2,
	0xc6, 0x21, 0x76, 0x4b, 0x3d, 0xca, 0x60, 0xdb, 0x8a, 0x3d, 0x5e, 0xbb, 0xc3, 0x73, 0xd8, 0xb1,
	0x06, 0x26, 0xf9, 0xd7, 0xf8, 0x97, 0xf0, 0x42, 0x1e, 0x3f, 0x30, 0x79, 0x17, 0x9e, 0x56, 0x2a,
	0xf7, 0x0c, 0xed, 0xc2, 0x9a, 0x5c, 0x0a, 0xd2, 0x60, 0x8d, 0xdc, 0xe5, 0x2c, 0x68, 0xad, 0xa0,
	0x2d, 0xd8, 0xb4, 0x62, 0x51, 0x56, 0xca, 0x68, 0x5d, 0x3e, 0x92, 0xd7, 0xbf, 0x03, 0x00, 0x00,
	0xff, 0xff, 0xb8, 0x6c, 0x79, 0x37, 0x9e, 0x04, 0x00, 0x00,
}
