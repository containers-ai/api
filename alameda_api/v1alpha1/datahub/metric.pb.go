// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alameda_api/v1alpha1/datahub/metric.proto

package containers_ai_alameda_v1alpha1_datahub

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import duration "github.com/golang/protobuf/ptypes/duration"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *
// Metric type. A metric may be either CPU or memory.
type MetricType int32

const (
	MetricType_UNDEFINED                    MetricType = 0
	MetricType_CPU_USAGE_SECONDS_PERCENTAGE MetricType = 1
	MetricType_MEMORY_USAGE_BYTES           MetricType = 2
)

var MetricType_name = map[int32]string{
	0: "UNDEFINED",
	1: "CPU_USAGE_SECONDS_PERCENTAGE",
	2: "MEMORY_USAGE_BYTES",
}
var MetricType_value = map[string]int32{
	"UNDEFINED":                    0,
	"CPU_USAGE_SECONDS_PERCENTAGE": 1,
	"MEMORY_USAGE_BYTES":           2,
}

func (x MetricType) String() string {
	return proto.EnumName(MetricType_name, int32(x))
}
func (MetricType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_metric_bab1acd9809148d6, []int{0}
}

type TimeRange_AggregateFunction int32

const (
	TimeRange_NONE TimeRange_AggregateFunction = 0
	TimeRange_MAX  TimeRange_AggregateFunction = 1
)

var TimeRange_AggregateFunction_name = map[int32]string{
	0: "NONE",
	1: "MAX",
}
var TimeRange_AggregateFunction_value = map[string]int32{
	"NONE": 0,
	"MAX":  1,
}

func (x TimeRange_AggregateFunction) String() string {
	return proto.EnumName(TimeRange_AggregateFunction_name, int32(x))
}
func (TimeRange_AggregateFunction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_metric_bab1acd9809148d6, []int{4, 0}
}

// *
// Represents metric data of a container
type ContainerMetric struct {
	Name                 string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MetricData           []*MetricData `protobuf:"bytes,2,rep,name=metric_data,json=metricData,proto3" json:"metric_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ContainerMetric) Reset()         { *m = ContainerMetric{} }
func (m *ContainerMetric) String() string { return proto.CompactTextString(m) }
func (*ContainerMetric) ProtoMessage()    {}
func (*ContainerMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_metric_bab1acd9809148d6, []int{0}
}
func (m *ContainerMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerMetric.Unmarshal(m, b)
}
func (m *ContainerMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerMetric.Marshal(b, m, deterministic)
}
func (dst *ContainerMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerMetric.Merge(dst, src)
}
func (m *ContainerMetric) XXX_Size() int {
	return xxx_messageInfo_ContainerMetric.Size(m)
}
func (m *ContainerMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerMetric.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerMetric proto.InternalMessageInfo

func (m *ContainerMetric) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ContainerMetric) GetMetricData() []*MetricData {
	if m != nil {
		return m.MetricData
	}
	return nil
}

// *
// Represents metric data of a pod
type PodMetric struct {
	NamespacedName       *NamespacedName    `protobuf:"bytes,1,opt,name=namespaced_name,json=namespacedName,proto3" json:"namespaced_name,omitempty"`
	ContainerMetrics     []*ContainerMetric `protobuf:"bytes,2,rep,name=container_metrics,json=containerMetrics,proto3" json:"container_metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PodMetric) Reset()         { *m = PodMetric{} }
func (m *PodMetric) String() string { return proto.CompactTextString(m) }
func (*PodMetric) ProtoMessage()    {}
func (*PodMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_metric_bab1acd9809148d6, []int{1}
}
func (m *PodMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodMetric.Unmarshal(m, b)
}
func (m *PodMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodMetric.Marshal(b, m, deterministic)
}
func (dst *PodMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodMetric.Merge(dst, src)
}
func (m *PodMetric) XXX_Size() int {
	return xxx_messageInfo_PodMetric.Size(m)
}
func (m *PodMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_PodMetric.DiscardUnknown(m)
}

var xxx_messageInfo_PodMetric proto.InternalMessageInfo

func (m *PodMetric) GetNamespacedName() *NamespacedName {
	if m != nil {
		return m.NamespacedName
	}
	return nil
}

func (m *PodMetric) GetContainerMetrics() []*ContainerMetric {
	if m != nil {
		return m.ContainerMetrics
	}
	return nil
}

// *
// Represents metric data of a node
type NodeMetric struct {
	Name                 string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MetricData           []*MetricData `protobuf:"bytes,2,rep,name=metric_data,json=metricData,proto3" json:"metric_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NodeMetric) Reset()         { *m = NodeMetric{} }
func (m *NodeMetric) String() string { return proto.CompactTextString(m) }
func (*NodeMetric) ProtoMessage()    {}
func (*NodeMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_metric_bab1acd9809148d6, []int{2}
}
func (m *NodeMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeMetric.Unmarshal(m, b)
}
func (m *NodeMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeMetric.Marshal(b, m, deterministic)
}
func (dst *NodeMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeMetric.Merge(dst, src)
}
func (m *NodeMetric) XXX_Size() int {
	return xxx_messageInfo_NodeMetric.Size(m)
}
func (m *NodeMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeMetric.DiscardUnknown(m)
}

var xxx_messageInfo_NodeMetric proto.InternalMessageInfo

func (m *NodeMetric) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NodeMetric) GetMetricData() []*MetricData {
	if m != nil {
		return m.MetricData
	}
	return nil
}

// *
// Represents a data point of time-series metric data
type Sample struct {
	Time                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	NumValue             string               `protobuf:"bytes,2,opt,name=num_value,json=numValue,proto3" json:"num_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Sample) Reset()         { *m = Sample{} }
func (m *Sample) String() string { return proto.CompactTextString(m) }
func (*Sample) ProtoMessage()    {}
func (*Sample) Descriptor() ([]byte, []int) {
	return fileDescriptor_metric_bab1acd9809148d6, []int{3}
}
func (m *Sample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sample.Unmarshal(m, b)
}
func (m *Sample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sample.Marshal(b, m, deterministic)
}
func (dst *Sample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sample.Merge(dst, src)
}
func (m *Sample) XXX_Size() int {
	return xxx_messageInfo_Sample.Size(m)
}
func (m *Sample) XXX_DiscardUnknown() {
	xxx_messageInfo_Sample.DiscardUnknown(m)
}

var xxx_messageInfo_Sample proto.InternalMessageInfo

func (m *Sample) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Sample) GetNumValue() string {
	if m != nil {
		return m.NumValue
	}
	return ""
}

// *
// Represents a time range definition
//
type TimeRange struct {
	StartTime            *timestamp.Timestamp        `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp        `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Step                 *duration.Duration          `protobuf:"bytes,3,opt,name=step,proto3" json:"step,omitempty"`
	AggregateFunction    TimeRange_AggregateFunction `protobuf:"varint,4,opt,name=aggregateFunction,proto3,enum=containers_ai.alameda.v1alpha1.datahub.TimeRange_AggregateFunction" json:"aggregateFunction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *TimeRange) Reset()         { *m = TimeRange{} }
func (m *TimeRange) String() string { return proto.CompactTextString(m) }
func (*TimeRange) ProtoMessage()    {}
func (*TimeRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_metric_bab1acd9809148d6, []int{4}
}
func (m *TimeRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeRange.Unmarshal(m, b)
}
func (m *TimeRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeRange.Marshal(b, m, deterministic)
}
func (dst *TimeRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeRange.Merge(dst, src)
}
func (m *TimeRange) XXX_Size() int {
	return xxx_messageInfo_TimeRange.Size(m)
}
func (m *TimeRange) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeRange.DiscardUnknown(m)
}

var xxx_messageInfo_TimeRange proto.InternalMessageInfo

func (m *TimeRange) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *TimeRange) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *TimeRange) GetStep() *duration.Duration {
	if m != nil {
		return m.Step
	}
	return nil
}

func (m *TimeRange) GetAggregateFunction() TimeRange_AggregateFunction {
	if m != nil {
		return m.AggregateFunction
	}
	return TimeRange_NONE
}

// *
// Represents a piece of metreic data
type MetricData struct {
	MetricType MetricType `protobuf:"varint,1,opt,name=metric_type,json=metricType,proto3,enum=containers_ai.alameda.v1alpha1.datahub.MetricType" json:"metric_type,omitempty"`
	// data can be time series or non-time series
	Data                 []*Sample `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MetricData) Reset()         { *m = MetricData{} }
func (m *MetricData) String() string { return proto.CompactTextString(m) }
func (*MetricData) ProtoMessage()    {}
func (*MetricData) Descriptor() ([]byte, []int) {
	return fileDescriptor_metric_bab1acd9809148d6, []int{5}
}
func (m *MetricData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricData.Unmarshal(m, b)
}
func (m *MetricData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricData.Marshal(b, m, deterministic)
}
func (dst *MetricData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricData.Merge(dst, src)
}
func (m *MetricData) XXX_Size() int {
	return xxx_messageInfo_MetricData.Size(m)
}
func (m *MetricData) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricData.DiscardUnknown(m)
}

var xxx_messageInfo_MetricData proto.InternalMessageInfo

func (m *MetricData) GetMetricType() MetricType {
	if m != nil {
		return m.MetricType
	}
	return MetricType_UNDEFINED
}

func (m *MetricData) GetData() []*Sample {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ContainerMetric)(nil), "containers_ai.alameda.v1alpha1.datahub.ContainerMetric")
	proto.RegisterType((*PodMetric)(nil), "containers_ai.alameda.v1alpha1.datahub.PodMetric")
	proto.RegisterType((*NodeMetric)(nil), "containers_ai.alameda.v1alpha1.datahub.NodeMetric")
	proto.RegisterType((*Sample)(nil), "containers_ai.alameda.v1alpha1.datahub.Sample")
	proto.RegisterType((*TimeRange)(nil), "containers_ai.alameda.v1alpha1.datahub.TimeRange")
	proto.RegisterType((*MetricData)(nil), "containers_ai.alameda.v1alpha1.datahub.MetricData")
	proto.RegisterEnum("containers_ai.alameda.v1alpha1.datahub.MetricType", MetricType_name, MetricType_value)
	proto.RegisterEnum("containers_ai.alameda.v1alpha1.datahub.TimeRange_AggregateFunction", TimeRange_AggregateFunction_name, TimeRange_AggregateFunction_value)
}

func init() {
	proto.RegisterFile("alameda_api/v1alpha1/datahub/metric.proto", fileDescriptor_metric_bab1acd9809148d6)
}

var fileDescriptor_metric_bab1acd9809148d6 = []byte{
	// 543 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x52, 0x41, 0x6f, 0xd3, 0x4c,
	0x10, 0xad, 0x53, 0xab, 0xad, 0x27, 0xfa, 0x52, 0x67, 0x0f, 0x9f, 0x42, 0x40, 0x10, 0xf9, 0x50,
	0x05, 0x10, 0x1b, 0x35, 0x08, 0x10, 0xc7, 0x34, 0x71, 0x2b, 0x0e, 0x71, 0x22, 0x3b, 0x41, 0xf4,
	0x64, 0x4d, 0xe2, 0xc5, 0xb5, 0x14, 0xaf, 0x8d, 0xbd, 0xae, 0x54, 0xfe, 0x0f, 0xbf, 0x85, 0x3b,
	0xbf, 0x08, 0x79, 0x6d, 0x87, 0x36, 0x39, 0xd4, 0x5c, 0xb8, 0xcd, 0xd8, 0xef, 0xbd, 0x79, 0x33,
	0xfb, 0xe0, 0x25, 0x6e, 0x30, 0x64, 0x1e, 0xba, 0x18, 0x07, 0x83, 0xdb, 0x73, 0xdc, 0xc4, 0x37,
	0x78, 0x3e, 0xf0, 0x50, 0xe0, 0x4d, 0xb6, 0x1a, 0x84, 0x4c, 0x24, 0xc1, 0x9a, 0xc6, 0x49, 0x24,
	0x22, 0x72, 0xb6, 0x8e, 0xb8, 0xc0, 0x80, 0xb3, 0x24, 0x75, 0x31, 0xa0, 0x25, 0x91, 0x56, 0x24,
	0x5a, 0x92, 0xba, 0x2f, 0xfc, 0x28, 0xf2, 0x37, 0x6c, 0x20, 0x59, 0xab, 0xec, 0xeb, 0x40, 0x04,
	0x21, 0x4b, 0x05, 0x86, 0x71, 0x21, 0xd4, 0x7d, 0xbe, 0x0b, 0xf0, 0xb2, 0x04, 0x45, 0x10, 0xf1,
	0xf2, 0xff, 0xeb, 0xc7, 0x3c, 0x61, 0x5e, 0x17, 0x60, 0xe3, 0x3b, 0x9c, 0x8e, 0x2b, 0x5f, 0x53,
	0x69, 0x97, 0x10, 0x50, 0x39, 0x86, 0xac, 0xa3, 0xf4, 0x94, 0xbe, 0x66, 0xcb, 0x9a, 0x38, 0xd0,
	0x2c, 0x96, 0x71, 0x73, 0x6e, 0xa7, 0xd1, 0x3b, 0xec, 0x37, 0x87, 0x43, 0x5a, 0x6f, 0x25, 0x5a,
	0x08, 0x4f, 0x50, 0xa0, 0x0d, 0xe1, 0xb6, 0x36, 0x7e, 0x29, 0xa0, 0xcd, 0x23, 0xaf, 0x1c, 0xeb,
	0xc2, 0x69, 0x3e, 0x2a, 0x8d, 0x71, 0xcd, 0x3c, 0x77, 0xeb, 0xa0, 0x39, 0x7c, 0x5f, 0x77, 0x8c,
	0xb5, 0xa5, 0xe7, 0x95, 0xdd, 0xe2, 0x0f, 0x7a, 0xe2, 0x41, 0x7b, 0x2b, 0xe4, 0x16, 0x36, 0xd2,
	0x72, 0x93, 0x0f, 0x75, 0x47, 0xec, 0xdc, 0xca, 0xd6, 0xd7, 0x0f, 0x3f, 0xa4, 0x46, 0x06, 0x60,
	0x45, 0x1e, 0xfb, 0xd7, 0xb7, 0x5c, 0xc2, 0x91, 0x83, 0x61, 0xbc, 0x61, 0x84, 0x82, 0x9a, 0x27,
	0xa6, 0x3c, 0x5e, 0x97, 0x16, 0x69, 0xa1, 0x55, 0x5a, 0xe8, 0xa2, 0x8a, 0x93, 0x2d, 0x71, 0xe4,
	0x29, 0x68, 0x3c, 0x0b, 0xdd, 0x5b, 0xdc, 0x64, 0xac, 0xd3, 0x90, 0x3e, 0x4f, 0x78, 0x16, 0x7e,
	0xce, 0x7b, 0xe3, 0x67, 0x03, 0xb4, 0x9c, 0x60, 0x23, 0xf7, 0x19, 0xf9, 0x08, 0x90, 0x0a, 0x4c,
	0x84, 0x5b, 0x73, 0x80, 0x26, 0xd1, 0x79, 0x4f, 0xde, 0xc1, 0x09, 0xe3, 0x5e, 0x41, 0x6c, 0x3c,
	0x4a, 0x3c, 0x66, 0xdc, 0x93, 0xb4, 0x37, 0xa0, 0xa6, 0x82, 0xc5, 0x9d, 0x43, 0x49, 0x79, 0xb2,
	0x47, 0x99, 0x94, 0xd1, 0xb7, 0x25, 0x8c, 0x7c, 0x83, 0x36, 0xfa, 0x7e, 0xc2, 0x7c, 0x14, 0xec,
	0x32, 0xe3, 0xeb, 0xfc, 0x57, 0x47, 0xed, 0x29, 0xfd, 0xd6, 0x70, 0x5c, 0xf7, 0xc0, 0xdb, 0x75,
	0xe9, 0x68, 0x57, 0xca, 0xde, 0x57, 0x37, 0xce, 0xa0, 0xbd, 0x87, 0x23, 0x27, 0xa0, 0x5a, 0x33,
	0xcb, 0xd4, 0x0f, 0xc8, 0x31, 0x1c, 0x4e, 0x47, 0x5f, 0x74, 0xc5, 0xf8, 0xa1, 0x00, 0xfc, 0x79,
	0xbb, 0x7b, 0x21, 0x10, 0x77, 0x71, 0x71, 0xcb, 0xd6, 0xdf, 0x86, 0x60, 0x71, 0x17, 0xb3, 0x2a,
	0x04, 0x79, 0x4d, 0x2e, 0x40, 0xbd, 0x17, 0x29, 0x5a, 0x57, 0xad, 0x08, 0x8e, 0x2d, 0xb9, 0xaf,
	0x96, 0x95, 0x4d, 0xa9, 0xf8, 0x1f, 0x68, 0x4b, 0x6b, 0x62, 0x5e, 0x7e, 0xb2, 0xcc, 0x89, 0x7e,
	0x40, 0x7a, 0xf0, 0x6c, 0x3c, 0x5f, 0xba, 0x4b, 0x67, 0x74, 0x65, 0xba, 0x8e, 0x39, 0x9e, 0x59,
	0x13, 0xc7, 0x9d, 0x9b, 0xf6, 0xd8, 0xb4, 0x16, 0xa3, 0x2b, 0x53, 0x57, 0xc8, 0xff, 0x40, 0xa6,
	0xe6, 0x74, 0x66, 0x5f, 0x97, 0xa0, 0x8b, 0xeb, 0x85, 0xe9, 0xe8, 0x8d, 0xd5, 0x91, 0x7c, 0xb2,
	0xb7, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x27, 0xb7, 0x04, 0x90, 0x31, 0x05, 0x00, 0x00,
}
