// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alameda_api/v1alpha1/datahub/plannings/types.proto

package plannings

import (
	fmt "fmt"
	resources "github.com/containers-ai/api/alameda_api/v1alpha1/datahub/resources"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PlanningType int32

const (
	PlanningType_PT_UNDEFINED      PlanningType = 0
	PlanningType_PT_RECOMMENDATION PlanningType = 1
	PlanningType_PT_PLANNING       PlanningType = 2
)

var PlanningType_name = map[int32]string{
	0: "PT_UNDEFINED",
	1: "PT_RECOMMENDATION",
	2: "PT_PLANNING",
}

var PlanningType_value = map[string]int32{
	"PT_UNDEFINED":      0,
	"PT_RECOMMENDATION": 1,
	"PT_PLANNING":       2,
}

func (x PlanningType) String() string {
	return proto.EnumName(PlanningType_name, int32(x))
}

func (PlanningType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e677fba1b633a4fd, []int{0}
}

type ControllerPlanningType int32

const (
	ControllerPlanningType_CPT_UNDEFINED ControllerPlanningType = 0
	ControllerPlanningType_CPT_PRIMITIVE ControllerPlanningType = 1
	ControllerPlanningType_CPT_K8S       ControllerPlanningType = 2
)

var ControllerPlanningType_name = map[int32]string{
	0: "CPT_UNDEFINED",
	1: "CPT_PRIMITIVE",
	2: "CPT_K8S",
}

var ControllerPlanningType_value = map[string]int32{
	"CPT_UNDEFINED": 0,
	"CPT_PRIMITIVE": 1,
	"CPT_K8S":       2,
}

func (x ControllerPlanningType) String() string {
	return proto.EnumName(ControllerPlanningType_name, int32(x))
}

func (ControllerPlanningType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e677fba1b633a4fd, []int{1}
}

type ControllerPlanningSpec struct {
	ObjectMeta           *resources.ObjectMeta `protobuf:"bytes,1,opt,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	Kind                 resources.Kind        `protobuf:"varint,2,opt,name=kind,proto3,enum=containersai.alameda.v1alpha1.datahub.resources.Kind" json:"kind,omitempty"`
	CurrentReplicas      int32                 `protobuf:"varint,3,opt,name=current_replicas,json=currentReplicas,proto3" json:"current_replicas,omitempty"`
	DesiredReplicas      int32                 `protobuf:"varint,4,opt,name=desired_replicas,json=desiredReplicas,proto3" json:"desired_replicas,omitempty"`
	Time                 *timestamp.Timestamp  `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	CreateTime           *timestamp.Timestamp  `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	CurrentCpuRequests   float64               `protobuf:"fixed64,7,opt,name=current_cpu_requests,json=currentCpuRequests,proto3" json:"current_cpu_requests,omitempty"`
	CurrentMemRequests   float64               `protobuf:"fixed64,8,opt,name=current_mem_requests,json=currentMemRequests,proto3" json:"current_mem_requests,omitempty"`
	CurrentCpuLimits     float64               `protobuf:"fixed64,9,opt,name=current_cpu_limits,json=currentCpuLimits,proto3" json:"current_cpu_limits,omitempty"`
	CurrentMemLimits     float64               `protobuf:"fixed64,10,opt,name=current_mem_limits,json=currentMemLimits,proto3" json:"current_mem_limits,omitempty"`
	DesiredCpuLimits     float64               `protobuf:"fixed64,11,opt,name=desired_cpu_limits,json=desiredCpuLimits,proto3" json:"desired_cpu_limits,omitempty"`
	DesiredMemLimits     float64               `protobuf:"fixed64,12,opt,name=desired_mem_limits,json=desiredMemLimits,proto3" json:"desired_mem_limits,omitempty"`
	TotalCost            float64               `protobuf:"fixed64,13,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ControllerPlanningSpec) Reset()         { *m = ControllerPlanningSpec{} }
func (m *ControllerPlanningSpec) String() string { return proto.CompactTextString(m) }
func (*ControllerPlanningSpec) ProtoMessage()    {}
func (*ControllerPlanningSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e677fba1b633a4fd, []int{0}
}

func (m *ControllerPlanningSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControllerPlanningSpec.Unmarshal(m, b)
}
func (m *ControllerPlanningSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControllerPlanningSpec.Marshal(b, m, deterministic)
}
func (m *ControllerPlanningSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerPlanningSpec.Merge(m, src)
}
func (m *ControllerPlanningSpec) XXX_Size() int {
	return xxx_messageInfo_ControllerPlanningSpec.Size(m)
}
func (m *ControllerPlanningSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerPlanningSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerPlanningSpec proto.InternalMessageInfo

func (m *ControllerPlanningSpec) GetObjectMeta() *resources.ObjectMeta {
	if m != nil {
		return m.ObjectMeta
	}
	return nil
}

func (m *ControllerPlanningSpec) GetKind() resources.Kind {
	if m != nil {
		return m.Kind
	}
	return resources.Kind_POD
}

func (m *ControllerPlanningSpec) GetCurrentReplicas() int32 {
	if m != nil {
		return m.CurrentReplicas
	}
	return 0
}

func (m *ControllerPlanningSpec) GetDesiredReplicas() int32 {
	if m != nil {
		return m.DesiredReplicas
	}
	return 0
}

func (m *ControllerPlanningSpec) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *ControllerPlanningSpec) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *ControllerPlanningSpec) GetCurrentCpuRequests() float64 {
	if m != nil {
		return m.CurrentCpuRequests
	}
	return 0
}

func (m *ControllerPlanningSpec) GetCurrentMemRequests() float64 {
	if m != nil {
		return m.CurrentMemRequests
	}
	return 0
}

func (m *ControllerPlanningSpec) GetCurrentCpuLimits() float64 {
	if m != nil {
		return m.CurrentCpuLimits
	}
	return 0
}

func (m *ControllerPlanningSpec) GetCurrentMemLimits() float64 {
	if m != nil {
		return m.CurrentMemLimits
	}
	return 0
}

func (m *ControllerPlanningSpec) GetDesiredCpuLimits() float64 {
	if m != nil {
		return m.DesiredCpuLimits
	}
	return 0
}

func (m *ControllerPlanningSpec) GetDesiredMemLimits() float64 {
	if m != nil {
		return m.DesiredMemLimits
	}
	return 0
}

func (m *ControllerPlanningSpec) GetTotalCost() float64 {
	if m != nil {
		return m.TotalCost
	}
	return 0
}

type ControllerPlanningSpecK8S struct {
	ObjectMeta           *resources.ObjectMeta `protobuf:"bytes,1,opt,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	Kind                 resources.Kind        `protobuf:"varint,2,opt,name=kind,proto3,enum=containersai.alameda.v1alpha1.datahub.resources.Kind" json:"kind,omitempty"`
	CurrentReplicas      int32                 `protobuf:"varint,3,opt,name=current_replicas,json=currentReplicas,proto3" json:"current_replicas,omitempty"`
	DesiredReplicas      int32                 `protobuf:"varint,4,opt,name=desired_replicas,json=desiredReplicas,proto3" json:"desired_replicas,omitempty"`
	Time                 *timestamp.Timestamp  `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	CreateTime           *timestamp.Timestamp  `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ControllerPlanningSpecK8S) Reset()         { *m = ControllerPlanningSpecK8S{} }
func (m *ControllerPlanningSpecK8S) String() string { return proto.CompactTextString(m) }
func (*ControllerPlanningSpecK8S) ProtoMessage()    {}
func (*ControllerPlanningSpecK8S) Descriptor() ([]byte, []int) {
	return fileDescriptor_e677fba1b633a4fd, []int{1}
}

func (m *ControllerPlanningSpecK8S) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControllerPlanningSpecK8S.Unmarshal(m, b)
}
func (m *ControllerPlanningSpecK8S) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControllerPlanningSpecK8S.Marshal(b, m, deterministic)
}
func (m *ControllerPlanningSpecK8S) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerPlanningSpecK8S.Merge(m, src)
}
func (m *ControllerPlanningSpecK8S) XXX_Size() int {
	return xxx_messageInfo_ControllerPlanningSpecK8S.Size(m)
}
func (m *ControllerPlanningSpecK8S) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerPlanningSpecK8S.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerPlanningSpecK8S proto.InternalMessageInfo

func (m *ControllerPlanningSpecK8S) GetObjectMeta() *resources.ObjectMeta {
	if m != nil {
		return m.ObjectMeta
	}
	return nil
}

func (m *ControllerPlanningSpecK8S) GetKind() resources.Kind {
	if m != nil {
		return m.Kind
	}
	return resources.Kind_POD
}

func (m *ControllerPlanningSpecK8S) GetCurrentReplicas() int32 {
	if m != nil {
		return m.CurrentReplicas
	}
	return 0
}

func (m *ControllerPlanningSpecK8S) GetDesiredReplicas() int32 {
	if m != nil {
		return m.DesiredReplicas
	}
	return 0
}

func (m *ControllerPlanningSpecK8S) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *ControllerPlanningSpecK8S) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func init() {
	proto.RegisterEnum("containersai.alameda.v1alpha1.datahub.plannings.PlanningType", PlanningType_name, PlanningType_value)
	proto.RegisterEnum("containersai.alameda.v1alpha1.datahub.plannings.ControllerPlanningType", ControllerPlanningType_name, ControllerPlanningType_value)
	proto.RegisterType((*ControllerPlanningSpec)(nil), "containersai.alameda.v1alpha1.datahub.plannings.ControllerPlanningSpec")
	proto.RegisterType((*ControllerPlanningSpecK8S)(nil), "containersai.alameda.v1alpha1.datahub.plannings.ControllerPlanningSpecK8s")
}

func init() {
	proto.RegisterFile("alameda_api/v1alpha1/datahub/plannings/types.proto", fileDescriptor_e677fba1b633a4fd)
}

var fileDescriptor_e677fba1b633a4fd = []byte{
	// 566 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x94, 0xdf, 0x6e, 0x94, 0x40,
	0x14, 0xc6, 0xa5, 0x7f, 0xed, 0x6c, 0x6b, 0xe9, 0x44, 0x0d, 0x36, 0x31, 0x6e, 0x7a, 0xb5, 0x36,
	0x0a, 0xb6, 0xa6, 0x49, 0x93, 0x5e, 0x55, 0x8a, 0x4a, 0xb6, 0x50, 0x42, 0xd1, 0x0b, 0x63, 0x42,
	0x66, 0xe1, 0xb8, 0x1d, 0x05, 0x06, 0x67, 0x06, 0x93, 0x3e, 0x81, 0x8f, 0xe5, 0xab, 0x19, 0x06,
	0xd8, 0x65, 0x4d, 0xa3, 0xf5, 0xc6, 0x2b, 0xef, 0xc8, 0x37, 0xbf, 0xef, 0x3b, 0xcc, 0x99, 0x93,
	0x83, 0x0e, 0x49, 0x46, 0x72, 0x48, 0x49, 0x4c, 0x4a, 0x6a, 0x7d, 0x3b, 0x20, 0x59, 0x79, 0x45,
	0x0e, 0xac, 0x94, 0x48, 0x72, 0x55, 0x4d, 0xac, 0x32, 0x23, 0x45, 0x41, 0x8b, 0xa9, 0xb0, 0xe4,
	0x75, 0x09, 0xc2, 0x2c, 0x39, 0x93, 0x0c, 0x5b, 0x09, 0x2b, 0x24, 0xa1, 0x05, 0x70, 0x41, 0xa8,
	0xd9, 0x06, 0x98, 0x9d, 0xd9, 0x6c, 0xcd, 0xe6, 0xcc, 0xbc, 0xfb, 0x64, 0xca, 0xd8, 0x34, 0x03,
	0x4b, 0xd9, 0x27, 0xd5, 0x27, 0x4b, 0xd2, 0x1c, 0x84, 0x24, 0x79, 0xd9, 0x24, 0xee, 0x1e, 0xfd,
	0xf6, 0x2f, 0x38, 0x08, 0x56, 0xf1, 0x04, 0x84, 0x95, 0x83, 0x24, 0xb5, 0xda, 0xd8, 0xf6, 0x7e,
	0xac, 0xa2, 0x87, 0x36, 0x2b, 0x24, 0x67, 0x59, 0x06, 0x3c, 0x68, 0xeb, 0x5d, 0x96, 0x90, 0xe0,
	0x8f, 0x68, 0xc0, 0x26, 0x9f, 0x21, 0x91, 0x71, 0xed, 0x31, 0xb4, 0xa1, 0x36, 0x1a, 0x1c, 0x9e,
	0x98, 0xb7, 0xfb, 0xf3, 0x59, 0x41, 0xf3, 0x42, 0x65, 0x78, 0x20, 0x49, 0x88, 0xd8, 0xec, 0x1b,
	0xbb, 0x68, 0xe5, 0x0b, 0x2d, 0x52, 0x63, 0x69, 0xa8, 0x8d, 0xee, 0x1d, 0x1e, 0xfd, 0x75, 0xec,
	0x98, 0x16, 0x69, 0xa8, 0x22, 0xf0, 0x53, 0xa4, 0x27, 0x15, 0xe7, 0x50, 0xc8, 0x98, 0x43, 0x99,
	0xd1, 0x84, 0x08, 0x63, 0x79, 0xa8, 0x8d, 0x56, 0xc3, 0xed, 0x56, 0x0f, 0x5b, 0xb9, 0x46, 0x53,
	0x10, 0x94, 0x43, 0x3a, 0x47, 0x57, 0x1a, 0xb4, 0xd5, 0x67, 0xa8, 0x89, 0x56, 0xea, 0x1e, 0x1b,
	0xab, 0xea, 0xde, 0xbb, 0x66, 0xf3, 0x00, 0x66, 0xf7, 0x00, 0x66, 0xd4, 0x3d, 0x40, 0xa8, 0x38,
	0x7c, 0x82, 0x06, 0x09, 0x07, 0x22, 0x21, 0x56, 0xb6, 0xb5, 0x3f, 0xda, 0x50, 0x83, 0xd7, 0x02,
	0x7e, 0x81, 0xee, 0x77, 0x57, 0x48, 0xca, 0x2a, 0xe6, 0xf0, 0xb5, 0x02, 0x21, 0x85, 0xb1, 0x3e,
	0xd4, 0x46, 0x5a, 0x88, 0xdb, 0x33, 0xbb, 0xac, 0xc2, 0xf6, 0xa4, 0xef, 0xc8, 0x21, 0x9f, 0x3b,
	0xee, 0x2e, 0x38, 0x3c, 0xc8, 0x67, 0x8e, 0x67, 0x08, 0xf7, 0x6b, 0x64, 0x34, 0xa7, 0x52, 0x18,
	0x1b, 0x8a, 0xd7, 0xe7, 0x15, 0xce, 0x95, 0xde, 0xa7, 0xeb, 0xfc, 0x96, 0x46, 0x0b, 0xb4, 0x07,
	0xf9, 0x9c, 0xee, 0xfa, 0xda, 0xcb, 0x1e, 0x34, 0x74, 0x7b, 0xb2, 0x90, 0xdd, 0xd1, 0xbd, 0xec,
	0xcd, 0x05, 0x7a, 0x9e, 0xfd, 0x18, 0x21, 0xc9, 0x24, 0xc9, 0xe2, 0x84, 0x09, 0x69, 0x6c, 0x29,
	0x6a, 0x43, 0x29, 0x36, 0x13, 0x72, 0xef, 0xfb, 0x32, 0x7a, 0x74, 0xf3, 0x04, 0x8f, 0x8f, 0xc5,
	0xff, 0x21, 0xfe, 0x77, 0x43, 0xbc, 0xff, 0x16, 0x6d, 0x76, 0xed, 0x8f, 0xae, 0x4b, 0xc0, 0x3a,
	0xda, 0x0c, 0xa2, 0xf8, 0x9d, 0x7f, 0xe6, 0xbc, 0x76, 0x7d, 0xe7, 0x4c, 0xbf, 0x83, 0x1f, 0xa0,
	0x9d, 0x20, 0x8a, 0x43, 0xc7, 0xbe, 0xf0, 0x3c, 0xc7, 0x3f, 0x3b, 0x8d, 0xdc, 0x0b, 0x5f, 0xd7,
	0xf0, 0x36, 0x1a, 0x04, 0x51, 0x1c, 0x9c, 0x9f, 0xfa, 0xbe, 0xeb, 0xbf, 0xd1, 0x97, 0xf6, 0xc7,
	0x37, 0x2d, 0x25, 0x95, 0xb9, 0x83, 0xb6, 0xec, 0x5f, 0x42, 0x5b, 0x29, 0x08, 0x5d, 0xcf, 0x8d,
	0xdc, 0xf7, 0x8e, 0xae, 0xe1, 0x01, 0x5a, 0xaf, 0xa5, 0xf1, 0xf1, 0xa5, 0xbe, 0xf4, 0xca, 0xf9,
	0x60, 0x4f, 0xa9, 0xac, 0x1b, 0x9f, 0xb0, 0xbc, 0xb7, 0x78, 0x9f, 0x13, 0x6a, 0xd5, 0xcb, 0xf2,
	0x76, 0xeb, 0x7b, 0xb2, 0xa6, 0x6e, 0xff, 0xf2, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb5, 0x37,
	0x9a, 0x53, 0xef, 0x05, 0x00, 0x00,
}
