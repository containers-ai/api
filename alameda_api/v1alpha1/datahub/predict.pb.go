// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alameda_api/v1alpha1/datahub/predict.proto

package containers_ai_alameda_v1alpha1_datahub

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*
//  Recommendation policy. A policy may be either stable or compact.
type RecommendationPolicy int32

const (
	RecommendationPolicy_RECOMMENDATIONPOLICY_UNDEFINED RecommendationPolicy = 0
	RecommendationPolicy_STABLE                         RecommendationPolicy = 1
	RecommendationPolicy_COMPACT                        RecommendationPolicy = 2
)

var RecommendationPolicy_name = map[int32]string{
	0: "RECOMMENDATIONPOLICY_UNDEFINED",
	1: "STABLE",
	2: "COMPACT",
}

var RecommendationPolicy_value = map[string]int32{
	"RECOMMENDATIONPOLICY_UNDEFINED": 0,
	"STABLE":                         1,
	"COMPACT":                        2,
}

func (x RecommendationPolicy) String() string {
	return proto.EnumName(RecommendationPolicy_name, int32(x))
}

func (RecommendationPolicy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b6e9e6342a3cbd6, []int{0}
}

//*
// Represents a list of predicted metric data of a container
type ContainerPrediction struct {
	Name                    string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PredictedRawData        []*MetricData `protobuf:"bytes,2,rep,name=predicted_raw_data,json=predictedRawData,proto3" json:"predicted_raw_data,omitempty"`
	PredictedUpperboundData []*MetricData `protobuf:"bytes,3,rep,name=predicted_upperbound_data,json=predictedUpperboundData,proto3" json:"predicted_upperbound_data,omitempty"`
	PredictedLowerboundData []*MetricData `protobuf:"bytes,4,rep,name=predicted_lowerbound_data,json=predictedLowerboundData,proto3" json:"predicted_lowerbound_data,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}      `json:"-"`
	XXX_unrecognized        []byte        `json:"-"`
	XXX_sizecache           int32         `json:"-"`
}

func (m *ContainerPrediction) Reset()         { *m = ContainerPrediction{} }
func (m *ContainerPrediction) String() string { return proto.CompactTextString(m) }
func (*ContainerPrediction) ProtoMessage()    {}
func (*ContainerPrediction) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b6e9e6342a3cbd6, []int{0}
}

func (m *ContainerPrediction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerPrediction.Unmarshal(m, b)
}
func (m *ContainerPrediction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerPrediction.Marshal(b, m, deterministic)
}
func (m *ContainerPrediction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerPrediction.Merge(m, src)
}
func (m *ContainerPrediction) XXX_Size() int {
	return xxx_messageInfo_ContainerPrediction.Size(m)
}
func (m *ContainerPrediction) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerPrediction.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerPrediction proto.InternalMessageInfo

func (m *ContainerPrediction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ContainerPrediction) GetPredictedRawData() []*MetricData {
	if m != nil {
		return m.PredictedRawData
	}
	return nil
}

func (m *ContainerPrediction) GetPredictedUpperboundData() []*MetricData {
	if m != nil {
		return m.PredictedUpperboundData
	}
	return nil
}

func (m *ContainerPrediction) GetPredictedLowerboundData() []*MetricData {
	if m != nil {
		return m.PredictedLowerboundData
	}
	return nil
}

//*
// Represents a list of predicted metrics data of a pod
type PodPrediction struct {
	NamespacedName       *NamespacedName        `protobuf:"bytes,1,opt,name=namespaced_name,json=namespacedName,proto3" json:"namespaced_name,omitempty"`
	ModelId              string                 `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	PredictionId         string                 `protobuf:"bytes,3,opt,name=prediction_id,json=predictionId,proto3" json:"prediction_id,omitempty"`
	ContainerPredictions []*ContainerPrediction `protobuf:"bytes,4,rep,name=container_predictions,json=containerPredictions,proto3" json:"container_predictions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PodPrediction) Reset()         { *m = PodPrediction{} }
func (m *PodPrediction) String() string { return proto.CompactTextString(m) }
func (*PodPrediction) ProtoMessage()    {}
func (*PodPrediction) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b6e9e6342a3cbd6, []int{1}
}

func (m *PodPrediction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodPrediction.Unmarshal(m, b)
}
func (m *PodPrediction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodPrediction.Marshal(b, m, deterministic)
}
func (m *PodPrediction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodPrediction.Merge(m, src)
}
func (m *PodPrediction) XXX_Size() int {
	return xxx_messageInfo_PodPrediction.Size(m)
}
func (m *PodPrediction) XXX_DiscardUnknown() {
	xxx_messageInfo_PodPrediction.DiscardUnknown(m)
}

var xxx_messageInfo_PodPrediction proto.InternalMessageInfo

func (m *PodPrediction) GetNamespacedName() *NamespacedName {
	if m != nil {
		return m.NamespacedName
	}
	return nil
}

func (m *PodPrediction) GetModelId() string {
	if m != nil {
		return m.ModelId
	}
	return ""
}

func (m *PodPrediction) GetPredictionId() string {
	if m != nil {
		return m.PredictionId
	}
	return ""
}

func (m *PodPrediction) GetContainerPredictions() []*ContainerPrediction {
	if m != nil {
		return m.ContainerPredictions
	}
	return nil
}

//*
// Represents a list of predicted metric data of a node
type NodePrediction struct {
	Name                    string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ModelId                 string        `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	PredictionId            string        `protobuf:"bytes,3,opt,name=prediction_id,json=predictionId,proto3" json:"prediction_id,omitempty"`
	IsScheduled             bool          `protobuf:"varint,4,opt,name=is_scheduled,json=isScheduled,proto3" json:"is_scheduled,omitempty"`
	PredictedRawData        []*MetricData `protobuf:"bytes,5,rep,name=predicted_raw_data,json=predictedRawData,proto3" json:"predicted_raw_data,omitempty"`
	PredictedUpperboundData []*MetricData `protobuf:"bytes,6,rep,name=predicted_upperbound_data,json=predictedUpperboundData,proto3" json:"predicted_upperbound_data,omitempty"`
	PredictedLowerboundData []*MetricData `protobuf:"bytes,7,rep,name=predicted_lowerbound_data,json=predictedLowerboundData,proto3" json:"predicted_lowerbound_data,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}      `json:"-"`
	XXX_unrecognized        []byte        `json:"-"`
	XXX_sizecache           int32         `json:"-"`
}

func (m *NodePrediction) Reset()         { *m = NodePrediction{} }
func (m *NodePrediction) String() string { return proto.CompactTextString(m) }
func (*NodePrediction) ProtoMessage()    {}
func (*NodePrediction) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b6e9e6342a3cbd6, []int{2}
}

func (m *NodePrediction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodePrediction.Unmarshal(m, b)
}
func (m *NodePrediction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodePrediction.Marshal(b, m, deterministic)
}
func (m *NodePrediction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodePrediction.Merge(m, src)
}
func (m *NodePrediction) XXX_Size() int {
	return xxx_messageInfo_NodePrediction.Size(m)
}
func (m *NodePrediction) XXX_DiscardUnknown() {
	xxx_messageInfo_NodePrediction.DiscardUnknown(m)
}

var xxx_messageInfo_NodePrediction proto.InternalMessageInfo

func (m *NodePrediction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NodePrediction) GetModelId() string {
	if m != nil {
		return m.ModelId
	}
	return ""
}

func (m *NodePrediction) GetPredictionId() string {
	if m != nil {
		return m.PredictionId
	}
	return ""
}

func (m *NodePrediction) GetIsScheduled() bool {
	if m != nil {
		return m.IsScheduled
	}
	return false
}

func (m *NodePrediction) GetPredictedRawData() []*MetricData {
	if m != nil {
		return m.PredictedRawData
	}
	return nil
}

func (m *NodePrediction) GetPredictedUpperboundData() []*MetricData {
	if m != nil {
		return m.PredictedUpperboundData
	}
	return nil
}

func (m *NodePrediction) GetPredictedLowerboundData() []*MetricData {
	if m != nil {
		return m.PredictedLowerboundData
	}
	return nil
}

func init() {
	proto.RegisterEnum("containers_ai.alameda.v1alpha1.datahub.RecommendationPolicy", RecommendationPolicy_name, RecommendationPolicy_value)
	proto.RegisterType((*ContainerPrediction)(nil), "containers_ai.alameda.v1alpha1.datahub.ContainerPrediction")
	proto.RegisterType((*PodPrediction)(nil), "containers_ai.alameda.v1alpha1.datahub.PodPrediction")
	proto.RegisterType((*NodePrediction)(nil), "containers_ai.alameda.v1alpha1.datahub.NodePrediction")
}

func init() {
	proto.RegisterFile("alameda_api/v1alpha1/datahub/predict.proto", fileDescriptor_1b6e9e6342a3cbd6)
}

var fileDescriptor_1b6e9e6342a3cbd6 = []byte{
	// 464 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0xd1, 0x8e, 0xd2, 0x40,
	0x14, 0x95, 0x82, 0xb0, 0x5e, 0x76, 0x57, 0x32, 0xae, 0x91, 0xdd, 0x07, 0x83, 0x98, 0x18, 0x5c,
	0x93, 0x92, 0xc5, 0xc4, 0x17, 0x9f, 0xb0, 0xd4, 0xa4, 0x09, 0x94, 0xa6, 0xb0, 0x0f, 0x3e, 0x8d,
	0x97, 0xce, 0x24, 0x4c, 0xd2, 0x76, 0x26, 0x6d, 0x91, 0xf8, 0x3b, 0xfe, 0x8d, 0xdf, 0xe2, 0x4f,
	0x98, 0x96, 0x32, 0xb8, 0x59, 0x75, 0x89, 0x6e, 0x78, 0xbb, 0x73, 0xef, 0xdc, 0x73, 0xce, 0x9c,
	0x9e, 0x14, 0x2e, 0x31, 0xc4, 0x88, 0x33, 0xa4, 0xa8, 0x44, 0xff, 0xcb, 0x15, 0x86, 0x6a, 0x89,
	0x57, 0x7d, 0x86, 0x19, 0x2e, 0x57, 0x8b, 0xbe, 0x4a, 0x38, 0x13, 0x41, 0x66, 0xaa, 0x44, 0x66,
	0x92, 0xbc, 0x0a, 0x64, 0x9c, 0xa1, 0x88, 0x79, 0x92, 0x52, 0x14, 0x66, 0xb9, 0x69, 0x6e, 0xb7,
	0xcc, 0x72, 0xeb, 0xe2, 0xcd, 0x5f, 0x31, 0x23, 0x9e, 0x61, 0x5e, 0x6f, 0x40, 0x2f, 0x5e, 0xdf,
	0x75, 0x39, 0x11, 0xc1, 0xe6, 0x6a, 0xf7, 0x87, 0x01, 0x4f, 0xac, 0xad, 0x04, 0x6f, 0x23, 0x4d,
	0xc8, 0x98, 0x10, 0xa8, 0xc5, 0x18, 0xf1, 0x76, 0xa5, 0x53, 0xe9, 0x3d, 0xf2, 0x8b, 0x9a, 0x7c,
	0x06, 0x52, 0x8a, 0xe7, 0x8c, 0x26, 0xb8, 0xa6, 0x39, 0x62, 0xdb, 0xe8, 0x54, 0x7b, 0xcd, 0xc1,
	0xc0, 0xdc, 0xef, 0x21, 0xe6, 0xa4, 0x60, 0x1f, 0x61, 0x86, 0x7e, 0x4b, 0xa3, 0xf9, 0xb8, 0xce,
	0x3b, 0x24, 0x86, 0xf3, 0x1d, 0xc3, 0x4a, 0x29, 0x9e, 0x2c, 0xe4, 0x2a, 0x66, 0x1b, 0xa2, 0xea,
	0x3f, 0x13, 0x3d, 0xd3, 0xa0, 0xd7, 0x1a, 0xf3, 0x36, 0x5f, 0x28, 0xd7, 0x37, 0xf8, 0x6a, 0xf7,
	0xc0, 0x37, 0xd6, 0x98, 0xf9, 0xa0, 0xfb, 0xcd, 0x80, 0x13, 0x4f, 0xb2, 0x5f, 0x7c, 0xa6, 0xf0,
	0x38, 0xf7, 0x36, 0x55, 0x18, 0x70, 0x46, 0xb5, 0xe5, 0xcd, 0xc1, 0xbb, 0x7d, 0x79, 0x5d, 0xbd,
	0x9e, 0x57, 0xfe, 0x69, 0x7c, 0xe3, 0x4c, 0xce, 0xe1, 0x28, 0x92, 0x8c, 0x87, 0x54, 0xb0, 0xb6,
	0x51, 0x7c, 0xcc, 0x46, 0x71, 0x76, 0x18, 0x79, 0x09, 0x27, 0x4a, 0x2b, 0xc9, 0xe7, 0xd5, 0x62,
	0x7e, 0xbc, 0x6b, 0x3a, 0x8c, 0x28, 0x78, 0xaa, 0x85, 0xd0, 0xdd, 0x24, 0x2d, 0xed, 0x79, 0xbf,
	0xaf, 0xcc, 0xdf, 0x84, 0xcc, 0x3f, 0x0b, 0x6e, 0x37, 0xd3, 0xee, 0xf7, 0x2a, 0x9c, 0xba, 0x92,
	0xf1, 0x3b, 0xd2, 0xf8, 0xbf, 0x0f, 0x7b, 0x01, 0xc7, 0x22, 0xa5, 0x69, 0xb0, 0xe4, 0x6c, 0x15,
	0x72, 0xd6, 0xae, 0x75, 0x2a, 0xbd, 0x23, 0xbf, 0x29, 0xd2, 0xd9, 0xb6, 0xf5, 0x87, 0xc0, 0x3f,
	0x3c, 0x54, 0xe0, 0xeb, 0x07, 0x0e, 0x7c, 0xe3, 0xde, 0x03, 0x7f, 0x39, 0x83, 0x33, 0x9f, 0x07,
	0x32, 0x8a, 0x78, 0xcc, 0x30, 0x37, 0xde, 0x93, 0xa1, 0x08, 0xbe, 0x92, 0x2e, 0x3c, 0xf7, 0x6d,
	0x6b, 0x3a, 0x99, 0xd8, 0xee, 0x68, 0x38, 0x77, 0xa6, 0xae, 0x37, 0x1d, 0x3b, 0xd6, 0x27, 0x7a,
	0xed, 0x8e, 0xec, 0x8f, 0x8e, 0x6b, 0x8f, 0x5a, 0x0f, 0x08, 0x40, 0x7d, 0x36, 0x1f, 0x7e, 0x18,
	0xdb, 0xad, 0x0a, 0x69, 0x42, 0xc3, 0x9a, 0x4e, 0xbc, 0xa1, 0x35, 0x6f, 0x19, 0x8b, 0x7a, 0xf1,
	0xeb, 0x7a, 0xfb, 0x33, 0x00, 0x00, 0xff, 0xff, 0x59, 0x30, 0x0e, 0x6b, 0x68, 0x05, 0x00, 0x00,
}
