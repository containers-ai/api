// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alameda_api/v1alpha1/datahub/predict.proto

package containers_ai_alameda_v1alpha1_datahub

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RecommendationPolicy int32

const (
	RecommendationPolicy_RECOMMENDATIONPOLICY_UNDEFINED RecommendationPolicy = 0
	RecommendationPolicy_STABLE                         RecommendationPolicy = 1
	RecommendationPolicy_COMPACT                        RecommendationPolicy = 2
)

var RecommendationPolicy_name = map[int32]string{
	0: "RECOMMENDATIONPOLICY_UNDEFINED",
	1: "STABLE",
	2: "COMPACT",
}
var RecommendationPolicy_value = map[string]int32{
	"RECOMMENDATIONPOLICY_UNDEFINED": 0,
	"STABLE":                         1,
	"COMPACT":                        2,
}

func (x RecommendationPolicy) String() string {
	return proto.EnumName(RecommendationPolicy_name, int32(x))
}
func (RecommendationPolicy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_predict_6e7461f2a2c102cd, []int{0}
}

type PredictContainer struct {
	Name                          string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RowPredictData                []*MetricData `protobuf:"bytes,2,rep,name=row_predict_data,json=rowPredictData,proto3" json:"row_predict_data,omitempty"`
	LimitPredictData              []*MetricData `protobuf:"bytes,3,rep,name=limit_predict_data,json=limitPredictData,proto3" json:"limit_predict_data,omitempty"`
	RequestPredictData            []*MetricData `protobuf:"bytes,4,rep,name=request_predict_data,json=requestPredictData,proto3" json:"request_predict_data,omitempty"`
	InitialLimitPredictResource   []*MetricData `protobuf:"bytes,5,rep,name=initial_limit_predict_resource,json=initialLimitPredictResource,proto3" json:"initial_limit_predict_resource,omitempty"`
	InitialRequestPredictResource []*MetricData `protobuf:"bytes,6,rep,name=initial_request_predict_resource,json=initialRequestPredictResource,proto3" json:"initial_request_predict_resource,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}      `json:"-"`
	XXX_unrecognized              []byte        `json:"-"`
	XXX_sizecache                 int32         `json:"-"`
}

func (m *PredictContainer) Reset()         { *m = PredictContainer{} }
func (m *PredictContainer) String() string { return proto.CompactTextString(m) }
func (*PredictContainer) ProtoMessage()    {}
func (*PredictContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor_predict_6e7461f2a2c102cd, []int{0}
}
func (m *PredictContainer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PredictContainer.Unmarshal(m, b)
}
func (m *PredictContainer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PredictContainer.Marshal(b, m, deterministic)
}
func (dst *PredictContainer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PredictContainer.Merge(dst, src)
}
func (m *PredictContainer) XXX_Size() int {
	return xxx_messageInfo_PredictContainer.Size(m)
}
func (m *PredictContainer) XXX_DiscardUnknown() {
	xxx_messageInfo_PredictContainer.DiscardUnknown(m)
}

var xxx_messageInfo_PredictContainer proto.InternalMessageInfo

func (m *PredictContainer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PredictContainer) GetRowPredictData() []*MetricData {
	if m != nil {
		return m.RowPredictData
	}
	return nil
}

func (m *PredictContainer) GetLimitPredictData() []*MetricData {
	if m != nil {
		return m.LimitPredictData
	}
	return nil
}

func (m *PredictContainer) GetRequestPredictData() []*MetricData {
	if m != nil {
		return m.RequestPredictData
	}
	return nil
}

func (m *PredictContainer) GetInitialLimitPredictResource() []*MetricData {
	if m != nil {
		return m.InitialLimitPredictResource
	}
	return nil
}

func (m *PredictContainer) GetInitialRequestPredictResource() []*MetricData {
	if m != nil {
		return m.InitialRequestPredictResource
	}
	return nil
}

type PredictPod struct {
	Uid                  string              `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	NamespacedName       *NamespacedName     `protobuf:"bytes,2,opt,name=namespaced_name,json=namespacedName,proto3" json:"namespaced_name,omitempty"`
	PredictContainers    []*PredictContainer `protobuf:"bytes,3,rep,name=predict_containers,json=predictContainers,proto3" json:"predict_containers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PredictPod) Reset()         { *m = PredictPod{} }
func (m *PredictPod) String() string { return proto.CompactTextString(m) }
func (*PredictPod) ProtoMessage()    {}
func (*PredictPod) Descriptor() ([]byte, []int) {
	return fileDescriptor_predict_6e7461f2a2c102cd, []int{1}
}
func (m *PredictPod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PredictPod.Unmarshal(m, b)
}
func (m *PredictPod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PredictPod.Marshal(b, m, deterministic)
}
func (dst *PredictPod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PredictPod.Merge(dst, src)
}
func (m *PredictPod) XXX_Size() int {
	return xxx_messageInfo_PredictPod.Size(m)
}
func (m *PredictPod) XXX_DiscardUnknown() {
	xxx_messageInfo_PredictPod.DiscardUnknown(m)
}

var xxx_messageInfo_PredictPod proto.InternalMessageInfo

func (m *PredictPod) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *PredictPod) GetNamespacedName() *NamespacedName {
	if m != nil {
		return m.NamespacedName
	}
	return nil
}

func (m *PredictPod) GetPredictContainers() []*PredictContainer {
	if m != nil {
		return m.PredictContainers
	}
	return nil
}

type PredictNode struct {
	Name                 string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RowPredictData       []*MetricData `protobuf:"bytes,2,rep,name=row_predict_data,json=rowPredictData,proto3" json:"row_predict_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PredictNode) Reset()         { *m = PredictNode{} }
func (m *PredictNode) String() string { return proto.CompactTextString(m) }
func (*PredictNode) ProtoMessage()    {}
func (*PredictNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_predict_6e7461f2a2c102cd, []int{2}
}
func (m *PredictNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PredictNode.Unmarshal(m, b)
}
func (m *PredictNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PredictNode.Marshal(b, m, deterministic)
}
func (dst *PredictNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PredictNode.Merge(dst, src)
}
func (m *PredictNode) XXX_Size() int {
	return xxx_messageInfo_PredictNode.Size(m)
}
func (m *PredictNode) XXX_DiscardUnknown() {
	xxx_messageInfo_PredictNode.DiscardUnknown(m)
}

var xxx_messageInfo_PredictNode proto.InternalMessageInfo

func (m *PredictNode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PredictNode) GetRowPredictData() []*MetricData {
	if m != nil {
		return m.RowPredictData
	}
	return nil
}

func init() {
	proto.RegisterType((*PredictContainer)(nil), "containers_ai.alameda.v1alpha1.datahub.PredictContainer")
	proto.RegisterType((*PredictPod)(nil), "containers_ai.alameda.v1alpha1.datahub.PredictPod")
	proto.RegisterType((*PredictNode)(nil), "containers_ai.alameda.v1alpha1.datahub.PredictNode")
	proto.RegisterEnum("containers_ai.alameda.v1alpha1.datahub.RecommendationPolicy", RecommendationPolicy_name, RecommendationPolicy_value)
}

func init() {
	proto.RegisterFile("alameda_api/v1alpha1/datahub/predict.proto", fileDescriptor_predict_6e7461f2a2c102cd)
}

var fileDescriptor_predict_6e7461f2a2c102cd = []byte{
	// 444 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x94, 0x41, 0x8b, 0xd3, 0x40,
	0x14, 0xc7, 0x4d, 0x5b, 0x2b, 0xbe, 0xc2, 0x1a, 0x87, 0x3d, 0x94, 0x15, 0x97, 0xd2, 0x83, 0xd4,
	0x15, 0x52, 0xb6, 0x82, 0x78, 0xad, 0x69, 0x84, 0x42, 0x9b, 0x86, 0xd9, 0x7a, 0x10, 0x84, 0xf1,
	0x6d, 0x66, 0x70, 0x07, 0x92, 0x4c, 0x9c, 0x4c, 0x2d, 0xe2, 0xc1, 0xef, 0xe6, 0xa7, 0xf1, 0x63,
	0x48, 0xd2, 0xc9, 0xda, 0xf6, 0x50, 0x4a, 0x0f, 0x7b, 0x9b, 0x19, 0xe6, 0xfd, 0x7e, 0xef, 0x4f,
	0xde, 0x04, 0xae, 0x30, 0xc1, 0x54, 0x70, 0x64, 0x98, 0xcb, 0xe1, 0x8f, 0x6b, 0x4c, 0xf2, 0x3b,
	0xbc, 0x1e, 0x72, 0x34, 0x78, 0xb7, 0xba, 0x1d, 0xe6, 0x5a, 0x70, 0x19, 0x1b, 0x2f, 0xd7, 0xca,
	0x28, 0xf2, 0x2a, 0x56, 0x99, 0x41, 0x99, 0x09, 0x5d, 0x30, 0x94, 0x9e, 0xad, 0xf4, 0xea, 0x2a,
	0xcf, 0x56, 0x5d, 0xbc, 0x39, 0xc8, 0xd4, 0xa2, 0x50, 0x2b, 0x1d, 0x8b, 0x0d, 0xf4, 0xe2, 0xf5,
	0xc1, 0xcb, 0xa9, 0x30, 0x5a, 0xc6, 0x9b, 0xab, 0xfd, 0x3f, 0x2d, 0x70, 0xa3, 0x4d, 0x47, 0x7e,
	0xdd, 0x09, 0x21, 0xd0, 0xca, 0x30, 0x15, 0x5d, 0xa7, 0xe7, 0x0c, 0x9e, 0xd2, 0x6a, 0x4d, 0xbe,
	0x80, 0xab, 0xd5, 0x9a, 0xd9, 0xee, 0x59, 0x09, 0xeb, 0x36, 0x7a, 0xcd, 0x41, 0x67, 0x34, 0xf2,
	0x8e, 0xcb, 0xe0, 0xcd, 0x2b, 0xf1, 0x04, 0x0d, 0xd2, 0x33, 0xad, 0xd6, 0x56, 0x5b, 0xee, 0xc9,
	0x57, 0x20, 0x89, 0x4c, 0xa5, 0xd9, 0xe5, 0x37, 0x4f, 0xe6, 0xbb, 0x15, 0x6d, 0xdb, 0xc0, 0xe1,
	0x5c, 0x8b, 0xef, 0x2b, 0x51, 0xec, 0x39, 0x5a, 0x27, 0x3b, 0x88, 0xe5, 0x6d, 0x5b, 0xd6, 0x70,
	0x29, 0x33, 0x69, 0x24, 0x26, 0x6c, 0x37, 0x4f, 0xfd, 0x85, 0xba, 0x8f, 0x4f, 0xf6, 0xbd, 0xb0,
	0xe4, 0xd9, 0x56, 0x34, 0x6a, 0xb1, 0xe4, 0x17, 0xf4, 0x6a, 0xf1, 0x7e, 0xcc, 0x7b, 0x75, 0xfb,
	0x64, 0xf5, 0x4b, 0xcb, 0xa6, 0x3b, 0x89, 0x6b, 0x79, 0xff, 0xaf, 0x03, 0x60, 0xcf, 0x22, 0xc5,
	0x89, 0x0b, 0xcd, 0x95, 0xe4, 0x76, 0x7a, 0xca, 0x25, 0x61, 0xf0, 0xac, 0x1c, 0xa2, 0x22, 0xc7,
	0x58, 0x70, 0x56, 0xcd, 0x56, 0xa3, 0xe7, 0x0c, 0x3a, 0xa3, 0x77, 0xc7, 0x36, 0x13, 0xde, 0x97,
	0x97, 0x2b, 0x7a, 0x96, 0xed, 0xec, 0xc9, 0x37, 0x20, 0x75, 0xdc, 0xff, 0x40, 0x3b, 0x3f, 0xef,
	0x8f, 0x75, 0xec, 0xbf, 0x03, 0xfa, 0x3c, 0xdf, 0x3b, 0x29, 0xfa, 0xbf, 0xa1, 0x63, 0xaf, 0x85,
	0x8a, 0x8b, 0x87, 0x7f, 0x29, 0x57, 0x37, 0x70, 0x4e, 0x45, 0xac, 0xd2, 0x54, 0x64, 0x1c, 0x8d,
	0x54, 0x59, 0xa4, 0x12, 0x19, 0xff, 0x24, 0x7d, 0xb8, 0xa4, 0x81, 0xbf, 0x98, 0xcf, 0x83, 0x70,
	0x32, 0x5e, 0x4e, 0x17, 0x61, 0xb4, 0x98, 0x4d, 0xfd, 0xcf, 0xec, 0x53, 0x38, 0x09, 0x3e, 0x4e,
	0xc3, 0x60, 0xe2, 0x3e, 0x22, 0x00, 0xed, 0x9b, 0xe5, 0xf8, 0xc3, 0x2c, 0x70, 0x1d, 0xd2, 0x81,
	0x27, 0xfe, 0x62, 0x1e, 0x8d, 0xfd, 0xa5, 0xdb, 0xb8, 0x6d, 0x57, 0x3f, 0x83, 0xb7, 0xff, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x2b, 0x7b, 0x30, 0x50, 0xba, 0x04, 0x00, 0x00,
}
