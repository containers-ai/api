// This file has messages related to compute resources

syntax = "proto3";

package containersai.alameda.v1alpha1.datahub.resources;

import "alameda_api/v1alpha1/datahub/common/metrics.proto";
import "alameda_api/v1alpha1/datahub/resources/metadata.proto";
import "alameda_api/v1alpha1/datahub/resources/policies.proto";
import "alameda_api/v1alpha1/datahub/resources/status.proto";
import "alameda_api/v1alpha1/datahub/resources/types.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/containers-ai/api/alameda_api/v1alpha1/datahub/resources";

/**
 * Represents a container and its containing limit and requeset configurations
 *
 */
message Container {
    string                     name             = 1;
    repeated common.MetricData limit_resource   = 2;
    repeated common.MetricData request_resource = 3;
    ContainerStatus            status           = 4;
}

/**
 * Represents a Kubernetes pod
 *
 */
message Pod {
    NamespacedName            namespaced_name          = 1;
    string                    resource_link            = 2;
    repeated Container        containers               = 3;
    bool                      is_alameda               = 4;
    NamespacedName            alameda_scaler           = 5;
    string                    node_name                = 6;
    google.protobuf.Timestamp start_time               = 7;
    RecommendationPolicy      policy                   = 8;
    TopController             top_controller           = 9;
    string                    used_recommendation_id   = 10;
    PodStatus                 status                   = 11;
    bool                      enable_VPA               = 12;
    bool                      enable_HPA               = 13;
    string                    app_name                 = 14;
    string                    app_part_of              = 15;
    ResourceRequirements      alameda_scaler_resources = 16;
}

message Controller {
    ResourceInfo          controller_info                 = 1;
    repeated ResourceInfo owner_info                      = 2;
    int32                 replicas                        = 3;
    bool                  enable_recommendation_execution = 4;
    RecommendationPolicy  policy                          = 5;
    int32                 spec_replicas                   = 6;
}

/**
 * Represents a Kubernetes node
 *
 */
message Node {
    string                    name       = 1;
    Capacity                  capacity   = 2;
    google.protobuf.Timestamp start_time = 3;
    Provider                  provider   = 4;
}
