// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alameda_api/v1alpha1/datahub/datamappings/datamapping.proto

package datamappings

import (
	fmt "fmt"
	common "github.com/containers-ai/api/alameda_api/v1alpha1/datahub/common"
	schemas "github.com/containers-ai/api/alameda_api/v1alpha1/datahub/schemas"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DataMapping struct {
	SchemaMeta           *schemas.SchemaMeta `protobuf:"bytes,1,opt,name=schema_meta,json=schemaMeta,proto3" json:"schema_meta,omitempty"`
	MetricType           common.MetricType   `protobuf:"varint,2,opt,name=metric_type,json=metricType,proto3,enum=containersai.alameda.v1alpha1.datahub.common.MetricType" json:"metric_type,omitempty"`
	Columns              []*Column           `protobuf:"bytes,3,rep,name=columns,proto3" json:"columns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DataMapping) Reset()         { *m = DataMapping{} }
func (m *DataMapping) String() string { return proto.CompactTextString(m) }
func (*DataMapping) ProtoMessage()    {}
func (*DataMapping) Descriptor() ([]byte, []int) {
	return fileDescriptor_1316c57bf27f7d7c, []int{0}
}

func (m *DataMapping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataMapping.Unmarshal(m, b)
}
func (m *DataMapping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataMapping.Marshal(b, m, deterministic)
}
func (m *DataMapping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataMapping.Merge(m, src)
}
func (m *DataMapping) XXX_Size() int {
	return xxx_messageInfo_DataMapping.Size(m)
}
func (m *DataMapping) XXX_DiscardUnknown() {
	xxx_messageInfo_DataMapping.DiscardUnknown(m)
}

var xxx_messageInfo_DataMapping proto.InternalMessageInfo

func (m *DataMapping) GetSchemaMeta() *schemas.SchemaMeta {
	if m != nil {
		return m.SchemaMeta
	}
	return nil
}

func (m *DataMapping) GetMetricType() common.MetricType {
	if m != nil {
		return m.MetricType
	}
	return common.MetricType_METRICS_TYPE_UNDEFINED
}

func (m *DataMapping) GetColumns() []*Column {
	if m != nil {
		return m.Columns
	}
	return nil
}

func init() {
	proto.RegisterType((*DataMapping)(nil), "containersai.alameda.v1alpha1.datahub.datamappings.DataMapping")
}

func init() {
	proto.RegisterFile("alameda_api/v1alpha1/datahub/datamappings/datamapping.proto", fileDescriptor_1316c57bf27f7d7c)
}

var fileDescriptor_1316c57bf27f7d7c = []byte{
	// 276 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x3d, 0x6b, 0xfb, 0x30,
	0x10, 0xc6, 0x71, 0x02, 0xff, 0x3f, 0xc8, 0xd0, 0xc1, 0x93, 0xc9, 0x64, 0x3a, 0x79, 0xe9, 0xa9,
	0x76, 0x29, 0xf4, 0x65, 0x6b, 0x4b, 0xe9, 0xe2, 0xc5, 0xcd, 0xd2, 0x2c, 0xe6, 0xa2, 0x88, 0x58,
	0x60, 0xbd, 0x60, 0x29, 0x85, 0x7c, 0x95, 0x7e, 0xda, 0x12, 0xc9, 0x4e, 0xd3, 0x25, 0xb8, 0xd3,
	0x9d, 0x40, 0xcf, 0xef, 0xb9, 0x7b, 0x8e, 0x3c, 0x62, 0x87, 0x92, 0x6f, 0xb0, 0x41, 0x23, 0xe8,
	0x67, 0x81, 0x9d, 0x69, 0xb1, 0xa0, 0x1b, 0x74, 0xd8, 0xee, 0xd6, 0xbe, 0x4a, 0x34, 0x46, 0xa8,
	0xad, 0x3d, 0x7d, 0x80, 0xe9, 0xb5, 0xd3, 0x49, 0xc9, 0xb4, 0x72, 0x28, 0x14, 0xef, 0x2d, 0x0a,
	0x18, 0x48, 0x30, 0x52, 0x60, 0xa0, 0xc0, 0x29, 0x65, 0x51, 0x9c, 0x35, 0x64, 0x5a, 0x4a, 0xad,
	0xa8, 0xe4, 0xae, 0x17, 0xcc, 0x06, 0x9b, 0xc5, 0xed, 0xf4, 0x19, 0xdd, 0xde, 0xf0, 0x51, 0x76,
	0x7d, 0x56, 0x66, 0x59, 0xcb, 0x25, 0xfe, 0x52, 0x5c, 0x7e, 0xcd, 0x48, 0xfc, 0x82, 0x0e, 0xab,
	0x80, 0x4b, 0x56, 0x24, 0x0e, 0xdf, 0x1a, 0xc9, 0x1d, 0xa6, 0x51, 0x16, 0xe5, 0x71, 0x79, 0x0f,
	0xd3, 0xb6, 0x1e, 0x0c, 0xe0, 0xdd, 0xd7, 0x8a, 0x3b, 0xac, 0x89, 0x3d, 0xf6, 0xc9, 0x07, 0x89,
	0xc3, 0x96, 0xcd, 0x61, 0x82, 0x74, 0x96, 0x45, 0xf9, 0x45, 0x79, 0x37, 0x91, 0x1d, 0x62, 0x82,
	0xca, 0x03, 0x96, 0x7b, 0xc3, 0x6b, 0x22, 0x8f, 0x7d, 0xb2, 0x24, 0xff, 0x99, 0xee, 0x76, 0x52,
	0xd9, 0x74, 0x9e, 0xcd, 0xf3, 0xb8, 0x7c, 0x80, 0xbf, 0x1f, 0x0a, 0x9e, 0x3d, 0xa2, 0x1e, 0x51,
	0x4f, 0x6f, 0xab, 0xd7, 0xad, 0x70, 0x83, 0x3b, 0xfd, 0x01, 0x5e, 0xa1, 0xa0, 0x87, 0x84, 0x27,
	0x1f, 0x69, 0xfd, 0xcf, 0xa7, 0x7d, 0xf3, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x52, 0x95, 0x71, 0x45,
	0x7c, 0x02, 0x00, 0x00,
}
