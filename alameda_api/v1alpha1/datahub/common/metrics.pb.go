// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alameda_api/v1alpha1/datahub/common/metrics.proto

package common

import (
	fmt "fmt"
	common "github.com/containers-ai/api/common"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*
// Metric type. A metric may be either CPU or memory.
type MetricType int32

const (
	MetricType_METRICS_TYPE_UNDEFINED       MetricType = 0
	MetricType_CPU_USAGE_SECONDS_PERCENTAGE MetricType = 1
	MetricType_MEMORY_USAGE_BYTES           MetricType = 2
	MetricType_POWER_USAGE_WATTS            MetricType = 3
	MetricType_TEMPERATURE_CELSIUS          MetricType = 4
	MetricType_DUTY_CYCLE                   MetricType = 5
	MetricType_CURRENT_OFFSET               MetricType = 6
)

var MetricType_name = map[int32]string{
	0: "METRICS_TYPE_UNDEFINED",
	1: "CPU_USAGE_SECONDS_PERCENTAGE",
	2: "MEMORY_USAGE_BYTES",
	3: "POWER_USAGE_WATTS",
	4: "TEMPERATURE_CELSIUS",
	5: "DUTY_CYCLE",
	6: "CURRENT_OFFSET",
}

var MetricType_value = map[string]int32{
	"METRICS_TYPE_UNDEFINED":       0,
	"CPU_USAGE_SECONDS_PERCENTAGE": 1,
	"MEMORY_USAGE_BYTES":           2,
	"POWER_USAGE_WATTS":            3,
	"TEMPERATURE_CELSIUS":          4,
	"DUTY_CYCLE":                   5,
	"CURRENT_OFFSET":               6,
}

func (x MetricType) String() string {
	return proto.EnumName(MetricType_name, int32(x))
}

func (MetricType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0dcb68d43798345b, []int{0}
}

type ResourceName int32

const (
	ResourceName_RESOURCE_NAME_UNDEFINED ResourceName = 0
	ResourceName_CPU                     ResourceName = 1
	ResourceName_MEMORY                  ResourceName = 2
)

var ResourceName_name = map[int32]string{
	0: "RESOURCE_NAME_UNDEFINED",
	1: "CPU",
	2: "MEMORY",
}

var ResourceName_value = map[string]int32{
	"RESOURCE_NAME_UNDEFINED": 0,
	"CPU":                     1,
	"MEMORY":                  2,
}

func (x ResourceName) String() string {
	return proto.EnumName(ResourceName_name, int32(x))
}

func (ResourceName) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0dcb68d43798345b, []int{1}
}

//*
// Represents a data point of time-series metric data
type Sample struct {
	Time                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	NumValue             string               `protobuf:"bytes,3,opt,name=num_value,json=numValue,proto3" json:"num_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Sample) Reset()         { *m = Sample{} }
func (m *Sample) String() string { return proto.CompactTextString(m) }
func (*Sample) ProtoMessage()    {}
func (*Sample) Descriptor() ([]byte, []int) {
	return fileDescriptor_0dcb68d43798345b, []int{0}
}

func (m *Sample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sample.Unmarshal(m, b)
}
func (m *Sample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sample.Marshal(b, m, deterministic)
}
func (m *Sample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sample.Merge(m, src)
}
func (m *Sample) XXX_Size() int {
	return xxx_messageInfo_Sample.Size(m)
}
func (m *Sample) XXX_DiscardUnknown() {
	xxx_messageInfo_Sample.DiscardUnknown(m)
}

var xxx_messageInfo_Sample proto.InternalMessageInfo

func (m *Sample) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Sample) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *Sample) GetNumValue() string {
	if m != nil {
		return m.NumValue
	}
	return ""
}

//*
// Represents a piece of metreic data
type MetricData struct {
	MetricType           MetricType `protobuf:"varint,1,opt,name=metric_type,json=metricType,proto3,enum=containersai.alameda.v1alpha1.datahub.common.MetricType" json:"metric_type,omitempty"`
	Data                 []*Sample  `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Granularity          int64      `protobuf:"varint,3,opt,name=granularity,proto3" json:"granularity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MetricData) Reset()         { *m = MetricData{} }
func (m *MetricData) String() string { return proto.CompactTextString(m) }
func (*MetricData) ProtoMessage()    {}
func (*MetricData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0dcb68d43798345b, []int{1}
}

func (m *MetricData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricData.Unmarshal(m, b)
}
func (m *MetricData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricData.Marshal(b, m, deterministic)
}
func (m *MetricData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricData.Merge(m, src)
}
func (m *MetricData) XXX_Size() int {
	return xxx_messageInfo_MetricData.Size(m)
}
func (m *MetricData) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricData.DiscardUnknown(m)
}

var xxx_messageInfo_MetricData proto.InternalMessageInfo

func (m *MetricData) GetMetricType() MetricType {
	if m != nil {
		return m.MetricType
	}
	return MetricType_METRICS_TYPE_UNDEFINED
}

func (m *MetricData) GetData() []*Sample {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MetricData) GetGranularity() int64 {
	if m != nil {
		return m.Granularity
	}
	return 0
}

type ReadMetricData struct {
	MetricType           MetricType      `protobuf:"varint,1,opt,name=metric_type,json=metricType,proto3,enum=containersai.alameda.v1alpha1.datahub.common.MetricType" json:"metric_type,omitempty"`
	Columns              []string        `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`
	Groups               []*common.Group `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ReadMetricData) Reset()         { *m = ReadMetricData{} }
func (m *ReadMetricData) String() string { return proto.CompactTextString(m) }
func (*ReadMetricData) ProtoMessage()    {}
func (*ReadMetricData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0dcb68d43798345b, []int{2}
}

func (m *ReadMetricData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadMetricData.Unmarshal(m, b)
}
func (m *ReadMetricData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadMetricData.Marshal(b, m, deterministic)
}
func (m *ReadMetricData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadMetricData.Merge(m, src)
}
func (m *ReadMetricData) XXX_Size() int {
	return xxx_messageInfo_ReadMetricData.Size(m)
}
func (m *ReadMetricData) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadMetricData.DiscardUnknown(m)
}

var xxx_messageInfo_ReadMetricData proto.InternalMessageInfo

func (m *ReadMetricData) GetMetricType() MetricType {
	if m != nil {
		return m.MetricType
	}
	return MetricType_METRICS_TYPE_UNDEFINED
}

func (m *ReadMetricData) GetColumns() []string {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *ReadMetricData) GetGroups() []*common.Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

type WriteMetricData struct {
	MetricType           MetricType    `protobuf:"varint,1,opt,name=metric_type,json=metricType,proto3,enum=containersai.alameda.v1alpha1.datahub.common.MetricType" json:"metric_type,omitempty"`
	Columns              []string      `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`
	Rows                 []*common.Row `protobuf:"bytes,3,rep,name=rows,proto3" json:"rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *WriteMetricData) Reset()         { *m = WriteMetricData{} }
func (m *WriteMetricData) String() string { return proto.CompactTextString(m) }
func (*WriteMetricData) ProtoMessage()    {}
func (*WriteMetricData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0dcb68d43798345b, []int{3}
}

func (m *WriteMetricData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteMetricData.Unmarshal(m, b)
}
func (m *WriteMetricData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteMetricData.Marshal(b, m, deterministic)
}
func (m *WriteMetricData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteMetricData.Merge(m, src)
}
func (m *WriteMetricData) XXX_Size() int {
	return xxx_messageInfo_WriteMetricData.Size(m)
}
func (m *WriteMetricData) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteMetricData.DiscardUnknown(m)
}

var xxx_messageInfo_WriteMetricData proto.InternalMessageInfo

func (m *WriteMetricData) GetMetricType() MetricType {
	if m != nil {
		return m.MetricType
	}
	return MetricType_METRICS_TYPE_UNDEFINED
}

func (m *WriteMetricData) GetColumns() []string {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *WriteMetricData) GetRows() []*common.Row {
	if m != nil {
		return m.Rows
	}
	return nil
}

func init() {
	proto.RegisterEnum("containersai.alameda.v1alpha1.datahub.common.MetricType", MetricType_name, MetricType_value)
	proto.RegisterEnum("containersai.alameda.v1alpha1.datahub.common.ResourceName", ResourceName_name, ResourceName_value)
	proto.RegisterType((*Sample)(nil), "containersai.alameda.v1alpha1.datahub.common.Sample")
	proto.RegisterType((*MetricData)(nil), "containersai.alameda.v1alpha1.datahub.common.MetricData")
	proto.RegisterType((*ReadMetricData)(nil), "containersai.alameda.v1alpha1.datahub.common.ReadMetricData")
	proto.RegisterType((*WriteMetricData)(nil), "containersai.alameda.v1alpha1.datahub.common.WriteMetricData")
}

func init() {
	proto.RegisterFile("alameda_api/v1alpha1/datahub/common/metrics.proto", fileDescriptor_0dcb68d43798345b)
}

var fileDescriptor_0dcb68d43798345b = []byte{
	// 579 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x54, 0xdf, 0x6e, 0xd3, 0x3c,
	0x1c, 0xfd, 0xd2, 0xf6, 0xeb, 0xb6, 0x5f, 0x51, 0x09, 0x9e, 0xd8, 0xaa, 0x82, 0x44, 0xd5, 0xab,
	0x69, 0x1a, 0x89, 0x56, 0x40, 0xe2, 0x72, 0x5d, 0xea, 0x8d, 0x49, 0x4b, 0x1a, 0x39, 0x0e, 0x53,
	0xb8, 0xb1, 0xbc, 0xd6, 0x74, 0x91, 0x92, 0x38, 0xca, 0x9f, 0x4d, 0x7b, 0x07, 0x1e, 0x07, 0x21,
	0xf1, 0x1c, 0xbc, 0x10, 0x8a, 0x93, 0x0e, 0x26, 0x21, 0xc1, 0x6e, 0xe0, 0x2a, 0xf9, 0x39, 0xe7,
	0x9c, 0x9c, 0x73, 0x64, 0x1b, 0x0e, 0x79, 0xc4, 0x63, 0xb1, 0xe4, 0x8c, 0xa7, 0xa1, 0x79, 0x7d,
	0xc8, 0xa3, 0xf4, 0x8a, 0x1f, 0x9a, 0x4b, 0x5e, 0xf0, 0xab, 0xf2, 0xd2, 0x5c, 0xc8, 0x38, 0x96,
	0x89, 0x19, 0x8b, 0x22, 0x0b, 0x17, 0xb9, 0x91, 0x66, 0xb2, 0x90, 0xe8, 0x60, 0x21, 0x93, 0x82,
	0x87, 0x89, 0xc8, 0x72, 0x1e, 0x1a, 0x0d, 0xdf, 0x58, 0x73, 0x8d, 0x86, 0x6b, 0xd4, 0xdc, 0xe1,
	0x76, 0xa3, 0x51, 0x3f, 0x6a, 0x89, 0xe1, 0x8b, 0x95, 0x94, 0xab, 0x48, 0x98, 0x6a, 0xba, 0x2c,
	0x3f, 0x9a, 0x45, 0x18, 0x8b, 0xbc, 0xe0, 0x71, 0x5a, 0x03, 0xc6, 0x9f, 0x34, 0xe8, 0x7a, 0x3c,
	0x4e, 0x23, 0x81, 0x0c, 0xe8, 0x54, 0x5f, 0x07, 0xda, 0x48, 0xdb, 0xeb, 0x4d, 0x86, 0x46, 0x4d,
	0x35, 0xd6, 0x54, 0x83, 0xae, 0xa9, 0x44, 0xe1, 0xd0, 0x1b, 0xd8, 0x14, 0xc9, 0x92, 0x29, 0x4e,
	0xeb, 0xb7, 0x9c, 0x0d, 0x91, 0x2c, 0xab, 0x09, 0x3d, 0x83, 0xad, 0xa4, 0x8c, 0xd9, 0x35, 0x8f,
	0x4a, 0x31, 0x68, 0x8f, 0xb4, 0xbd, 0x2d, 0xb2, 0x99, 0x94, 0xf1, 0xfb, 0x6a, 0x1e, 0x7f, 0xd3,
	0x00, 0x6c, 0x55, 0xc2, 0x8c, 0x17, 0x1c, 0x05, 0xd0, 0xab, 0x2b, 0x61, 0xc5, 0x6d, 0x5a, 0x3b,
	0xeb, 0x4f, 0xde, 0x1a, 0x0f, 0xe9, 0xc5, 0xa8, 0xe5, 0xe8, 0x6d, 0x2a, 0x08, 0xc4, 0x77, 0xef,
	0xe8, 0x1d, 0x74, 0x2a, 0xe0, 0xa0, 0x35, 0x6a, 0xef, 0xf5, 0x26, 0xaf, 0x1f, 0xa6, 0x59, 0x37,
	0x46, 0x94, 0x02, 0x1a, 0x41, 0x6f, 0x95, 0xf1, 0xa4, 0x8c, 0x78, 0x16, 0x16, 0xb7, 0x2a, 0x52,
	0x9b, 0xfc, 0xbc, 0x34, 0xfe, 0xaa, 0x41, 0x9f, 0x08, 0xbe, 0xfc, 0x3b, 0xc9, 0x06, 0xb0, 0xb1,
	0x90, 0x51, 0x19, 0x27, 0xb9, 0x0a, 0xb7, 0x45, 0xd6, 0x23, 0x9a, 0x40, 0x77, 0x95, 0xc9, 0x32,
	0xcd, 0x07, 0x6d, 0x95, 0x7a, 0x78, 0xff, 0x7f, 0x8d, 0xec, 0x69, 0x05, 0x21, 0x0d, 0x72, 0xfc,
	0x59, 0x83, 0xc7, 0x17, 0x59, 0x58, 0x88, 0x7f, 0x6d, 0xfe, 0x00, 0x3a, 0x99, 0xbc, 0x59, 0x5b,
	0x1f, 0xfc, 0xd2, 0x3a, 0x91, 0x37, 0x44, 0xa1, 0xf6, 0xbf, 0xdc, 0x6d, 0x24, 0x25, 0x3b, 0x84,
	0x1d, 0x1b, 0x53, 0x72, 0x66, 0x79, 0x8c, 0x06, 0x2e, 0x66, 0xbe, 0x33, 0xc3, 0x27, 0x67, 0x0e,
	0x9e, 0xe9, 0xff, 0xa1, 0x11, 0x3c, 0xb7, 0x5c, 0x9f, 0xf9, 0xde, 0xf4, 0x14, 0x33, 0x0f, 0x5b,
	0x73, 0x67, 0xe6, 0x31, 0x17, 0x13, 0x0b, 0x3b, 0x74, 0x7a, 0x8a, 0x75, 0x0d, 0xed, 0x00, 0xb2,
	0xb1, 0x3d, 0x27, 0x41, 0x03, 0x3a, 0x0e, 0x28, 0xf6, 0xf4, 0x16, 0x7a, 0x0a, 0x4f, 0xdc, 0xf9,
	0x05, 0x26, 0xcd, 0xf2, 0xc5, 0x94, 0x52, 0x4f, 0x6f, 0xa3, 0x5d, 0xd8, 0xa6, 0xd8, 0x76, 0x31,
	0x99, 0x52, 0x9f, 0x60, 0x66, 0xe1, 0x73, 0xef, 0xcc, 0xf7, 0xf4, 0x0e, 0xea, 0x03, 0xcc, 0x7c,
	0x1a, 0x30, 0x2b, 0xb0, 0xce, 0xb1, 0xfe, 0x3f, 0x42, 0xd0, 0xb7, 0x7c, 0x42, 0xb0, 0x43, 0xd9,
	0xfc, 0xe4, 0xc4, 0xc3, 0x54, 0xef, 0xee, 0x1f, 0xc1, 0x23, 0x22, 0x72, 0x59, 0x66, 0x0b, 0xe1,
	0x70, 0x75, 0x5c, 0x76, 0x09, 0xf6, 0xe6, 0x3e, 0xb1, 0x30, 0x73, 0xa6, 0xf6, 0x7d, 0xeb, 0x1b,
	0xd0, 0xb6, 0x5c, 0x5f, 0xd7, 0x10, 0x40, 0xb7, 0x76, 0xa8, 0xb7, 0x8e, 0x8f, 0x3f, 0x1c, 0xad,
	0xc2, 0xa2, 0xa9, 0xda, 0xfc, 0x51, 0xd3, 0x4b, 0x1e, 0x9a, 0xd5, 0xe5, 0xf3, 0x07, 0x17, 0xd1,
	0x65, 0x57, 0x9d, 0xe0, 0x57, 0xdf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x05, 0x3d, 0x51, 0xdf, 0xb6,
	0x04, 0x00, 0x00,
}
