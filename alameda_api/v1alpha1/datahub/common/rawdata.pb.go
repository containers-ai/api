// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alameda_api/v1alpha1/datahub/common/rawdata.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WriteData struct {
	Columns              []string `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	Rows                 []*Row   `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteData) Reset()         { *m = WriteData{} }
func (m *WriteData) String() string { return proto.CompactTextString(m) }
func (*WriteData) ProtoMessage()    {}
func (*WriteData) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c60a4843d65ac4d, []int{0}
}

func (m *WriteData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteData.Unmarshal(m, b)
}
func (m *WriteData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteData.Marshal(b, m, deterministic)
}
func (m *WriteData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteData.Merge(m, src)
}
func (m *WriteData) XXX_Size() int {
	return xxx_messageInfo_WriteData.Size(m)
}
func (m *WriteData) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteData.DiscardUnknown(m)
}

var xxx_messageInfo_WriteData proto.InternalMessageInfo

func (m *WriteData) GetColumns() []string {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *WriteData) GetRows() []*Row {
	if m != nil {
		return m.Rows
	}
	return nil
}

type ReadData struct {
	Columns              []string `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	Groups               []*Group `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadData) Reset()         { *m = ReadData{} }
func (m *ReadData) String() string { return proto.CompactTextString(m) }
func (*ReadData) ProtoMessage()    {}
func (*ReadData) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c60a4843d65ac4d, []int{1}
}

func (m *ReadData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadData.Unmarshal(m, b)
}
func (m *ReadData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadData.Marshal(b, m, deterministic)
}
func (m *ReadData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadData.Merge(m, src)
}
func (m *ReadData) XXX_Size() int {
	return xxx_messageInfo_ReadData.Size(m)
}
func (m *ReadData) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadData.DiscardUnknown(m)
}

var xxx_messageInfo_ReadData proto.InternalMessageInfo

func (m *ReadData) GetColumns() []string {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *ReadData) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

type Row struct {
	Time                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Values               []string             `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Row) Reset()         { *m = Row{} }
func (m *Row) String() string { return proto.CompactTextString(m) }
func (*Row) ProtoMessage()    {}
func (*Row) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c60a4843d65ac4d, []int{2}
}

func (m *Row) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Row.Unmarshal(m, b)
}
func (m *Row) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Row.Marshal(b, m, deterministic)
}
func (m *Row) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Row.Merge(m, src)
}
func (m *Row) XXX_Size() int {
	return xxx_messageInfo_Row.Size(m)
}
func (m *Row) XXX_DiscardUnknown() {
	xxx_messageInfo_Row.DiscardUnknown(m)
}

var xxx_messageInfo_Row proto.InternalMessageInfo

func (m *Row) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Row) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type Group struct {
	Rows                 []*Row   `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c60a4843d65ac4d, []int{3}
}

func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (m *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(m, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetRows() []*Row {
	if m != nil {
		return m.Rows
	}
	return nil
}

func init() {
	proto.RegisterType((*WriteData)(nil), "containersai.alameda.v1alpha1.datahub.common.WriteData")
	proto.RegisterType((*ReadData)(nil), "containersai.alameda.v1alpha1.datahub.common.ReadData")
	proto.RegisterType((*Row)(nil), "containersai.alameda.v1alpha1.datahub.common.Row")
	proto.RegisterType((*Group)(nil), "containersai.alameda.v1alpha1.datahub.common.Group")
}

func init() {
	proto.RegisterFile("alameda_api/v1alpha1/datahub/common/rawdata.proto", fileDescriptor_9c60a4843d65ac4d)
}

var fileDescriptor_9c60a4843d65ac4d = []byte{
	// 288 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0x3f, 0x4f, 0xf3, 0x30,
	0x10, 0xc6, 0x95, 0xb7, 0x7d, 0x0b, 0x71, 0xb7, 0x0c, 0x28, 0xea, 0x42, 0x94, 0x29, 0x03, 0x9c,
	0x95, 0xf6, 0x0b, 0xa0, 0x0a, 0xc4, 0x80, 0x60, 0xb0, 0x90, 0x90, 0x58, 0xd0, 0x25, 0x31, 0xa9,
	0x25, 0x3b, 0x17, 0x1c, 0xa7, 0xf9, 0xfa, 0x28, 0xff, 0x60, 0x84, 0x8a, 0xf1, 0xec, 0xfb, 0x3d,
	0xcf, 0xdd, 0xa3, 0x63, 0x29, 0x6a, 0x34, 0xb2, 0xc0, 0x37, 0xac, 0x15, 0x3f, 0xa6, 0xa8, 0xeb,
	0x03, 0xa6, 0xbc, 0x40, 0x87, 0x87, 0x36, 0xe3, 0x39, 0x19, 0x43, 0x15, 0xb7, 0xd8, 0xf5, 0x2f,
	0x50, 0x5b, 0x72, 0x14, 0x5c, 0xe5, 0x54, 0x39, 0x54, 0x95, 0xb4, 0x0d, 0x2a, 0x98, 0x78, 0x98,
	0x59, 0x98, 0x58, 0x18, 0xd9, 0xcd, 0x65, 0x49, 0x54, 0x6a, 0xc9, 0x07, 0x36, 0x6b, 0xdf, 0xb9,
	0x53, 0x46, 0x36, 0x0e, 0x4d, 0x3d, 0xca, 0xc5, 0x9a, 0xf9, 0x2f, 0x56, 0x39, 0x79, 0x8b, 0x0e,
	0x83, 0x90, 0x9d, 0xe5, 0xa4, 0x5b, 0x53, 0x35, 0xa1, 0x17, 0x2d, 0x12, 0x5f, 0xcc, 0x65, 0x70,
	0xc7, 0x96, 0x96, 0xba, 0x26, 0xfc, 0x17, 0x2d, 0x92, 0xf5, 0x36, 0x85, 0x53, 0x86, 0x00, 0x41,
	0x9d, 0x18, 0xf0, 0xf8, 0x83, 0x9d, 0x0b, 0x89, 0xc5, 0x0f, 0x66, 0x0f, 0x6c, 0x55, 0x5a, 0x6a,
	0xeb, 0xd9, 0x6e, 0x77, 0x9a, 0xdd, 0x7d, 0xcf, 0x8a, 0x49, 0x22, 0x7e, 0x64, 0x0b, 0x41, 0x5d,
	0x00, 0x6c, 0xd9, 0xaf, 0x1e, 0x7a, 0x91, 0x97, 0xac, 0xb7, 0x1b, 0x18, 0x73, 0x81, 0x39, 0x17,
	0x78, 0x9e, 0x73, 0x11, 0x43, 0x5f, 0x70, 0xc1, 0x56, 0x47, 0xd4, 0xad, 0x1c, 0x67, 0xf0, 0xc5,
	0x54, 0xc5, 0x4f, 0xec, 0xff, 0xa0, 0xff, 0x95, 0x88, 0xf7, 0xa7, 0x44, 0xf6, 0xfb, 0xd7, 0x9b,
	0x52, 0xb9, 0xe9, 0x8b, 0x7f, 0x8b, 0x5c, 0xa3, 0xe2, 0xfd, 0x51, 0xfc, 0xe2, 0x40, 0xb2, 0xd5,
	0xb0, 0xc5, 0xee, 0x33, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x38, 0xc3, 0x1b, 0x4e, 0x02, 0x00, 0x00,
}
