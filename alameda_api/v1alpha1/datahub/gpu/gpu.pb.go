// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alameda_api/v1alpha1/datahub/gpu/gpu.proto

package gpu

import (
	fmt "fmt"
	common "github.com/containers-ai/api/alameda_api/v1alpha1/datahub/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Gpu struct {
	Name                 string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                 string       `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Metadata             *GpuMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec                 *GpuSpec     `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Gpu) Reset()         { *m = Gpu{} }
func (m *Gpu) String() string { return proto.CompactTextString(m) }
func (*Gpu) ProtoMessage()    {}
func (*Gpu) Descriptor() ([]byte, []int) {
	return fileDescriptor_07161a86dd75abc4, []int{0}
}

func (m *Gpu) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Gpu.Unmarshal(m, b)
}
func (m *Gpu) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Gpu.Marshal(b, m, deterministic)
}
func (m *Gpu) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Gpu.Merge(m, src)
}
func (m *Gpu) XXX_Size() int {
	return xxx_messageInfo_Gpu.Size(m)
}
func (m *Gpu) XXX_DiscardUnknown() {
	xxx_messageInfo_Gpu.DiscardUnknown(m)
}

var xxx_messageInfo_Gpu proto.InternalMessageInfo

func (m *Gpu) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Gpu) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Gpu) GetMetadata() *GpuMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Gpu) GetSpec() *GpuSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type GpuMetric struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                 string               `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Metadata             *GpuMetadata         `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	MetricData           []*common.MetricData `protobuf:"bytes,4,rep,name=metric_data,json=metricData,proto3" json:"metric_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GpuMetric) Reset()         { *m = GpuMetric{} }
func (m *GpuMetric) String() string { return proto.CompactTextString(m) }
func (*GpuMetric) ProtoMessage()    {}
func (*GpuMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_07161a86dd75abc4, []int{1}
}

func (m *GpuMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GpuMetric.Unmarshal(m, b)
}
func (m *GpuMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GpuMetric.Marshal(b, m, deterministic)
}
func (m *GpuMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GpuMetric.Merge(m, src)
}
func (m *GpuMetric) XXX_Size() int {
	return xxx_messageInfo_GpuMetric.Size(m)
}
func (m *GpuMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_GpuMetric.DiscardUnknown(m)
}

var xxx_messageInfo_GpuMetric proto.InternalMessageInfo

func (m *GpuMetric) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GpuMetric) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *GpuMetric) GetMetadata() *GpuMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *GpuMetric) GetMetricData() []*common.MetricData {
	if m != nil {
		return m.MetricData
	}
	return nil
}

type GpuPrediction struct {
	Name                    string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                    string               `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Metadata                *GpuMetadata         `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	ModelId                 string               `protobuf:"bytes,4,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	PredictionId            string               `protobuf:"bytes,5,opt,name=prediction_id,json=predictionId,proto3" json:"prediction_id,omitempty"`
	PredictedRawData        []*common.MetricData `protobuf:"bytes,6,rep,name=predicted_raw_data,json=predictedRawData,proto3" json:"predicted_raw_data,omitempty"`
	PredictedUpperboundData []*common.MetricData `protobuf:"bytes,7,rep,name=predicted_upperbound_data,json=predictedUpperboundData,proto3" json:"predicted_upperbound_data,omitempty"`
	PredictedLowerboundData []*common.MetricData `protobuf:"bytes,8,rep,name=predicted_lowerbound_data,json=predictedLowerboundData,proto3" json:"predicted_lowerbound_data,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}             `json:"-"`
	XXX_unrecognized        []byte               `json:"-"`
	XXX_sizecache           int32                `json:"-"`
}

func (m *GpuPrediction) Reset()         { *m = GpuPrediction{} }
func (m *GpuPrediction) String() string { return proto.CompactTextString(m) }
func (*GpuPrediction) ProtoMessage()    {}
func (*GpuPrediction) Descriptor() ([]byte, []int) {
	return fileDescriptor_07161a86dd75abc4, []int{2}
}

func (m *GpuPrediction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GpuPrediction.Unmarshal(m, b)
}
func (m *GpuPrediction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GpuPrediction.Marshal(b, m, deterministic)
}
func (m *GpuPrediction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GpuPrediction.Merge(m, src)
}
func (m *GpuPrediction) XXX_Size() int {
	return xxx_messageInfo_GpuPrediction.Size(m)
}
func (m *GpuPrediction) XXX_DiscardUnknown() {
	xxx_messageInfo_GpuPrediction.DiscardUnknown(m)
}

var xxx_messageInfo_GpuPrediction proto.InternalMessageInfo

func (m *GpuPrediction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GpuPrediction) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *GpuPrediction) GetMetadata() *GpuMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *GpuPrediction) GetModelId() string {
	if m != nil {
		return m.ModelId
	}
	return ""
}

func (m *GpuPrediction) GetPredictionId() string {
	if m != nil {
		return m.PredictionId
	}
	return ""
}

func (m *GpuPrediction) GetPredictedRawData() []*common.MetricData {
	if m != nil {
		return m.PredictedRawData
	}
	return nil
}

func (m *GpuPrediction) GetPredictedUpperboundData() []*common.MetricData {
	if m != nil {
		return m.PredictedUpperboundData
	}
	return nil
}

func (m *GpuPrediction) GetPredictedLowerboundData() []*common.MetricData {
	if m != nil {
		return m.PredictedLowerboundData
	}
	return nil
}

func init() {
	proto.RegisterType((*Gpu)(nil), "containersai.alameda.v1alpha1.datahub.gpu.Gpu")
	proto.RegisterType((*GpuMetric)(nil), "containersai.alameda.v1alpha1.datahub.gpu.GpuMetric")
	proto.RegisterType((*GpuPrediction)(nil), "containersai.alameda.v1alpha1.datahub.gpu.GpuPrediction")
}

func init() {
	proto.RegisterFile("alameda_api/v1alpha1/datahub/gpu/gpu.proto", fileDescriptor_07161a86dd75abc4)
}

var fileDescriptor_07161a86dd75abc4 = []byte{
	// 397 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x94, 0xcf, 0x4a, 0x2b, 0x31,
	0x14, 0xc6, 0x99, 0xdb, 0xb9, 0xfd, 0x93, 0xde, 0xc2, 0x25, 0x1b, 0xa7, 0x5d, 0x95, 0xba, 0xa9,
	0xa2, 0x19, 0x5a, 0x41, 0xdc, 0x88, 0x20, 0x62, 0x29, 0x28, 0xc8, 0x88, 0x0b, 0xdd, 0x0c, 0xe9,
	0x24, 0xb6, 0x81, 0xc9, 0x24, 0x4c, 0x13, 0x8b, 0x4f, 0xe3, 0xf3, 0xf8, 0x1a, 0x3e, 0x89, 0x24,
	0x19, 0xa7, 0x88, 0x60, 0x2b, 0x15, 0xba, 0x18, 0x38, 0x39, 0x67, 0xbe, 0xdf, 0x97, 0x93, 0x03,
	0x07, 0xec, 0xe3, 0x14, 0x73, 0x4a, 0x70, 0x8c, 0x25, 0x0b, 0x9f, 0x06, 0x38, 0x95, 0x33, 0x3c,
	0x08, 0x09, 0x56, 0x78, 0xa6, 0x27, 0xe1, 0x54, 0x6a, 0xf3, 0x21, 0x99, 0x0b, 0x25, 0xe0, 0x5e,
	0x22, 0x32, 0x85, 0x59, 0x46, 0xf3, 0x39, 0x66, 0xa8, 0x10, 0xa2, 0x0f, 0x11, 0x2a, 0x44, 0x68,
	0x2a, 0x75, 0x67, 0xf0, 0x2d, 0x36, 0x11, 0x9c, 0x8b, 0x2c, 0xe4, 0x54, 0xe5, 0x2c, 0x99, 0x3b,
	0x7a, 0xe7, 0x60, 0xe5, 0x4d, 0xd4, 0xb3, 0xa4, 0xc5, 0xdf, 0xbd, 0x57, 0x0f, 0x54, 0x46, 0x52,
	0x43, 0x08, 0xfc, 0x0c, 0x73, 0x1a, 0x78, 0x5d, 0xaf, 0xdf, 0x88, 0x6c, 0x6c, 0x72, 0x5a, 0x33,
	0x12, 0xfc, 0x71, 0x39, 0x13, 0xc3, 0x08, 0xd4, 0x39, 0x55, 0xd8, 0xe0, 0x82, 0x4a, 0xd7, 0xeb,
	0x37, 0x87, 0xc7, 0x68, 0xed, 0x76, 0xd0, 0x48, 0xea, 0xeb, 0x42, 0x1d, 0x95, 0x1c, 0x78, 0x09,
	0xfc, 0xb9, 0xa4, 0x49, 0xe0, 0x5b, 0xde, 0xf0, 0x67, 0xbc, 0x5b, 0x49, 0x93, 0xc8, 0xea, 0x7b,
	0x6f, 0x1e, 0x68, 0x38, 0x87, 0x9c, 0x25, 0x5b, 0xed, 0xe8, 0x1e, 0x34, 0xdd, 0x50, 0x62, 0x8b,
	0xf5, 0xbb, 0x95, 0x7e, 0x73, 0x78, 0xb2, 0x26, 0xd6, 0x4d, 0x15, 0xb9, 0x36, 0x2e, 0x0c, 0x18,
	0xf0, 0x32, 0xee, 0xbd, 0xf8, 0xa0, 0x35, 0x92, 0xfa, 0x26, 0xa7, 0x84, 0x25, 0x8a, 0x89, 0x6c,
	0xab, 0x8d, 0xb6, 0x41, 0x9d, 0x0b, 0x42, 0xd3, 0x98, 0x11, 0x3b, 0xbe, 0x46, 0x54, 0xb3, 0xe7,
	0x31, 0x81, 0xbb, 0xa0, 0x25, 0xcb, 0x4b, 0x9a, 0xfa, 0x5f, 0x5b, 0xff, 0xb7, 0x4c, 0x8e, 0x09,
	0x7c, 0x04, 0xb0, 0x38, 0x53, 0x12, 0xe7, 0x78, 0xe1, 0xde, 0xab, 0xba, 0xe1, 0x7b, 0xfd, 0x2f,
	0x99, 0x11, 0x5e, 0x98, 0x0c, 0x54, 0xa0, 0xbd, 0xf4, 0xd1, 0x52, 0xd2, 0x7c, 0x22, 0x74, 0x46,
	0x9c, 0x5d, 0x6d, 0x43, 0xbb, 0x9d, 0x12, 0x7d, 0x57, 0x92, 0xbf, 0xba, 0xa6, 0x62, 0xf1, 0xc9,
	0xb5, 0xfe, 0x6b, 0xae, 0x57, 0x25, 0xd9, 0x14, 0xce, 0xcf, 0x1e, 0x4e, 0xa7, 0x4c, 0x15, 0xa2,
	0x70, 0x89, 0x3f, 0xc4, 0x2c, 0x34, 0x3b, 0x61, 0xd5, 0x7e, 0x98, 0x54, 0xed, 0x6a, 0x38, 0x7a,
	0x0f, 0x00, 0x00, 0xff, 0xff, 0x81, 0x51, 0xd1, 0x76, 0xd4, 0x04, 0x00, 0x00,
}
