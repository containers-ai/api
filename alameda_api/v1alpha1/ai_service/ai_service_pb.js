// source: alameda_api/v1alpha1/ai_service/ai_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.containers_ai.alameda.v1alpha1.ai_service.Object', null, global);
goog.exportSymbol('proto.containers_ai.alameda.v1alpha1.ai_service.Object.Type', null, global);
goog.exportSymbol('proto.containers_ai.alameda.v1alpha1.ai_service.Pod', null, global);
goog.exportSymbol('proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest', null, global);
goog.exportSymbol('proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest', null, global);
goog.exportSymbol('proto.containers_ai.alameda.v1alpha1.ai_service.RecommendationPolicy', null, global);
goog.exportSymbol('proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Pod = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.containers_ai.alameda.v1alpha1.ai_service.Pod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containers_ai.alameda.v1alpha1.ai_service.Pod.displayName = 'proto.containers_ai.alameda.v1alpha1.ai_service.Pod';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.containers_ai.alameda.v1alpha1.ai_service.Object, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containers_ai.alameda.v1alpha1.ai_service.Object.displayName = 'proto.containers_ai.alameda.v1alpha1.ai_service.Object';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest.repeatedFields_, null);
};
goog.inherits(proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest.displayName = 'proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest.repeatedFields_, null);
};
goog.inherits(proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest.displayName = 'proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse.displayName = 'proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Pod.prototype.toObject = function(opt_includeInstance) {
  return proto.containers_ai.alameda.v1alpha1.ai_service.Pod.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.Pod} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Pod.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resourcelink: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.Pod}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Pod.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containers_ai.alameda.v1alpha1.ai_service.Pod;
  return proto.containers_ai.alameda.v1alpha1.ai_service.Pod.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.Pod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.Pod}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Pod.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourcelink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Pod.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containers_ai.alameda.v1alpha1.ai_service.Pod.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.Pod} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Pod.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResourcelink();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string node_name = 1;
 * @return {string}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Pod.prototype.getNodeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.Pod} returns this
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Pod.prototype.setNodeName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string resourceLink = 2;
 * @return {string}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Pod.prototype.getResourcelink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.Pod} returns this
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Pod.prototype.setResourcelink = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.prototype.toObject = function(opt_includeInstance) {
  return proto.containers_ai.alameda.v1alpha1.ai_service.Object.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.Object} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    policy: jspb.Message.getFieldWithDefault(msg, 2, 0),
    uid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pod: (f = msg.getPod()) && proto.containers_ai.alameda.v1alpha1.ai_service.Pod.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.Object}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containers_ai.alameda.v1alpha1.ai_service.Object;
  return proto.containers_ai.alameda.v1alpha1.ai_service.Object.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.Object} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.Object}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.containers_ai.alameda.v1alpha1.ai_service.Object.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {!proto.containers_ai.alameda.v1alpha1.ai_service.RecommendationPolicy} */ (reader.readEnum());
      msg.setPolicy(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = new proto.containers_ai.alameda.v1alpha1.ai_service.Pod;
      reader.readMessage(value,proto.containers_ai.alameda.v1alpha1.ai_service.Pod.deserializeBinaryFromReader);
      msg.setPod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containers_ai.alameda.v1alpha1.ai_service.Object.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.Object} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPolicy();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPod();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.containers_ai.alameda.v1alpha1.ai_service.Pod.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.Type = {
  POD: 0,
  NODE: 1
};

/**
 * optional Type type = 1;
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.Object.Type}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.prototype.getType = function() {
  return /** @type {!proto.containers_ai.alameda.v1alpha1.ai_service.Object.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.Object.Type} value
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.Object} returns this
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional RecommendationPolicy policy = 2;
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.RecommendationPolicy}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.prototype.getPolicy = function() {
  return /** @type {!proto.containers_ai.alameda.v1alpha1.ai_service.RecommendationPolicy} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.RecommendationPolicy} value
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.Object} returns this
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.prototype.setPolicy = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string uid = 3;
 * @return {string}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.Object} returns this
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string namespace = 4;
 * @return {string}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.Object} returns this
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.Object} returns this
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Pod pod = 6;
 * @return {?proto.containers_ai.alameda.v1alpha1.ai_service.Pod}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.prototype.getPod = function() {
  return /** @type{?proto.containers_ai.alameda.v1alpha1.ai_service.Pod} */ (
    jspb.Message.getWrapperField(this, proto.containers_ai.alameda.v1alpha1.ai_service.Pod, 6));
};


/**
 * @param {?proto.containers_ai.alameda.v1alpha1.ai_service.Pod|undefined} value
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.Object} returns this
*/
proto.containers_ai.alameda.v1alpha1.ai_service.Object.prototype.setPod = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.Object} returns this
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.prototype.clearPod = function() {
  return this.setPod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.Object.prototype.hasPod = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectsList: jspb.Message.toObjectList(msg.getObjectsList(),
    proto.containers_ai.alameda.v1alpha1.ai_service.Object.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest;
  return proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.containers_ai.alameda.v1alpha1.ai_service.Object;
      reader.readMessage(value,proto.containers_ai.alameda.v1alpha1.ai_service.Object.deserializeBinaryFromReader);
      msg.addObjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.containers_ai.alameda.v1alpha1.ai_service.Object.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Object objects = 1;
 * @return {!Array<!proto.containers_ai.alameda.v1alpha1.ai_service.Object>}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest.prototype.getObjectsList = function() {
  return /** @type{!Array<!proto.containers_ai.alameda.v1alpha1.ai_service.Object>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.containers_ai.alameda.v1alpha1.ai_service.Object, 1));
};


/**
 * @param {!Array<!proto.containers_ai.alameda.v1alpha1.ai_service.Object>} value
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest} returns this
*/
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest.prototype.setObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.Object=} opt_value
 * @param {number=} opt_index
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.Object}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest.prototype.addObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.containers_ai.alameda.v1alpha1.ai_service.Object, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest} returns this
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListCreationRequest.prototype.clearObjectsList = function() {
  return this.setObjectsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectsList: jspb.Message.toObjectList(msg.getObjectsList(),
    proto.containers_ai.alameda.v1alpha1.ai_service.Object.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest;
  return proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.containers_ai.alameda.v1alpha1.ai_service.Object;
      reader.readMessage(value,proto.containers_ai.alameda.v1alpha1.ai_service.Object.deserializeBinaryFromReader);
      msg.addObjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.containers_ai.alameda.v1alpha1.ai_service.Object.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Object objects = 1;
 * @return {!Array<!proto.containers_ai.alameda.v1alpha1.ai_service.Object>}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest.prototype.getObjectsList = function() {
  return /** @type{!Array<!proto.containers_ai.alameda.v1alpha1.ai_service.Object>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.containers_ai.alameda.v1alpha1.ai_service.Object, 1));
};


/**
 * @param {!Array<!proto.containers_ai.alameda.v1alpha1.ai_service.Object>} value
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest} returns this
*/
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest.prototype.setObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.Object=} opt_value
 * @param {number=} opt_index
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.Object}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest.prototype.addObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.containers_ai.alameda.v1alpha1.ai_service.Object, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest} returns this
 */
proto.containers_ai.alameda.v1alpha1.ai_service.PredictionObjectListDeletionRequest.prototype.clearObjectsList = function() {
  return this.setObjectsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse;
  return proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse} returns this
 */
proto.containers_ai.alameda.v1alpha1.ai_service.RequestResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.containers_ai.alameda.v1alpha1.ai_service.RecommendationPolicy = {
  STABLE: 0,
  COMPACT: 1
};

goog.object.extend(exports, proto.containers_ai.alameda.v1alpha1.ai_service);
